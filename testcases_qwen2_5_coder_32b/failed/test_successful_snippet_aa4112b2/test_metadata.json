{
  "cobol_file": {
    "file_name": "successful_snippet_aa4112b2.cob",
    "content": " \n\n       identification division.\n       program-id.             bio.\n       environment division. \n      *************************************************************\n      **** To execute on command line enter program name followed \n      **** by birth date ccyymmdd and then target date. \n      **** Example: bio 18090102 18631117\n      **** Will display the three cycles:  \n      **** Physcial 23 days, Emotional 28 days, Mental 33 days \n      **** for that date. \n      ****\n      *************************************************************\n       configuration section.\n       source-computer.\n           System76 \n      *           with debugging mode\n           .\n       repository.    \n           function all intrinsic.\n\n       data division.\n       working-storage section.\n       01 w-d1                                              pic x(08).\n       01 w-d2                                              pic x(08).\n       01 n-d1                                              pic 9(08).\n       01 n-d2                                              pic 9(08).\n       01 w-i1                                       comp-x pic x(04).\n       01 w-i2                                       comp-x pic x(04).\n       01 w-days                                            pic 9(07).\n       01 arg-knt                                    comp-5 pic x(01).\n       01 bx                                       pic 9.    \n       01 bio-tbl  value 'Physical 23Emotional28Mental   33'.\n               05  bio-entry  occurs 3 times.\n                   10  bio-cyc                     pic x(09).\n                   10  bio-lth                     pic 9(02).\n       01 bio-data occurs 3 times.\n          05  bio-mod                              pic 9(02).\n          05  bio-sin                              pic s999v9.     \n          05  bio-dsc                              pic x(09). \n\n       procedure division.\n           accept arg-knt from argument-number\n           if arg-knt <> 2\n           then\n            display 'two arguments are required:' upon SYSERR\n            display ' 1. first  date ccyymmdd'    upon SYSERR\n            display ' 2. second date ccyymmdd'    upon SYSERR\n            stop run returning -1\n           end-if\n           accept w-d1 from argument-value\n           if  w-d1 not numeric\n               display ' first date not numeric ' upon syserr\n               move 2 to return-code\n               stop run \n           end-if\n           move w-d1 to n-d1\n           if  (n-d1 > 99991231)\n               display ' first date must be less than 99991232' \n                       upon syserr\n               move 3 to return-code\n               stop run\n           end-if\n           if  (n-d1 < 16010101)\n               display ' first date must be greater than 16010100' \n                       upon syserr\n               move 4 to return-code\n               stop run\n           end-if\n           if  ((n-d1(5:2) = '00') \n               or\n                (n-d1(5:2) > '12'))\n               display ' invalid month for first date ' upon syserr\n               move 5 to return-code\n               stop run\n           end-if\n           if  ((n-d1(7:2) = '00')\n               or\n                (n-d1(7:2) > '31'))\n               display ' invalid day for first date ' upon syserr\n               move 6 to return-code\n               stop run\n           end-if\n           accept w-d2 from argument-value\n           if  w-d2 not numeric\n               display 'second date not numeric ' upon syserr\n               move 12 to return-code\n               stop run\n           end-if\n           move w-d2 to n-d2\n           if  (n-d2 > 99991231)\n               display ' second date must be less than 99991232' \n                       upon syserr\n               move 13 to return-code\n               stop run\n           end-if\n           if  (n-d2 < 16010101)\n               display ' second date must be greater than 16010100'  \n                       upon syserr\n               move 14 to return-code\n               stop run\n           end-if\n           if  ((n-d2(5:2) = '00')\n               or\n                (n-d2(5:2) > '12'))\n               display ' invalid month for second date ' upon syserr\n               move 15 to return-code\n               stop run\n           end-if\n           if  ((n-d2(7:2) = '00')\n               or\n                (n-d2(7:2) > '31'))\n               display ' invalid day for second date ' upon syserr\n               move 16 to return-code\n               stop run\n           end-if\n           move w-d1 to n-d1\n           move w-d2 to n-d2\n           move integer-of-date(n-d1) to w-i1\n           move integer-of-date(n-d2) to w-i2\n           compute w-days = w-i1 - w-i2\n           display w-days\n           perform  varying  bx from 1 by 1 until bx greater than 3 \n               move mod(w-days, bio-lth(bx)) to bio-mod(bx) \n               compute bio-sin(bx) rounded \n                  = 100 * sin(2 * PI * bio-mod(bx) / bio-lth(bx)) \n               end-compute\n               display bio-cyc(bx) \" \" \n                       bio-mod(bx) \":\" \n                       bio-sin(bx) \"%\" with no advancing \n               end-display                 \n               if  bio-sin(bx) > 95\n                   move  \" peak\" to bio-dsc(bx)\n               end-if \n               if  bio-sin(bx) < -95\n                   move  \" valley\" to bio-dsc(bx)\n               end-if   \n               if  abs(bio-sin(bx)) < 5\n                   move \" critical\" to bio-dsc(bx)  \n               end-if        \n               display bio-dsc(bx)  \n           end-perform\n           move 0 to return-code\n           goback\n           .\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "0200000000000000\n0220230101202312\n0220230515202306\n0220221101202212\n0220210101202112\n0220200101202012\n0220190101201912\n0220180101201812\n0000000000000000"
  }
}