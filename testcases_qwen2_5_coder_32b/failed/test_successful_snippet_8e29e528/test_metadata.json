{
  "cobol_file": {
    "file_name": "successful_snippet_8e29e528.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AdventOfCode2019-6a.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       SELECT InputFile ASSIGN TO InputPath\n       ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n       FILE SECTION.\n       FD InputFile   RECORD CONTAINS 7 CHARACTERS.\n       01 InputRec.\n          02 Orbitee  PIC X(3).\n          02 FILLER   PIC X(1).\n          02 Orbiter  PIC X(3).\n          02 FILLER   PIC X(10).\n       88 EndOfFile   VALUE HIGH-VALUES.\n\n       WORKING-STORAGE SECTION.\n       01 InputPath  PIC X(50).\n\n       01 ObjsLen    PIC 9(4).\n       01 Objs       PIC X(3) OCCURS 1 TO 9999 TIMES \n           DEPENDING ON ObjsLen.\n\n       01 OrbsLen    PIC 9(4).\n       01 Orbs       OCCURS 1 TO 9999 TIMES\n           DEPENDING ON OrbsLen.\n          02 Orbitee PIC 9(4).\n          02 Orbiter PIC 9(4).\n\n       01 Name       PIC X(3).\n       01 Obj        PIC 9(4).\n\n       01 ListLen    PIC 9(4).\n       01 List       PIC 9(4) OCCURS 1 TO 9999 TIMES \n           DEPENDING ON ListLen.\n       01 Lvl        PIC 9(4).\n       01 LvlEnd     PIC 9(4).\n       01 Total      PIC 9(20).\n\n       01 Idx        PIC 9(4).\n       01 Jdx        PIC 9(4).\n\n       PROCEDURE DIVISION.\n       Begin.\n           ACCEPT InputPath FROM ARGUMENT-VALUE.\n           OPEN INPUT InputFile.\n           READ InputFile\n            AT END SET EndOfFile TO TRUE\n           END-READ.\n\n           MOVE 0 TO ObjsLen.\n           MOVE 1 TO OrbsLen.\n\n           PERFORM UNTIL EndOfFile\n\n            MOVE Orbitee OF InputRec TO Name\n            PERFORM FindObj\n            IF Obj IS GREATER THAN ObjsLen\n             MOVE NAME TO Objs(Obj)\n             ADD 1 TO ObjsLen\n            END-IF\n            MOVE Obj TO Orbitee OF Orbs (OrbsLen)\n\n            MOVE Orbiter OF InputRec TO Name\n            PERFORM FindObj\n            IF Obj IS GREATER THAN ObjsLen\n             MOVE NAME TO Objs(Obj)\n             ADD 1 TO ObjsLen\n            END-IF\n            MOVE Obj TO Orbiter OF Orbs (OrbsLen)\n\n            ADD 1 TO OrbsLen\n\n            READ InputFile\n             AT END SET EndOfFile TO TRUE\n            END-READ\n           END-PERFORM.\n\n           CLOSE InputFile.\n\n           MOVE \"COM\" TO Name.\n           PERFORM FindObj.\n           MOVE Obj TO List(1).\n           MOVE 1 TO ListLen.\n           MOVE 1 TO LvlEnd.\n           MOVE 0 TO Lvl.\n           MOVE 0 TO Total.\n\n           PERFORM VARYING Idx FROM 1 UNTIL Idx IS GREATER THAN ListLen\n            IF Idx IS GREATER THAN LvlEnd\n             MOVE ListLen TO LvlEnd\n             ADD 1 TO Lvl\n            END-IF\n            PERFORM VARYING Jdx FROM 1 UNTIL Jdx IS GREATER THAN OrbsLen\n             IF Orbitee OF Orbs (Jdx) IS EQUAL TO List(Idx)\n              COMPUTE Total = Total + Lvl + 1\n              ADD 1 TO ListLen\n              MOVE Orbiter OF Orbs (Jdx) TO List(ListLen)\n             END-IF\n            END-PERFORM\n           END-PERFORM.\n\n           DISPLAY Total.\n\n       FindObj SECTION.\n           PERFORM VARYING Idx FROM 1 UNTIL Idx > ObjsLen\n            IF Objs(Idx) IS EQUAL TO Name\n             EXIT PERFORM\n            END-IF\n           END-PERFORM.\n           MOVE Idx TO Obj.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "/data/input/file1.txt                                        \n/data/input/file2.txt                                        \n/data/input/file3.txt                                        \n/data/input/file4.txt                                        \n/data/input/file5.txt                                        \n/data/input/file6.txt                                        \n/data/input/file7.txt                                        \n/data/input/file8.txt"
  }
}