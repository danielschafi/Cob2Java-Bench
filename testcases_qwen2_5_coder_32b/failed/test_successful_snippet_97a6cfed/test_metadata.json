{
  "cobol_file": {
    "file_name": "successful_snippet_97a6cfed.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NONSQR.\n       \n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01 NEWTON.\n          03 SQR-INP           PIC 9(7)V9(5).\n          03 SQUARE-ROOT       PIC 9(7)V9(5).\n          03 FILLER            REDEFINES SQUARE-ROOT.\n             05 FILLER         PIC 9(7).\n             05 FILLER         PIC 9(5).\n                88 SQUARE      VALUE ZERO.\n          03 SQR-TEMP          PIC 9(7)V9(5).\n       01 SEQUENCE-VARS.\n          03 N                 PIC 9(7).\n          03 SEQ               PIC 9(7).\n       01 SMALL-FMT.\n          03 N-O               PIC Z9.\n          03 FILLER            PIC XX VALUE \": \".  \n          03 SEQ-O             PIC Z9.\n          \n       PROCEDURE DIVISION.\n       BEGIN.\n           DISPLAY \"Sequence of non-squares from 1 to 22:\"\n           PERFORM SMALL-NUMS VARYING N FROM 1 BY 1\n               UNTIL N IS GREATER THAN 22.\n           \n           DISPLAY SPACES.\n           DISPLAY \"Checking items up to 1 million...\"\n           PERFORM CHECK-NONSQUARE VARYING N FROM 1 BY 1\n               UNTIL SQUARE OR N IS GREATER THAN 1000000.\n           \n           IF SQUARE, DISPLAY \"Square found at N = \" N,\n           ELSE, DISPLAY \"No squares found up to 1 million.\".\n           STOP RUN.\n           \n       SMALL-NUMS.\n           PERFORM NONSQUARE.\n           MOVE N TO N-O.\n           MOVE SEQ TO SEQ-O.\n           DISPLAY SMALL-FMT.\n           \n       CHECK-NONSQUARE.\n           PERFORM NONSQUARE.\n           MOVE SEQ TO SQR-INP.\n           PERFORM SQRT.\n       \n       NONSQUARE.\n           MOVE N TO SQR-INP.\n           PERFORM SQRT.\n           ADD 0.5, SQUARE-ROOT GIVING SEQ.\n           ADD N TO SEQ.\n       \n       SQRT.\n           MOVE SQR-INP TO SQUARE-ROOT.\n           COMPUTE SQR-TEMP = \n               (SQUARE-ROOT + SQR-INP / SQUARE-ROOT) / 2.\n           PERFORM SQRT-LOOP UNTIL SQUARE-ROOT IS EQUAL TO SQR-TEMP.\n       SQRT-LOOP.\n           MOVE SQR-TEMP TO SQUARE-ROOT.\n           COMPUTE SQR-TEMP = \n               (SQUARE-ROOT + SQR-INP / SQUARE-ROOT) / 2.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}