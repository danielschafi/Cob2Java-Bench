{
  "cobol_file": {
    "file_name": "successful_snippet_3fc55614.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. test-balanced-brackets.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  True-Val  CONSTANT 0.\n       01  False-Val CONSTANT 1.\n\n       LOCAL-STORAGE SECTION.\n       01  current-time        PIC 9(10).\n\n       01  bracket-type        PIC 9.\n           88 add-open-bracket VALUE 1.\n\n       01  bracket-string-area.\n           03  bracket-string  PIC X(10) OCCURS 10 TIMES.\n\n       01  i                   PIC 999.\n       01  j                   PIC 999.\n\n       PROCEDURE DIVISION.\n           \n           MOVE FUNCTION CURRENT-DATE (7:10) TO current-time\n           MOVE FUNCTION RANDOM(current-time) TO current-time\n\n\n           \n           PERFORM VARYING i FROM 1 BY 1 UNTIL 10 < i\n               PERFORM VARYING j FROM 1 BY 1 UNTIL i < j\n                   COMPUTE bracket-type =\n                       FUNCTION REM(FUNCTION RANDOM * 1000, 2)\n\n                   IF add-open-bracket\n                       MOVE \"[\" TO bracket-string (i) (j:1)\n                   ELSE\n                       MOVE \"]\" TO bracket-string (i) (j:1)\n                   END-IF\n               END-PERFORM\n           END-PERFORM\n\n           \n           PERFORM VARYING i FROM 1 BY 1 UNTIL 10 < i\n               CALL \"check-if-balanced\" USING bracket-string (i)\n               IF RETURN-CODE = True-Val\n                   DISPLAY FUNCTION TRIM(bracket-string (i))\n                       \" is balanced.\"\n               ELSE\n                   DISPLAY FUNCTION TRIM(bracket-string (i))\n                       \" is not balanced.\"\n               END-IF\n           END-PERFORM\n\n           GOBACK\n           .\n\n       END PROGRAM test-balanced-brackets.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. check-if-balanced.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  True-Val  CONSTANT 0.\n       01  False-Val CONSTANT 1.\n\n       LOCAL-STORAGE SECTION.\n       01  nesting-level  PIC S999.\n       01  i              PIC 999.\n\n       LINKAGE SECTION.\n       01  bracket-string PIC X(100).\n\n       PROCEDURE DIVISION USING bracket-string.\n           PERFORM VARYING i FROM 1 BY 1\n                   UNTIL (100 < i)\n                      OR (bracket-string (i:1) = SPACE)\n                      OR (nesting-level < 0)\n               IF bracket-string (i:1) = \"[\"\n                   ADD 1 TO nesting-level\n               ELSE\n                   SUBTRACT 1 FROM nesting-level\n                   IF nesting-level < 0\n                       MOVE False-Val TO RETURN-CODE \n                       GOBACK\n                   END-IF\n               END-IF\n           END-PERFORM\n           \n           IF nesting-level = 0\n               MOVE True-Val TO RETURN-CODE\n           ELSE\n               MOVE False-Val TO RETURN-CODE\n           END-IF\n           \n           GOBACK\n           . \n\n       END PROGRAM check-if-balanced.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}