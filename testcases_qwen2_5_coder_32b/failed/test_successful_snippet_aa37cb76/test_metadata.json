{
  "cobol_file": {
    "file_name": "successful_snippet_aa37cb76.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. langtons-ant.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       78  Grid-Size               VALUE 100.\n       01  grid-area.\n           03  grid-x              OCCURS Grid-Size TIMES.\n               05  grid-y          OCCURS Grid-Size TIMES.\n                   07  cell-colour PIC X VALUE \"W\".\n                       88  black   VALUE \"B\".\n                       88  white   VALUE \"W\".\n\n       01  ant-x                   PIC 999.\n       01  ant-y                   PIC 999.\n\n       01  ant-direction           PIC 9.\n           88  upward              VALUE 0.\n           88  rightward           VALUE 1.\n           88  downward            VALUE 2.\n           88  leftward            VALUE 3.\n\n       78  Pause-Time-Ns           VALUE 10000000.\n\n       01  display-y               PIC 999.\n\n       78  Black-Background        VALUE 0.\n       78  White-Background        VALUE 7.\n\n       01  i                       PIC 999.\n       01  j                       PIC 999.\n\n       01  pause                   PIC X.\n\n       PROCEDURE DIVISION.\n       main-line.\n           DIVIDE Grid-Size BY 2 GIVING ant-x, ant-y\n\n           PERFORM display-initial-grid\n           PERFORM UNTIL (ant-x = Grid-Size OR 0)\n                   OR (ant-y = Grid-Size OR 0)\n               PERFORM step-simulation\n               CALL \"CBL_OC_NANOSLEEP\" USING Pause-Time-Ns\n           END-PERFORM\n\n           DISPLAY \"Press enter to quit.\" AT LINE 1 COLUMN 1\n           ACCEPT pause\n\n           GOBACK\n           .\n       step-simulation.\n           IF black (ant-x, ant-y)\n               SET white (ant-x, ant-y) TO TRUE\n               PERFORM display-ant-cell\n               COMPUTE ant-direction =\n                   FUNCTION MOD(ant-direction + 1, 4)\n           ELSE\n               SET black (ant-x, ant-y) TO TRUE\n               PERFORM display-ant-cell\n               COMPUTE ant-direction =\n                   FUNCTION MOD(ant-direction - 1, 4)\n           END-IF\n\n           EVALUATE TRUE\n               WHEN upward\n                   ADD 1 TO ant-y\n               WHEN rightward\n                   ADD 1 TO ant-x\n               WHEN downward\n                   SUBTRACT 1 FROM ant-y\n               WHEN leftward\n                   SUBTRACT 1 FROM ant-x\n           END-EVALUATE\n           .\n       display-ant-cell.\n               SUBTRACT ant-y FROM Grid-Size GIVING display-y\n               IF black (ant-x, ant-y)\n                   DISPLAY SPACE AT LINE display-y COLUMN ant-x\n                       WITH BACKGROUND-COLOR Black-Background\n               ELSE\n                   DISPLAY SPACE AT LINE display-y COLUMN ant-x\n                      WITH BACKGROUND-COLOR White-Background\n               END-IF\n               .\n       display-initial-grid.\n           PERFORM VARYING i FROM 1 BY 1 UNTIL i > Grid-Size\n                   AFTER j FROM 1 BY 1 UNTIL j > Grid-Size\n               DISPLAY SPACE AT LINE i COLUMN j\n                   WITH BACKGROUND-COLOR White-Background\n           END-PERFORM\n           .\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "A\nB\nC\nD\nE\nF\nG\nH"
  }
}