{
  "cobol_file": {
    "file_name": "successful_snippet_c550c687.cob",
    "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      * Still doesn't work, but at least I got past the compile errors.\n      * \n       Function-ID. caveidx.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'caveidx'.\n\n       01  EXTERNAL-WORK-AREAS EXTERNAL.\n           05  CONNECTION-COUNT   PIC 9(009) COMP.\n           05  PATH-COUNT         PIC 9(009) COMP.\n           05  CAVE-COUNT         PIC 9(009) COMP.\n           05  CURR-PATH          PIC 9(009) COMP.\n\n       77  PROCESS-SW  EXTERNAL   PIC X(004).\n           88  PROCESS-TEST                          VALUE 'TEST'.\n\n       01  CAVE-TABLE EXTERNAL.\n           05  CAVE-TBL OCCURS 25.\n               10  CAVE           PIC X(005).\n               10  CAVE-SW        PIC X(001).\n                   88  CAVE-IS-BIG               VALUE 'B'.\n                   88  CAVE-IS-SMALL             VALUE 'S'.\n               10  CAVE-MAX-VISIT PIC 9(009) COMP.\n               10  CAVE-CONN-COUNT PIC 9(009) COMP.\n               10  CAVE-CONN-TBL OCCURS 10.\n                   15  CAVE-CONN     PIC X(005).\n                   15  CAVE-CONN-IDX PIC 9(009) COMP.\n\n       Local-Storage Section.\n       01  WORK-AREAS.\n           05  FOUND-SW           PIC X(001)         VALUE 'N'.\n               88  FOUND-IT                          VALUE 'Y'.\n\n       Linkage Section.\n       01  LS-CAVE                PIC X(005).\n       01  CAVE-IDX               PIC S9(009) COMP   VALUE 0.\n       Procedure Division Using\n           LS-CAVE\n         Returning CAVE-IDX\n         .\n\n           PERFORM VARYING CAVE-IDX FROM 1 BY 1\n           UNTIL CAVE-IDX > CAVE-COUNT\n             IF CAVE(CAVE-IDX) = LS-CAVE\n                 SET FOUND-IT TO TRUE\n                 EXIT PERFORM\n             END-IF\n           END-PERFORM\n\n           IF FOUND-IT\n               CONTINUE\n           ELSE\n               MOVE 9999 TO CAVE-IDX\n           END-IF\n\n           GOBACK\n           .\n\n       END FUNCTION caveidx.\n\n       ID Division.\n       Program-ID. cs12a.\n       Environment Division.\n       Configuration Section.\n       Repository.\n           FUNCTION caveidx\n           FUNCTION ALL INTRINSIC.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(4096).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008)         VALUE 'cs12a'.\n           05  START-CAVE         PIC X(005)         VALUE 'start'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(009) COMP    VALUE 0.\n           05  CLI-ARGS           PIC X(080)         VALUE LOW-VALUES.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n\n       01  FIND-PATH-AREAS.\n           05  CONN-IDX           PIC 9(009) COMP    VALUE 0.\n           05  PATH-IDX           PIC 9(009) COMP    VALUE 0.\n           05  CAVE-IDX           PIC 9(009) COMP    VALUE 0.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(4096)        VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n\n       01  EXTERNAL-WORK-AREAS EXTERNAL.\n           05  CONNECTION-COUNT   PIC 9(009) COMP.\n           05  PATH-COUNT         PIC 9(009) COMP.\n           05  CAVE-COUNT         PIC 9(009) COMP.\n           05  CURR-PATH          PIC 9(009) COMP.\n\n       77  PROCESS-SW  EXTERNAL   PIC X(004).\n           88  PROCESS-TEST                          VALUE 'TEST'.\n\n       01  CONNECTION-TABLE EXTERNAL.\n           05  CONN-TBL OCCURS 25.\n               10  CONN-CAVE-1    PIC X(005).\n               10  CONN-CAVE-2    PIC X(005).\n\n       01  CAVE-TABLE EXTERNAL.\n           05  CAVE-TBL OCCURS 25.\n               10  CAVE           PIC X(005).\n               10  CAVE-SW        PIC X(001).\n                   88  CAVE-IS-BIG               VALUE 'B'.\n                   88  CAVE-IS-SMALL             VALUE 'S'.\n               10  CAVE-MAX-VISIT PIC 9(009) COMP.\n               10  CAVE-CONN-COUNT PIC 9(009) COMP.\n               10  CAVE-CONN-TBL OCCURS 10.\n                   15  CAVE-CONN     PIC X(005).\n                   15  CAVE-CONN-IDX PIC 9(009) COMP.\n\n       01  PATH-TABLE EXTERNAL.\n           05  PATH OCCURS 1000.\n               10  PATH-LN            PIC 9(009).\n               10  PATH-CAVE\n                   OCCURS 10\n                                      PIC X(005).\n\n       Procedure Division.\n           DISPLAY MYNAME SPACE CURRENT-DATE\n\n           INITIALIZE \n             CONNECTION-TABLE \n             PATH-TABLE \n             CAVE-TABLE\n             EXTERNAL-WORK-AREAS\n\n           ACCEPT CLI-ARGS FROM COMMAND-LINE\n           UNSTRING CLI-ARGS DELIMITED SPACE OR LOW-VALUE\n             INTO PROCESS-TYPE\n           END-UNSTRING\n\n           MOVE FUNCTION UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           PERFORM 1000-LOAD-INPUT UNTIL INPT-DATA-EOF\n\n           CLOSE INPT-DATA\n\n           PERFORM 2000-CONNECT-CAVES\n             VARYING CONN-IDX FROM 1 BY 1\n             UNTIL CONN-IDX > CONNECTION-COUNT\n\n           CALL 'cavedump'\n\n           PERFORM 3000-PROCESS-INPUT\n\n           PERFORM VARYING PATH-IDX FROM 1 BY 1\n           UNTIL PATH-IDX > PATH-COUNT\n             DISPLAY MYNAME ' path ' PATH-IDX\n               WITH NO ADVANCING\n             PERFORM VARYING CAVE-IDX FROM 1 BY 1\n             UNTIL CAVE-IDX > PATH-LN(PATH-IDX)\n               DISPLAY SPACE PATH-CAVE(PATH-IDX,CAVE-IDX)\n                 WITH NO ADVANCING\n             END-PERFORM\n             DISPLAY SPACE\n           END-PERFORM\n\n           DISPLAY MYNAME ' records read    ' WS-REC-COUNT\n\n           DISPLAY MYNAME SPACE FUNCTION CURRENT-DATE\n\n           GOBACK.\n\n       1000-LOAD-INPUT.\n           ADD 1 TO CONNECTION-COUNT\n           ADD 1 TO CONN-IDX\n\n           UNSTRING WS-INPT DELIMITED SPACE OR '-'\n             INTO \n               CONN-CAVE-1(CONN-IDX)\n               CONN-CAVE-2(CONN-IDX)\n           END-UNSTRING\n\n           PERFORM 1100-ADD-CAVES\n\n           PERFORM 8010-READ-INPT-DATA\n           .\n\n       1100-ADD-CAVES.\n           MOVE caveidx(CONN-CAVE-1(CONN-IDX)) TO CAVE-IDX\n           IF CAVE-IDX = 9999\n               ADD 1 TO CAVE-COUNT\n               MOVE CONN-CAVE-1(CONN-IDX) TO CAVE(CAVE-COUNT)\n               PERFORM 1010-SET-CAVE-SIZE\n           END-IF\n\n           MOVE caveidx(CONN-CAVE-2(CONN-IDX)) TO CAVE-IDX\n           IF CAVE-IDX = 9999\n               ADD 1 TO CAVE-COUNT\n               MOVE CONN-CAVE-2(CONN-IDX) TO CAVE(CAVE-COUNT)\n               PERFORM 1010-SET-CAVE-SIZE\n           END-IF\n           .\n\n       1010-SET-CAVE-SIZE.\n           IF CAVE(CAVE-COUNT) = FUNCTION UPPER-CASE(CAVE(CAVE-COUNT))\n               SET CAVE-IS-BIG(CAVE-COUNT) TO TRUE\n               MOVE 9999 TO CAVE-MAX-VISIT(CAVE-COUNT)\n           ELSE\n               SET CAVE-IS-SMALL(CAVE-COUNT) TO TRUE\n               MOVE 1 TO CAVE-MAX-VISIT(CAVE-COUNT)\n           END-IF\n           .\n\n       2000-CONNECT-CAVES.\n           MOVE caveidx(CONN-CAVE-1(CONN-IDX)) TO CAVE-IDX\n           IF CONN-CAVE-2(CONN-IDX) NOT = 'start'\n              ADD  1 TO CAVE-CONN-COUNT(CAVE-IDX)\n               MOVE CONN-CAVE-2(CONN-IDX)\n                 TO CAVE-CONN(CAVE-IDX,CAVE-CONN-COUNT(CAVE-IDX))\n              MOVE caveidx(CONN-CAVE-2(CONN-IDX)) \n                 TO CAVE-CONN-IDX(CAVE-IDX,CAVE-CONN-COUNT(CAVE-IDX))\n           END-IF\n\n           MOVE caveidx(CONN-CAVE-2(CONN-IDX)) TO CAVE-IDX\n           IF CONN-CAVE-1(CONN-IDX) NOT = 'start'\n               ADD  1 TO CAVE-CONN-COUNT(CAVE-IDX)\n               MOVE CONN-CAVE-1(CONN-IDX)\n                 TO CAVE-CONN(CAVE-IDX,CAVE-CONN-COUNT(CAVE-IDX))\n               MOVE caveidx(CONN-CAVE-1(CONN-IDX)) \n                 TO CAVE-CONN-IDX(CAVE-IDX,CAVE-CONN-COUNT(CAVE-IDX))\n           END-IF\n           .\n\n       3000-PROCESS-INPUT.\n           INITIALIZE FIND-PATH-AREAS\n           MOVE 1 TO PATH-IDX\n           MOVE caveidx(START-CAVE) TO CAVE-IDX\n\n           CALL 'findpath' USING\n             FIND-PATH-AREAS\n           END-CALL\n\n           .\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n           END-READ\n\n           .\n\n       END PROGRAM cs12a.\n\n       ID Division.\n       Program-ID. findpath Recursive.\n       Environment Division.\n       Configuration Section.\n       Repository.\n           FUNCTION caveidx\n           FUNCTION ALL INTRINSIC.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008)         VALUE 'findpath'.\n           05  START-CAVE         PIC X(005)         VALUE 'start'.\n           05  END-CAVE           PIC X(005)         VALUE 'end  '.\n\n       01  EXTERNAL-WORK-AREAS EXTERNAL.\n           05  CONNECTION-COUNT   PIC 9(009) COMP.\n           05  PATH-COUNT         PIC 9(009) COMP.\n           05  CAVE-COUNT         PIC 9(009) COMP.\n           05  CURR-PATH          PIC 9(009) COMP.\n\n       77  PROCESS-SW  EXTERNAL   PIC X(004).\n           88  PROCESS-TEST                          VALUE 'TEST'.\n\n       01  CONNECTION-TABLE EXTERNAL.\n           05  CONN-TBL OCCURS 25.\n               10  CONN-CAVE-1    PIC X(005).\n               10  CONN-CAVE-2    PIC X(005).\n\n       01  CAVE-TABLE EXTERNAL.\n           05  CAVE-TBL OCCURS 25.\n               10  CAVE           PIC X(005).\n               10  CAVE-SW        PIC X(001).\n                   88  CAVE-IS-BIG               VALUE 'B'.\n                   88  CAVE-IS-SMALL             VALUE 'S'.\n               10  CAVE-MAX-VISIT PIC 9(009) COMP.\n               10  CAVE-CONN-COUNT PIC 9(009) COMP.\n               10  CAVE-CONN-TBL OCCURS 10.\n                   15  CAVE-CONN     PIC X(005).\n                   15  CAVE-CONN-IDX PIC 9(009) COMP.\n\n       01  PATH-TABLE EXTERNAL.\n           05  PATH OCCURS 1000.\n               10  PATH-LN            PIC 9(009).\n               10  PATH-CAVE\n                   OCCURS 10\n                                      PIC X(005).\n\n       Local-Storage Section.\n       01  FIND-PATH-AREAS.\n           05  CONN-IDX           PIC 9(009) COMP    VALUE 0.\n           05  PATH-IDX           PIC 9(009) COMP    VALUE 0.\n           05  CAVE-IDX           PIC 9(009) COMP    VALUE 0.\n\n       01  WORK-AREAS.\n           05  TEMP-IDX           PIC 9(009) COMP    VALUE 0.\n\n       01  CAVE-IN-PATH-SW        PIC X(001).\n           88  CAVE-IN-PATH                          VALUE 'Y'\n                                                     FALSE 'N'.\n\n       Linkage Section.\n       01  INPT-AREAS.\n           05  LS-CONN-IDX        PIC 9(009) COMP.\n           05  LS-PATH-IDX        PIC 9(009) COMP.\n           05  LS-CAVE-IDX        PIC 9(009) COMP.\n\n       Procedure Division Using\n           INPT-AREAS\n           .\n\n           MOVE INPT-AREAS TO FIND-PATH-AREAS\n\n           IF CAVE-CONN(CAVE-IDX,CONN-IDX) = END-CAVE\n               DISPLAY MYNAME ' path ' PATH-IDX\n                 WITH NO ADVANCING\n               PERFORM VARYING TEMP-IDX FROM 1 BY 1\n               UNTIL TEMP-IDX > PATH-LN(PATH-IDX)\n                 DISPLAY SPACE PATH-CAVE(PATH-IDX,TEMP-IDX)\n               END-PERFORM\n               DISPLAY ' '\n               ADD 1 TO PATH-IDX\n               GOBACK\n           END-IF\n\n           PERFORM 1000-PROCESS-CONNECTIONS\n             VARYING CONN-IDX FROM 1 BY 1\n             UNTIL CONN-IDX > CAVE-CONN-COUNT(CAVE-IDX)\n\n           GOBACK\n           .\n\n       1000-PROCESS-CONNECTIONS.\n           MOVE caveidx(CAVE-CONN(CAVE-IDX,CONN-IDX))\n             TO TEMP-IDX\n \n           CALL 'cavinpth' USING\n               PATH-IDX\n               CAVE-CONN(CAVE-IDX,CONN-IDX)\n               CAVE-IN-PATH-SW\n           END-CALL\n\n           EVALUATE TRUE                    ALSO TRUE\n             WHEN   CAVE-IS-BIG(TEMP-IDX)   ALSO ANY\n             WHEN   CAVE-IS-SMALL(TEMP-IDX) ALSO NOT CAVE-IN-PATH\n                    ADD 1 TO PATH-LN(PATH-IDX)\n                    MOVE CAVE(CAVE-IDX)\n                      TO PATH-CAVE(PATH-IDX,PATH-LN(PATH-IDX))\n                    CALL 'findpath' USING\n                        FIND-PATH-AREAS\n                    END-CALL\n           END-EVALUATE\n           .\n\n       END PROGRAM findpath.\n\n       ID Division.\n       Program-ID. cavinpth.\n       Environment Division.\n       Configuration Section.\n       Repository.\n           FUNCTION ALL INTRINSIC.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008)         VALUE 'cavinpth'.\n\n       01  WORK-AREAS.\n           05  CAVE-IDX           PIC 9(009) COMP    VALUE 0.\n           05  CONN-IDX           PIC 9(009) COMP    VALUE 0.\n           05  PATH-CAVE-IDX      PIC 9(009) COMP    VALUE 0.\n\n       77  PROCESS-SW  EXTERNAL   PIC X(004).\n           88  PROCESS-TEST                          VALUE 'TEST'.\n\n       01  PATH-TABLE EXTERNAL.\n           05  PATH OCCURS 1000.\n               10  PATH-LN            PIC 9(009).\n               10  PATH-CAVE\n                   OCCURS 10\n                                      PIC X(005).\n\n       Linkage Section.\n       01  LS-PATH-IDX            PIC 9(009) COMP.\n       01  LS-CAVE                PIC X(005).\n       01  LS-FOUND-SW            PIC X(001).\n           88  FOUND-IT                              VALUE 'Y'\n                                                     FALSE 'N'.\n\n       Procedure Division Using\n           LS-PATH-IDX\n           LS-CAVE\n           LS-FOUND-SW\n           .\n\n           SET FOUND-IT TO FALSE\n           PERFORM VARYING PATH-CAVE-IDX FROM 1 BY 1\n           UNTIL PATH-CAVE-IDX > PATH-LN(LS-PATH-IDX)\n             IF PATH-CAVE(LS-PATH-IDX,PATH-CAVE-IDX) = LS-CAVE\n                 SET FOUND-IT TO TRUE\n                 EXIT PERFORM\n             END-IF\n           END-PERFORM\n\n           GOBACK\n           .\n\n       END PROGRAM cavinpth.\n\n       ID Division.\n       Program-ID. cavedump.\n       Environment Division.\n       Configuration Section.\n       Repository.\n           FUNCTION ALL INTRINSIC.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008)         VALUE 'cavedump'.\n\n       01  WORK-AREAS.\n           05  CAVE-IDX           PIC 9(009) COMP    VALUE 0.\n           05  CONN-IDX           PIC 9(009) COMP    VALUE 0.\n\n       01  EXTERNAL-WORK-AREAS EXTERNAL.\n           05  CONNECTION-COUNT   PIC 9(009) COMP.\n           05  PATH-COUNT         PIC 9(009) COMP.\n           05  CAVE-COUNT         PIC 9(009) COMP.\n           05  CURR-PATH          PIC 9(009) COMP.\n\n       77  PROCESS-SW  EXTERNAL   PIC X(004).\n           88  PROCESS-TEST                          VALUE 'TEST'.\n\n       01  CONNECTION-TABLE EXTERNAL.\n           05  CONN-TBL OCCURS 25.\n               10  CONN-CAVE-1    PIC X(005).\n               10  CONN-CAVE-2    PIC X(005).\n\n       01  CAVE-TABLE EXTERNAL.\n           05  CAVE-TBL OCCURS 25.\n               10  CAVE           PIC X(005).\n               10  CAVE-SW        PIC X(001).\n                   88  CAVE-IS-BIG               VALUE 'B'.\n                   88  CAVE-IS-SMALL             VALUE 'S'.\n               10  CAVE-MAX-VISIT PIC 9(009) COMP.\n               10  CAVE-CONN-COUNT PIC 9(009) COMP.\n               10  CAVE-CONN-TBL OCCURS 10.\n                   15  CAVE-CONN     PIC X(005).\n                   15  CAVE-CONN-IDX PIC 9(009) COMP.\n\n       Procedure Division.\n           DISPLAY MYNAME SPACE CURRENT-DATE\n\n           PERFORM VARYING CAVE-IDX FROM 1 BY 1\n           UNTIL CAVE-IDX > CAVE-COUNT\n             DISPLAY \n               MYNAME ' ' \n               CAVE-IDX ' ' \n               CAVE(CAVE-IDX) ' '\n               CAVE-SW(CAVE-IDX) ' '\n               CAVE-MAX-VISIT(CAVE-IDX) ' '\n               WITH NO ADVANCING\n             PERFORM VARYING CONN-IDX FROM 1 BY 1\n             UNTIL CONN-IDX > CAVE-CONN-COUNT(CAVE-IDX)\n               DISPLAY CAVE-CONN(CAVE-IDX,CONN-IDX) ' '\n                 WITH NO ADVANCING\n             END-PERFORM\n             DISPLAY ' '\n           END-PERFORM\n\n           DISPLAY MYNAME SPACE CURRENT-DATE\n           GOBACK\n           .\n\n       END PROGRAM cavedump.\n\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "PROCESS-TYPE1                                                                             \nPROCESS-TYPE2                                                                             \nPROCESS-TYPE3                                                                             \nPROCESS-TYPE4                                                                             \nPROCESS-TYPE5                                                                             \nPROCESS-TYPE6                                                                             \nPROCESS-TYPE7                                                                             \nPROCESS-TYPE8"
  }
}