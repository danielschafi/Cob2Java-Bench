{
  "cobol_file": {
    "file_name": "successful_snippet_b0f02f15.cob",
    "content": "      ******************************************************************\n      * csv record parsing field extraction program cobol version\n      * copyright (c) 2019 josh roybal\n      ******************************************************************\n       identification division.\n       program-id.    csv2flat.\n       environment division.\n       input-output section.\n       file-control.\n           select input-file assign to ws-file-path\n              organization is line sequential.\n           select output-file assign to \"flat.txt\"\n              organization is line sequential.\n\n       data division.\n       file section.\n       \n       fd input-file.\n       01 input-record                 pic x(256).\n\n       fd output-file.\n       01 output-record.\n          05 firstname-field           pic x(15).\n          05 lastname-field            pic x(15).\n          05 company-field             pic x(35).\n          05 address-field             pic x(35).\n          05 city-field                pic x(35).\n          05 county-field              pic x(35).\n          05 state-field               pic x(2).\n          05 zip-field                 pic x(5).\n          05 phone-field               pic x(12).\n          05 cell-field                pic x(12).\n          05 email-field               pic x(45).\n          05 www-field                 pic x(50).\n       \n       working-storage section.\n       77 ws-file-path                 pic x(80).\n       77 ws-max-flds                  pic 99 value 12.\n       77 ws-no-flds                   pic 99 value 1.\n       77 ws-fld-idx                   pic 99.\n       77 ws-fld-no                    pic 99.\n       77 ws-rec-idx                   pic 999.\n       77 ws-rec-len                   pic 999.\n       77 ws-fld-len                   pic 99.\n       01 no-more-records              pic x(1) value space. \n       01 ws-record-fields.\n           05 ws-record-field          pic x(50) occurs 12 times.\n      ******************************************************************\n      * main program section\n      ******************************************************************\n       procedure division.\n           accept ws-file-path from argument-value\n           open input input-file\n           open output output-file\n           read input-file into input-record\n           perform until no-more-records = 'y'\n               move spaces to input-record\n               read input-file into input-record\n                 at end \n                    move 'y' to no-more-records\n                 not at end\n                    if input-record not = spaces\n                       perform extract-fields\n                       perform load-fields\n                       write output-record\n                    end-if\n               end-read\n           end-perform\n           close input-file\n           close output-file\n           display \"flat.txt written\"           \n           stop run.\n      ******************************************************************\n      * extract field(s) from comma delimited sequential file record\n      ******************************************************************\n       extract-fields section.\n           move 1 to ws-rec-idx\n           move 1 to ws-fld-idx\n           move 1 to ws-fld-no\n           perform find-record-length\n           perform until ws-fld-no > ws-max-flds \n              or ws-rec-idx > ws-rec-len\n               move spaces to ws-record-field(ws-fld-no)\n               perform until input-record(ws-rec-idx:1) = \",\"\n                   or ws-rec-idx > ws-rec-len\n                   if input-record(ws-rec-idx:1) not = '\"'\n                       move input-record(ws-rec-idx:1) \n                       to ws-record-field(ws-fld-no)(ws-fld-idx:1)\n                       set ws-rec-idx up by 1\n                       set ws-fld-idx up by 1\n      * step through any double quoted substrings and adjust the indices\n      * accordingly\n                   else\n                       set ws-rec-idx up by 1 \n                       perform until input-record(ws-rec-idx:1) = '\"'\n                       or ws-fld-idx > 50\n                           move input-record(ws-rec-idx:1) \n                           to ws-record-field(ws-fld-no)(ws-fld-idx:1)\n                           set ws-fld-idx up by 1\n                           set ws-rec-idx up by 1\n                       end-perform\n                       set ws-rec-idx up by 1\n                   end-if\n               end-perform\n               set ws-rec-idx up by 1\n               move 1 to ws-fld-idx\n               set ws-fld-no up by 1\n           end-perform\n           set ws-fld-no down by 1\n           move ws-fld-no to ws-no-flds.\n      ******************************************************************\n      * find the length of input-record sans trailing blank spaces\n      ******************************************************************\n       find-record-length section.\n           move function length(function trim(input-record)) to ws-rec-l\n      -en.\n      ******************************************************************\n      * load extracted fields into output-record\n      ******************************************************************\n       load-fields section.\n           move ws-record-field(1) to firstname-field\n           move ws-record-field(2) to lastname-field\n           move ws-record-field(3) to company-field\n           move ws-record-field(4) to address-field\n           move ws-record-field(5) to city-field\n           move ws-record-field(6) to county-field\n           move ws-record-field(7) to state-field\n           move ws-record-field(8) to zip-field\n           move ws-record-field(9) to phone-field\n           move ws-record-field(10) to cell-field\n           move ws-record-field(11) to email-field\n           move ws-record-field(12) to www-field.\n"
  },
  "input_files": [],
  "output_files": [
    "flat.txt"
  ],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "C:\\data\\sales\\2023\\Q1\\sales_data.txt                                                                  \nC:\\data\\sales\\2023\\Q2\\sales_data.txt                                                                  \nC:\\data\\sales\\2023\\Q3\\sales_data.txt                                                                  \nC:\\data\\sales\\2023\\Q4\\sales_data.txt                                                                  \nC:\\data\\inventory\\2023\\Q1\\inventory_data.txt                                                          \nC:\\data\\inventory\\2023\\Q2\\inventory_data.txt                                                          \nC:\\data\\inventory\\2023\\Q3\\inventory_data.txt                                                          \nC:\\data\\inventory\\2023\\Q4\\inventory_data.txt"
  }
}