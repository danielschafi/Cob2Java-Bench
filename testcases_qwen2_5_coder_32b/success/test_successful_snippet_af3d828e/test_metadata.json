{
    "cobol_file": {
        "file_name": "successful_snippet_af3d828e.cob",
        "content": "000100 identification division.\n000200 program-id. TeamRecordsRB.\n000300* FORMAT TEAM RECORDS AND PROVIDE A WINNING PCT.\n000400* WINNING PERCENTAGE IS CALCULATED BY DIVIDING THE TOTAL\n000500* POINTS EARNED BY THE TOTAL AMOUNTS POSSIBLE.  THE RECORD IS\n000600* IN WW-LL-TT FORMAT WHERE WW IS WINS, LL IS LOSES AND TT IS TIES.\n000700* TWO POINTS FOR A WIN, 0 POINTS FOR A LOSS AND 1 POINT FOR A TIE.\n000800* COMPUTE THE TOTAL NUMBER POINTS POSSIBLE BY ADDING UP THE WINS,\n000900* LOSSES AND TIES. THEN CALCULATE THE POINTS EARNED. THEN DO THE\n001000* DIVISION.\n001100* \n001200* THE PROGRAM REQUIRES TWO UNSTRINGS.  ONE TO SPLIT THE THREE\n001300* FIELDS (DIVISION, CITY AND RECORD) INTO WORKING STORAGE FIELDS.\n001400* THE SECOND UNSTRING NEEDS TO SPLIT THE RECORD INTO WINS, LOSSES\n001500* AND TIES.\n001600* THE RECORDS DO NOT HAVE LEADING ZEROS AND THIS WILL CAUSE A \n001700* PROBLEM.  SO, AFTER THE RECORD IS SPLIT INTO W, L, & T, THE\n001800* SPACE WILL NEED TO BE REMOVED WITH EITHER AN INSPECT STATEMENT\n001900* OR USING THE NUMVAL FUNCTION. THEN THE AMOUNTS WILL BE NUMERIC\n002000* AND THE WINNING PCT CAN BE CALCULATED.  A NEW RECORD IS WRITTEN\n002100* OUT WITH THE DIVISION, CITY, REFORMATTED RECORD AND THE PCT.\n002200  \n002300* YOU MAY USE THE WORKING STORAGE AND DATA DIVISION PROVIDED,\n002400* OR YOUR OWN IF THAT IS EASIER FOR YOU TO FOLLOW.\n002500 \n002600* BE SURE ADD A DISPLAY A STATEMENT AT THE TOP OF THE PROCEDURE\n002700* DIVISION TO USE A WHEN-COMPILED. \n002800  \n002900 environment division.\n003000 configuration section.\n003100 INPUT-OUTPUT SECTION.\n003200 FILE-CONTROL.\n003300 SELECT LEAGUE-FILE\n003400*  ASSIGN TO \"league.dat\"\n003500   ASSIGN TO \"league.dat\"\n003600   ORGANIZATION IS LINE SEQUENTIAL\n003700   FILE STATUS IS WS-LEAGUE-FILE-STATUS.\n003800 SELECT LEAGUE-FRMTD-FILE\n003900*  ASSIGN TO \"leagueRfmtd.dat\"\n004000   ASSIGN TO \"leagueRfmtd.dat\"\n004100   ORGANIZATION IS LINE SEQUENTIAL\n004200   FILE STATUS IS WS-RFMT-FILE-STATUS.\n004300         \n004400 DATA DIVISION.\n004500 FILE SECTION.\n004600 FD  LEAGUE-FILE                                    \n004700     RECORDING MODE IS F  \n004800     DATA RECORD IS LEAGUE-RECORD. \n004900 01  LEAGUE-RECORD               PIC X(24).\n005000 \n005100 FD  LEAGUE-FRMTD-FILE                                    \n005200     RECORDING MODE IS F  \n005300     DATA RECORD IS LEAGUE-FRMTD-RECORD. \n005400 01  LEAGUE-FRMTD-RECORD         PIC X(28).\n005500\n005600 WORKING-STORAGE SECTION.\n005700 01  WS-FILLER                  PIC X(133)\n005800     VALUE 'START WS SECTION'.\n005900 01  WS-LEAGUE-RECORD.\n006000     05 WS-DIVISION-CODE  \t  PIC X(02).\n006100     05 WS-CITY                 PIC X(15).\n006200     05 WS-RECORD.\n006300        10 WS-RECORD-6          PIC X(06).\n006400        10 FILLER               PIC X(02).\n006500     05 WS-PCT                  PIC V999.\n006600     \n006700 01  WS-RFMT-RECORD.\n006800     05 WS-RFMT-WINS            PIC X(02) JUSTIFIED RIGHT.\n006900     05 WS-RFMT-LOSSES          PIC X(02) JUSTIFIED RIGHT.\n007000     05 WS-RFMT-TIES            PIC X(02) JUSTIFIED RIGHT.\n007100 01  WS-RFMT-RECORD-NUMERIC REDEFINES\n007200     WS-RFMT-RECORD.\n007300     05 WS-RFMT-WINS-NUM        PIC 9(02).\n007400     05 WS-RFMT-LOSSES-NUM      PIC 9(02).\n007500     05 WS-RFMT-TIES-NUM        PIC 9(02).\n007600     \n007700 01  WS-TOTAL-PTS-AVAILABLE     PIC 9(02) VALUE ZERO.\n007800 01  WS-TOTAL-PTS-EARNED        PIC 9(02) VALUE ZERO.\n007900 01  WS-WINNING-PCT             PIC V999  VALUE ZERO.\n008000\n008100 01  WS-LEAGUE-FILE-STATUS      PIC X(02).\n008200     88 SUCESSFUL-READ                 VALUE \"00\".\n008300     88 OUT-OF-DATA                    VALUE \"10\".\n008400     88 FILE-ERROR                     VALUES \"11\" THRU \"99\".\n008500 01  WS-RFMT-FILE-STATUS        PIC X(02).\n008600 \n008700 PROCEDURE DIVISION.\n008800 0000-MAINLINE.\n008900     display \"PROGRAM COMPILED: \" function when-compiled.\n009000     DISPLAY 'START: REFORMAT LEAGUE DATA'.\n009100     PERFORM 0100-FORMAT-RECORDS.\n009200     DISPLAY 'END: REFORMAT LEAGUE DATA'.\n009300     STOP RUN.\n009400     \n009500 0100-FORMAT-RECORDS.\n009600     OPEN INPUT  LEAGUE-FILE.\n009700     OPEN OUTPUT LEAGUE-FRMTD-FILE\n009800     PERFORM 0999-READ-LEAGUE-FILE.\n009900     PERFORM 0200-PROCESS-LEAGUE-FILE\n010000       UNTIL OUT-OF-DATA\n010100          OR FILE-ERROR.\n010200     CLOSE LEAGUE-FILE.\n010300          \n010400 0200-PROCESS-LEAGUE-FILE.           \n010500     \n010600* THE RECORD NEEDS TO BE SPILT INTO THE CORRECT FIELDS:    \n010700     UNSTRING LEAGUE-RECORD delimited by ','\n010800         INTO WS-DIVISION-CODE\n010900              WS-CITY\n011000              WS-RECORD-6\n011100         ON OVERFLOW DISPLAY \"OVERFLOW 1\".\n011200 \n011300* NOW THE TEAM RECORD NEEDS TO BE SPLIT INTO W - L - T:    \n011400     UNSTRING WS-RECORD-6 delimited by '-'\n011500         INTO WS-RFMT-WINS\n011600              WS-RFMT-LOSSES\n011700              WS-RFMT-TIES\n011800           on OVERFLOW display \"OVERFLOW\"\n011900           not on OVERFLOW display \"NO OVERFLOW\".\n012000              \n012100* USE AN INSPECT OR NUMVAL FUNCTION TO ADD A LEADING ZERO TO \n012200* THE WIN, LOSS & TIE FIELDS, IT NEEDS TO BE DONE FOR EACH FIELD,\n012300* SO PROBABLY THREE LINES OF CODE.  \n012400     MOVE FUNCTION NUMVAL(WS-RFMT-WINS) TO WS-RFMT-WINS-NUM.\n012500     MOVE FUNCTION NUMVAL(WS-RFMT-LOSSES) TO WS-RFMT-LOSSES-NUM.\n012600     MOVE FUNCTION NUMVAL(WS-RFMT-TIES) TO WS-RFMT-TIES-NUM.\n012700 \n012800     COMPUTE WS-TOTAL-PTS-AVAILABLE = \n012900            (WS-RFMT-LOSSES-NUM + WS-RFMT-WINS-NUM\n013000                                + WS-RFMT-TIES-NUM) * 2.\n013100     COMPUTE WS-TOTAL-PTS-EARNED = \n013200            (WS-RFMT-WINS-NUM * 2) +  WS-RFMT-TIES-NUM.\n013300     COMPUTE WS-WINNING-PCT = WS-TOTAL-PTS-EARNED/\n013400                              WS-TOTAL-PTS-AVAILABLE.\n013500     \n013600     move WS-WINNING-PCT to WS-PCT.\n013700* THE RECORD NEEDS TO BE STRING BACK TOGETHER AGAIN WITH THE \"-\"\n013800* BEFORE IT IS MOVED TO THE OUTPUT FILE AND REWITTEN.\n013900 \n014000 \n014100     STRING WS-RFMT-WINS-NUM\n014200            \"-\"\n014300            WS-RFMT-LOSSES-NUM\n014400            \"-\"\n014500            WS-RFMT-TIES-NUM\n014600         INTO WS-RECORD.\n014700           \n014800       \n014900     WRITE LEAGUE-FRMTD-RECORD FROM WS-LEAGUE-RECORD.\n015000     PERFORM 0999-READ-LEAGUE-FILE.\n015100     \n015200 0999-READ-LEAGUE-FILE.\n015300     READ LEAGUE-FILE."
    },
    "input_files": [
        {
            "file_name": "league.dat",
            "content": "EAST  CHICAGO        0550  10  05001005\nWEST  INDIANAPOLIS   0600  08  04000804\nNORTH EVANSTON       0580  09  03000903\nSOUTH BLOOMINGTON    0570  11  02001102\nEAST  GARY           0560  12  01001201\nWEST  MUNCIE         0540  14  00001400\nNORTH HAMMOND        0530  15  00001500\nSOUTH TERRE HAUTE    0520  16  00001600\nEAST  CARMEL         0510  17  00001700\nWEST  ELKHART        0500  18  00001800"
        }
    ],
    "output_files": [
        "leagueRfmtd.dat"
    ],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_af3d828e.cob",
    "compiled_file": "successful_snippet_af3d828e",
    "expected_output": "PROGRAM COMPILED: 2025100900120004+0200\nSTART: REFORMAT LEAGUE DATA\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nNO OVERFLOW\nEND: REFORMAT LEAGUE DATA\n",
    "expected_output_files": [
        {
            "file_name": "leagueRfmtd.dat",
            "content": "EA               00-00-00000\n0                00-00-00000\nWE               00-00-00000\n0                00-00-00000\nNO               00-00-00000\n0                00-00-00000\nSO               00-00-00000\n0                00-00-00000\nEA               00-00-00000\n0                00-00-00000\nWE               00-00-00000\n0                00-00-00000\nNO               00-00-00000\n0                00-00-00000\nSO               00-00-00000\n0                00-00-00000\nEA               00-00-00000\n0                00-00-00000\nWE               00-00-00000\n0                00-00-00000\n"
        }
    ],
    "expected_input_output_files": []
}