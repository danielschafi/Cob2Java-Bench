{
    "cobol_file": {
        "file_name": "successful_snippet_8321bf86.cob",
        "content": "       >>SOURCE FREE\nIDENTIFICATION DIVISION.\nPROGRAM-ID. run-length-encoding.\n\nENVIRONMENT DIVISION.\nCONFIGURATION SECTION.\nREPOSITORY.\n    FUNCTION encode\n    FUNCTION decode\n    .\nDATA DIVISION.\nWORKING-STORAGE SECTION.\n01  input-str                           PIC A(100).\n01  encoded                             PIC X(200).\n01  decoded                             PIC X(200).\n\nPROCEDURE DIVISION.\n    ACCEPT input-str\n    MOVE encode(FUNCTION TRIM(input-str)) TO encoded\n    DISPLAY \"Encoded: \" FUNCTION TRIM(encoded)\n    DISPLAY \"Decoded: \" FUNCTION TRIM(decode(encoded))\n    .\nEND PROGRAM run-length-encoding.\n\n\nIDENTIFICATION DIVISION.\nFUNCTION-ID. encode.\n\nDATA DIVISION.\nLOCAL-STORAGE SECTION.\n01  str-len                             PIC 9(3) COMP.\n\n01  i                                   PIC 9(3) COMP.\n\n01  current-char                        PIC A.\n\n01  num-chars                           PIC 9(3) COMP.\n01  num-chars-disp                      PIC Z(3).\n\n01  encoded-pos                         PIC 9(3) COMP VALUE 1.\n\nLINKAGE SECTION.\n01  str                                 PIC X ANY LENGTH.\n\n01  encoded                             PIC X(200).\n\nPROCEDURE DIVISION USING str RETURNING encoded.\n    MOVE FUNCTION LENGTH(str) TO str-len\n    MOVE str (1:1) TO current-char\n    MOVE 1 TO num-chars\n    PERFORM VARYING i FROM 2 BY 1 UNTIL i > str-len\n        IF str (i:1) <> current-char\n            CALL \"add-num-chars\" USING encoded, encoded-pos,\n                CONTENT current-char, num-chars\n                \n            MOVE str (i:1) TO current-char\n            MOVE 1 TO num-chars\n        ELSE\n            ADD 1 TO num-chars\n        END-IF\n    END-PERFORM\n\n    CALL \"add-num-chars\" USING encoded, encoded-pos, CONTENT current-char,\n        num-chars\n    .\nEND FUNCTION encode.\n\nIDENTIFICATION DIVISION.\nPROGRAM-ID. add-num-chars.\n\nDATA DIVISION.\nWORKING-STORAGE SECTION.\n01  num-chars-disp                      PIC Z(3).\n\nLINKAGE SECTION.\n01  str                                 PIC X(200).\n\n01  current-pos                         PIC 9(3) COMP.\n\n01  char-to-encode                      PIC X.\n\n01  num-chars                           PIC 9(3) COMP.\n\nPROCEDURE DIVISION USING str, current-pos, char-to-encode, num-chars.\n    MOVE num-chars TO num-chars-disp\n    MOVE FUNCTION TRIM(num-chars-disp) TO str (current-pos:3)\n    ADD FUNCTION LENGTH(FUNCTION TRIM(num-chars-disp)) TO current-pos\n    MOVE char-to-encode TO str (current-pos:1)\n    ADD 1 TO current-pos\n    .\nEND PROGRAM add-num-chars.\n\n\nIDENTIFICATION DIVISION.\nFUNCTION-ID. decode.\n\nDATA DIVISION.\nLOCAL-STORAGE SECTION.\n01  encoded-pos                         PIC 9(3) COMP VALUE 1.\n01  decoded-pos                         PIC 9(3) COMP VALUE 1.\n\n01  num-of-char                         PIC 9(3) COMP VALUE 0.\n\nLINKAGE SECTION.\n01  encoded                             PIC X(200).\n\n01  decoded                             PIC X(100).\n\nPROCEDURE DIVISION USING encoded RETURNING decoded.\n    PERFORM VARYING encoded-pos FROM 1 BY 1\n            UNTIL encoded (encoded-pos:2) = SPACES OR encoded-pos > 200\n        IF encoded (encoded-pos:1) IS NUMERIC\n            COMPUTE num-of-char = num-of-char * 10\n                + FUNCTION NUMVAL(encoded (encoded-pos:1))\n        ELSE\n            PERFORM UNTIL num-of-char = 0\n                MOVE encoded (encoded-pos:1) TO decoded (decoded-pos:1)\n                ADD 1 TO decoded-pos\n                SUBTRACT 1 FROM num-of-char\n            END-PERFORM\n        END-IF\n    END-PERFORM\n    .\nEND FUNCTION decode.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "Here is the raw input data for the COBOL SYSIN based on the provided specifications:\n\n```\nThis is a test string for input        1234567890\nAnother test string with numbers 12345\nShort string                         123\nA very long string that should be truncated here because it exceeds the maximum length allowed\nJust a few words                     45678\nTesting with special characters !@#$\nPadding with spaces to the end       78901\nEnd of input                         00000"
    },
    "code_file": "successful_snippet_8321bf86.cob",
    "compiled_file": "successful_snippet_8321bf86",
    "expected_output": "Encoded: 1H1e1r1e1 1i1s1 1t1h1e1 1r1a1w1 1i1n1p1u1t1 1d1a1t1a1 1f1o1r1 1t1h1e1 1C1O1B1O1L1 1S1Y1S1I1N1 1b1a1s1e1d1 1o1n1 1t1h1e1 1p1r1o1v1i1d1e1d1 1s1p1e1c1i1f1i1c1a1t1i1o1n1s1: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nDecoded: Here is the raw input data for the COBOL SYSIN based on the provided specifications:\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}