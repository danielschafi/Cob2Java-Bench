{
    "cobol_file": {
        "file_name": "successful_snippet_96a8f31d.cob",
        "content": "       identification division.\n       program-id. string-example.\n       \n       data division.\n       \n       working-storage section.\n       \n       01 identite.\n           03 nom          pic x(25).\n           03 prenom       pic x(25).\n\n       01 today-date.\n           03 t-year       pic x(4).\n           03 t-month      pic x(2).\n           03 t-day        pic x(2).\n\n       77 non-integer      pic S999v99999  value 3.14159.\n       77 pi-edit          pic x(50).\n\n       77 signed-integer   pic S99         value +42.\n\n       77 begin-string     pic 99          value 13.\n       77 entete           pic x(132).\n\n       77 structure        pic X           value \"n\".\n           88 accepted                     value \"o\".\n\n       procedure division.\n       \n      *>*****************************************************\n      *> string with date from `function current-date(1:8)` *\n      *> (or from `accept date` if structs are authorized)  *\n      *>*****************************************************\n       \n       move \"Doe\"  to nom\n       move \"John\" to prenom\n       \n      *> by default structures are not authorized, let's change this\n       set accepted to true\n       \n       if accepted then\n\n           accept today-date from date YYYYMMDD\n\n       else\n\n           move function current-date(1:4) to t-year\n           move function current-date(5:2) to t-month\n           move function current-date(7:2) to t-day\n\n       end-if\n       \n       string\n           prenom          delimited by space\n           space           delimited by size\n           nom             delimited by space\n           \" on \"\n           t-day\n           \"/\"\n           t-month\n           \"/\"\n           t-year          delimited by size\n           into entete     with pointer begin-string\n           on overflow     display \"Error in string operation\"\n       end-string\n       \n       display spaces\n       \n       display entete                  *> \"            John Doe on 18/12/2014\"\n       \n      *>*****************************************************\n      *> cannot use non integer value in string operation   *\n      *> (same goes for binary and packed-decimal)          *\n      *> (works on OpenCobol 1.1.0 though...)               *\n      *>*****************************************************\n       \n       string\n           \"PI is : \"\n           non-integer     delimited by size\n           into            pi-edit\n           on overflow     display \"Error in string operation\"\n       end-string\n       \n       display pi-edit                 *> \"PI is : 00314159\"\n       \n       \n      *>*****************************************************\n      *> can use signed integer value in string operation   *\n      *>*****************************************************\n       \n       string\n           \"Answer to life is : \"\n           signed-integer  delimited by size\n           into            pi-edit\n           on overflow     display \"Error in string operation\"\n       end-string\n       \n       display pi-edit                 *> \"Answer to life is : 42\"\n       \n       \n       goback.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "20231001\n20231002\n20231003\n20231004\n20231005\n20231006\n20231007\n20231008"
    },
    "code_file": "successful_snippet_96a8f31d.cob",
    "compiled_file": "successful_snippet_96a8f31d",
    "expected_output": " \n            John Doe on 09/10/2025                                                                                                  \nPI is : 00314159                                  \nAnswer to life is : 42                            \n",
    "expected_output_files": [],
    "expected_input_output_files": []
}