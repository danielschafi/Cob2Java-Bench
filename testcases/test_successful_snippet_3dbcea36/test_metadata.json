{
  "cobol_file": {
    "file_name": "successful_snippet_3dbcea36.cob",
    "content": "      ******************************************************************\n      * author: Erik Eriksen\n      * date: 2021-10-21\n      * purpose: Example using \"is numeric\"\n      * tectonics: cobc\n      ******************************************************************\n       identification division.\n       program-id. is-numeric-test.\n       data division.\n       file section.\n       working-storage section.\n\n       01  ws-user-input                    pic x(10).\n       01  ws-user-input-justified          pic x(10) justified right.\n\n\n       procedure division.\n       main-procedure.\n           perform process-plain\n           perform process-zero-fill\n           perform process-trim\n           stop run.\n\n\n       process-plain.\n      *> If alphanumeric value entered has spaces, even if the user entered\n      *> just digits, it will not pass the \"is numeric\" test. (Even if\n      *> spaces are only trailing.)\n           display \"(plain) Enter a value: \" with no advancing\n           accept ws-user-input\n\n           if ws-user-input is numeric then\n               display ws-user-input \" is numeric!\"\n           else\n               display ws-user-input \" is not numeric.\"\n           end-if\n\n           exit paragraph.\n\n\n\n       process-zero-fill.\n      *> Right justifying and then filling the spaces with zeros followed\n      *> by testing for numeric does work.\n           display\n               \"(right justify, zero fill) Enter another value: \"\n               with no advancing\n           end-display\n           accept ws-user-input-justified\n\n           inspect ws-user-input-justified\n               replacing leading spaces by '0'\n\n           if ws-user-input-justified is numeric then\n               display ws-user-input-justified \" is numeric!\"\n           else\n               display ws-user-input-justified \" is not numeric.\"\n           end-if\n\n           exit paragraph.\n\n\n\n       process-trim.\n      *> Using the intrinsic \"TRIM\" function to remove any spaces in the\n      *> input also will pass the \"is numeric\" test if trimmed data is all\n      *> contiguous digits.\n           display \"(trim) Enter a third value: \" with no advancing\n           accept ws-user-input\n\n           if function trim(ws-user-input) is numeric then\n               display function trim(ws-user-input) \" is numeric!\"\n           else\n               display function trim(ws-user-input) \" is not numeric.\"\n           end-if\n\n           exit paragraph.\n\n       end program is-numeric-test.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "Hello     \n    World \n12345     \n  67890   \nTest      \n9999      \nCOBOL     \n42"
  }
}