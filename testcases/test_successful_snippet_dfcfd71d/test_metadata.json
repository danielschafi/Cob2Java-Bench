{
  "cobol_file": {
    "file_name": "successful_snippet_dfcfd71d.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AdventOfCode2019-10a.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       SELECT InputFile ASSIGN TO InputPath\n       ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n       FILE SECTION.\n       FD InputFile RECORD IS VARYING IN SIZE FROM 1 TO 9999 CHARACTERS\n           DEPENDING ON InputLen.\n       01 InputRec.\n        02 Cell PIC X(1) OCCURS 1 TO 9999 TIMES DEPENDING ON InputLen.\n\n       WORKING-STORAGE SECTION.\n       01 InputPath PIC X(50).\n       01 InputLen PIC 9(4).\n\n       01 Roids OCCURS 1 TO 9999 TIMES DEPENDING ON RoidsLen.\n        02 Ord PIC 9(2).\n        02 Abs PIC 9(2).\n       01 RoidsLen PIC 9(4).\n\n       01 Idx PIC 9(4).\n       01 Jdx PIC 9(4).\n       01 Kdx PIC 9(4).\n\n       01 cX USAGE FLOAT-LONG.\n       01 cY USAGE FLOAT-LONG.\n       01 cR USAGE FLOAT-LONG.\n       01 cP USAGE FLOAT-LONG.\n       01 Angles USAGE FLOAT-LONG OCCURS 1 TO 9999 TIMES\n           DEPENDING ON RoidsLen.\n       01 LoS PIC 9(4).\n       01 Best PIC 9(4).\n       01 BestLoS PIC 9(4).\n\n       PROCEDURE DIVISION.\n       Begin.\n           ACCEPT InputPath FROM ARGUMENT-VALUE.\n           OPEN INPUT InputFile.\n\n           READ InputFile.\n           MOVE 1 TO Idx.\n           MOVE 0 TO RoidsLen.\n           PERFORM FOREVER\n            PERFORM VARYING Jdx FROM 1 UNTIL Jdx > InputLen\n             IF Cell(Jdx) IS NOT EQUAL TO \"#\" \n              EXIT PERFORM CYCLE\n             END-IF\n\n             ADD 1 TO RoidsLen\n             COMPUTE Abs(RoidsLen) = Jdx - 1\n             COMPUTE Ord(RoidsLen) = Idx - 1\n            END-PERFORM\n\n            ADD 1 TO Idx\n            READ InputFile AT END EXIT PERFORM\n           END-PERFORM.\n\n           CLOSE InputFile.\n\n           PERFORM VARYING Idx FROM 1 UNTIL Idx > RoidsLen\n            MOVE 0 TO LoS\n\n            PERFORM VARYING Jdx FROM 1 UNTIL Jdx > RoidsLen\n             COMPUTE cX = Abs(Jdx) - Abs(Idx)\n             COMPUTE cY = Ord(Jdx) - Ord(Idx)\n             COMPUTE cR = FUNCTION SQRT(cX**2 + cY**2)\n             COMPUTE cP = (180 * FUNCTION ACOS(\n               cX / FUNCTION SQRT(cX**2 + cY**2)\n              )) / FUNCTION PI()\n             IF cY IS LESS THAN 0\n              COMPUTE cP = 360 - cP\n             END-IF\n\n             MOVE cP TO Angles(Jdx)\n             PERFORM VARYING Kdx FROM 1 UNTIL Kdx >= Jdx\n              IF Angles(Kdx) IS EQUAL TO cP\n               EXIT PERFORM\n              END-IF\n             END-PERFORM\n             IF Kdx IS EQUAL TO Jdx\n              ADD 1 TO LoS\n             END-IF\n\n            END-PERFORM\n\n            DISPLAY Idx \" \" Ord(Idx) \",\" Abs(Idx) \" \" LoS\n            IF LoS IS GREATER THAN BestLoS\n             MOVE Idx TO Best\n             MOVE LoS TO BestLoS\n            END-IF\n           END-PERFORM.\n\n           DISPLAY \" \"\n           DISPLAY Best \" \" Abs(Best) \",\" Ord(Best) \" \" BestLoS.\n\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "/data/input/customers.dat"
  }
}