{
  "cobol_file": {
    "file_name": "successful_snippet_f363eeb7.cob",
    "content": "      *========================== RDWADJST ============================*\n      * Authors: Brian D Pead\n      *\n      * License: MIT\n      *\n      * Description: This program adjusts the Record Descriptor Word \n      *     (RDW) on variable length record files, to support uploading \n      *     and downloading such files to/from an IBM mainframe.\n      *     GnuCOBOL expects RDWs to have a record length excluding \n      *     the RDW while the mainframe RDWs have a record length \n      *     including the RDW, i.e. the GnuCOBOL RDW record length is\n      *     4 less than the mainframe.\n      *\n      *     The program supports GnuCOBOL files read/written with \n      *     COB_VARSEQ_FORMAT = 0, i.e. RDWs have a 2 byte record\n      *     length (big-endian) + 2 NULs.\n      *\n      *     This program must be compiled with option std=mf which  \n      *     supports COMP-X fields and CBL_OPEN_FILE, etc.\n      *\n      *     This program requires 2 run-time arguments:\n      *         1. File name containing RDWs to be updated (RDWs are\n      *            updated in place).\n      *         2. GC2MF or MF2GC to increase or decrease RDWs by 4:\n      *                GC2MF is GnuCOBOL to Mainframe,\n      *                MF2GC is Mainframe to GnuCOBOL.\n      *\n      *     When uploading/downloading mainframe files, FTP in binary\n      *     mode and specify \"quote site rdw\" to have the mainframe \n      *     include the RDWs. \n      *\n      * Date        Version  Description\n      * ----        -------  -----------\n      * 2020-02-08  1.0      First release\n      *================================================================*\n\n       IDENTIFICATION DIVISION.\n      *========================\n\n       PROGRAM-ID.                 RDWADJST.\n\n       ENVIRONMENT DIVISION.\n      *=====================\n\n       CONFIGURATION SECTION.\n      *----------------------\n\n       SOURCE-COMPUTER.\n           IBM-Z15.\n      *    IBM-Z15 DEBUGGING MODE.\n\n       INPUT-OUTPUT SECTION.\n      *---------------------\n\n      /\n       DATA DIVISION.\n      *==============\n\n       FILE SECTION.\n      *-------------\n\n       WORKING-STORAGE SECTION.\n      *------------------------\n\n       01  W-RDWFILE-RECS          PIC 9(09)  COMP.\n       01  W-RDW-LEN-MIN           PIC S9(09) COMP VALUE 99999999.\n       01  W-RDW-LEN-MAX           PIC S9(09) COMP VALUE 0.\n       01  W-QUOTIENT              PIC 9(09)  COMP.\n       01  W-REMAINDER             PIC 9(09)  COMP.\n       01  W-DISP-NUM              PIC ZZ,ZZZ,ZZ9.\n       01  W-DATA-LEN              PIC X(04)  COMP-X.\n       01  W-FILE-HANDLE           PIC X(04)  COMP-X.\n       01  W-OFFSET                PIC X(08)  COMP-X.\n       01  W-NBYTES                PIC X(04)  COMP-X\n                                                   VALUE 4.\n       01  W-FLAG                  PIC X(01)  COMP-X \n                                                   VALUE 0.\n       01  W-FILE-PATH             PIC X(256).\n\n       01  W-FUNCTION              PIC X(05).\n           88  W-FUNCTION-DECR-RDW                 VALUE 'MF2GC'.\n           88  W-FUNCTION-INCR-RDW                 VALUE 'GC2MF'.\n           88  W-FUNCTION-OK                       VALUE 'MF2GC'\n                                                         'GC2MF'.\n\n       01  FILLER                  PIC X(01).\n           88  W-EOF                               VALUE 'Y'.\n           88  W-NOT-EOF                           VALUE 'N'.\n\n       01  FILLER                  PIC X(01).\n           88  W-VALIDATE                          VALUE 'V'.\n           88  W-UPDATE                            VALUE 'U'.\n\n       01  W-ERROR-MSG             PIC X(21)       VALUE\n           '**** RDWADJST error: '.\n\n       01  W-COMPILED-DATE.\n           05  W-COMPILED-DATE-YYYY\n                                   PIC X(04).\n           05  W-COMPILED-DATE-MM  PIC X(02).\n           05  W-COMPILED-DATE-DD  PIC X(02).\n           05  W-COMPILED-TIME-HH  PIC X(02).\n           05  W-COMPILED-TIME-MM  PIC X(02).\n           05  W-COMPILED-TIME-SS  PIC X(02).\n           05  FILLER              PIC X(07).\n\n       01  W-RDW.\n           05  W-RDW-LEN           PIC X(02)  COMP-X.\n           05  W-RDW-LV            PIC X(02).\n       01  FILLER REDEFINES W-RDW.\n           05  W-RDW-CHAR          PIC X(01)  COMP-X\n                                                   OCCURS 4\n                                                   INDEXED W-R-DX.\n\n       01  W-HEX-TABLE.\n           05  FILLER              PIC X(16)       VALUE\n               '0123456789ABCDEF'.\n       01  FILLER REDEFINES W-HEX-TABLE.\n           05  W-HEX-CHAR          PIC X(01)       OCCURS 16.\n\n       01  W-HEX-STRING.\n           05  FILLER                              OCCURS 4\n                                                   INDEXED W-H-DX.\n               10  W-HEX-CHAR-1    PIC X(01).\n               10  W-HEX-CHAR-2    PIC X(01).\n               10  W-HEX-DASH      PIC X(01).\n      /\n       PROCEDURE DIVISION.\n      *===================\n\n       MAIN.\n      *-----\n\n           PERFORM SUB-1000-START-UP THRU SUB-1000-EXIT\n\n           IF      RETURN-CODE = 0           \n               SET  W-VALIDATE     TO TRUE\n\n               PERFORM SUB-2000-PROCESS-RECS THRU SUB-2000-EXIT\n           END-IF\n\n           IF      RETURN-CODE = 0           \n               SET  W-UPDATE       TO TRUE\n\n               PERFORM SUB-2000-PROCESS-RECS THRU SUB-2000-EXIT\n           END-IF\n\n           IF      RETURN-CODE = 0           \n               PERFORM SUB-3000-SHUT-DOWN THRU SUB-3000-EXIT\n           END-IF\n           .\n       MAIN-EXIT.\n           STOP RUN.\n      /\n       SUB-1000-START-UP.\n      *------------------\n\n           MOVE FUNCTION WHEN-COMPILED \n                                   TO W-COMPILED-DATE\n\n           DISPLAY 'RDWADJST compiled on '\n               W-COMPILED-DATE-YYYY '/'\n               W-COMPILED-DATE-MM   '/'\n               W-COMPILED-DATE-DD   ' at '\n               W-COMPILED-TIME-HH   ':'\n               W-COMPILED-TIME-MM   ':'\n               W-COMPILED-TIME-SS\n\n           PERFORM SUB-1100-GET-ARGUMENTS THRU SUB-1100-EXIT\n\n           IF      RETURN-CODE NOT = 0\n               GO TO SUB-1000-EXIT\n           END-IF\n\n           CALL 'CBL_OPEN_FILE' USING W-FILE-PATH\n                                      3 *> INPUT AND OUTPUT\n                                      0 *> FUTURE USE\n                                      0 *> FUTURE USE\n                                      W-FILE-HANDLE\n\n           IF      RETURN-CODE NOT = 0            \n               DISPLAY W-ERROR-MSG\n                       ' return code '\n                       RETURN-CODE\n                       ' from CBL_OPEN_FILE'\n           END-IF\n           .\n       SUB-1000-EXIT.\n           EXIT.\n      /\n       SUB-1100-GET-ARGUMENTS.\n      *-----------------------\n\n           DISPLAY 1             UPON ARGUMENT-NUMBER\n\n           ACCEPT W-FILE-PATH    FROM ARGUMENT-VALUE\n               ON EXCEPTION\n                   DISPLAY W-ERROR-MSG\n                           'Argument 1 required - RDW file name'\n                   MOVE 20         TO RETURN-CODE\n                   GO TO SUB-1100-EXIT\n           END-ACCEPT\n\n           DISPLAY 'RDW file: '\n                   W-FILE-PATH\n\n           DISPLAY 2             UPON ARGUMENT-NUMBER\n\n           ACCEPT W-FUNCTION     FROM ARGUMENT-VALUE\n               ON EXCEPTION\n                   DISPLAY W-ERROR-MSG\n                           'Argument 2 required - function code'\n                   MOVE 30         TO RETURN-CODE\n                   GO TO SUB-1100-EXIT\n           END-ACCEPT\n\n           IF      W-FUNCTION-OK\n               DISPLAY 'Function: '\n                       W-FUNCTION\n           ELSE\n               DISPLAY W-ERROR-MSG\n                       ' Argument 2 must be GC2MF or MF2GC'\n               MOVE 40             TO RETURN-CODE\n               GO TO SUB-1100-EXIT\n           END-IF\n           .\n       SUB-1100-EXIT.\n           EXIT.\n      /\n       SUB-2000-PROCESS-RECS.\n      *----------------------\n\n           IF      W-VALIDATE\n               DISPLAY 'Validating RDWs...'\n           ELSE\n               DISPLAY 'Updating RDWs...'\n           END-IF\n\n           SET  W-NOT-EOF          TO TRUE\n           MOVE 0                  TO W-RDWFILE-RECS \n                                      W-OFFSET\n\n           PERFORM SUB-9100-READ-RDWFILE THRU SUB-9100-EXIT\n\n           PERFORM SUB-2100-PROCESS-REC THRU SUB-2100-EXIT\n               UNTIL W-EOF\n               OR    RETURN-CODE NOT = 0\n\n           IF      W-VALIDATE\n               MOVE W-RDW-LEN-MIN   TO W-DISP-NUM\n               DISPLAY 'Shortest RDW length: '\n                       W-DISP-NUM\n               MOVE W-RDW-LEN-MAX   TO W-DISP-NUM\n               DISPLAY 'Longest  RDW length: '\n                       W-DISP-NUM\n           END-IF\n           .\n       SUB-2000-EXIT.\n           EXIT.\n      /\n       SUB-2100-PROCESS-REC.\n      *---------------------\n\n      D    DISPLAY 'W-RDW-LEN = '\n      D            W-RDW-LEN\n\n           IF      W-RDW-LEN < W-RDW-LEN-MIN\n               MOVE W-RDW-LEN      TO W-RDW-LEN-MIN\n           END-IF\n\n           IF      W-RDW-LEN > W-RDW-LEN-MAX\n               MOVE W-RDW-LEN      TO W-RDW-LEN-MAX\n           END-IF\n\n           IF      W-RDW-LV NOT = LOW-VALUES\n               PERFORM SUB-9900-CONV-RDW-TO-HEX THRU SUB-9900-EXIT\n               DISPLAY '  Bytes 3-4 of RDW not = LOW-VALUES at offset '\n                       W-OFFSET\n                       ': '\n                       W-HEX-STRING(1 : 11)\n               MOVE 110            TO RETURN-CODE\n               GO TO SUB-2100-EXIT\n           END-IF\n\n           IF      W-RDW-LEN > 32 * 1024\n               PERFORM SUB-9900-CONV-RDW-TO-HEX THRU SUB-9900-EXIT\n               DISPLAY '  RDW len > 32K at offset '\n                       W-OFFSET\n                       ': '\n                       W-HEX-STRING(1 : 11)\n               MOVE 120            TO RETURN-CODE\n               GO TO SUB-2100-EXIT\n           END-IF\n\n           IF      W-FUNCTION-DECR-RDW\n               IF      W-RDW-LEN <= 4\n                   PERFORM SUB-9900-CONV-RDW-TO-HEX THRU SUB-9900-EXIT\n                   DISPLAY '  RDW len <= 4 at offset '\n                           W-OFFSET\n                           ': '\n                           W-HEX-STRING(1 : 11)\n                   MOVE 130        TO RETURN-CODE\n                   GO TO SUB-2100-EXIT\n               END-IF\n\n               SUBTRACT 4        FROM W-RDW-LEN\n                               GIVING W-DATA-LEN\n               MOVE W-DATA-LEN     TO W-RDW-LEN\n           ELSE\n               MOVE W-RDW-LEN      TO W-DATA-LEN\n               ADD  4\n                    W-DATA-LEN GIVING W-RDW-LEN\n           END-IF\n\n           IF      W-UPDATE\n               PERFORM SUB-9200-WRITE-RDWFILE THRU SUB-9200-EXIT\n           END-IF\n\n           ADD  4\n                W-DATA-LEN         TO W-OFFSET\n\n           PERFORM SUB-9100-READ-RDWFILE THRU SUB-9100-EXIT\n           .\n       SUB-2100-EXIT.\n           EXIT.\n      /\n       SUB-3000-SHUT-DOWN.\n      *-------------------\n\n           CALL 'CBL_CLOSE_FILE'\n                                USING W-FILE-HANDLE\n\n           DISPLAY 'RDWADJST completed'\n           .\n       SUB-3000-EXIT.\n           EXIT.\n      /\n       SUB-9100-READ-RDWFILE.\n      *----------------------\n\n           CALL 'CBL_READ_FILE' USING W-FILE-HANDLE\n                                      W-OFFSET\n                                      W-NBYTES\n                                      W-FLAG\n                                      W-RDW\n\n           EVALUATE RETURN-CODE            \n             WHEN 0\n               CONTINUE\n\n             WHEN 10\n               PERFORM SUB-9110-DISPLAY-RECS THRU SUB-9110-EXIT\n               SET  W-EOF          TO TRUE\n               MOVE 0              TO RETURN-CODE\n               GO TO SUB-9100-EXIT\n\n             WHEN OTHER\n               DISPLAY W-ERROR-MSG\n                       ' return code '\n                       RETURN-CODE\n                       ' from CBL_READ_FILE'\n               GO TO SUB-9100-EXIT\n           END-EVALUATE\n\n           ADD  1                  TO W-RDWFILE-RECS\n\n           DIVIDE W-RDWFILE-RECS   BY 10000\n                               GIVING W-QUOTIENT\n                            REMAINDER W-REMAINDER\n\n           IF      W-REMAINDER = 0\n               PERFORM SUB-9110-DISPLAY-RECS THRU SUB-9110-EXIT\n           END-IF\n           .\n       SUB-9100-EXIT.\n           EXIT.\n      /\n       SUB-9110-DISPLAY-RECS.\n      *----------------------\n\n           MOVE W-RDWFILE-RECS     TO W-DISP-NUM\n\n           IF      W-VALIDATE\n               DISPLAY '  RDWs validated: '\n                       W-DISP-NUM\n           ELSE\n               DISPLAY '  RDWs updated:   '\n                       W-DISP-NUM\n           END-IF\n           .\n       SUB-9110-EXIT.\n           EXIT.\n      /\n       SUB-9200-WRITE-RDWFILE.\n      *-----------------------\n\n           CALL 'CBL_WRITE_FILE'\n                                USING W-FILE-HANDLE\n                                      W-OFFSET\n                                      W-NBYTES\n                                      W-FLAG\n                                      W-RDW\n\n           IF      RETURN-CODE = 0            \n               CONTINUE\n           ELSE\n               DISPLAY W-ERROR-MSG\n                       ' return code '\n                       RETURN-CODE\n                       ' from CBL_WRITE_FILE'\n               GO TO SUB-9200-EXIT\n           END-IF\n           .\n       SUB-9200-EXIT.\n           EXIT.\n      /\n       SUB-9900-CONV-RDW-TO-HEX.\n      *-------------------------\n\n           PERFORM VARYING W-R-DX FROM 1 BY 1\n                     UNTIL W-R-DX > 4\n               \n               DIVIDE W-RDW-CHAR(W-R-DX)\n                                   BY 16\n                               GIVING W-QUOTIENT\n                            REMAINDER W-REMAINDER\n\n               SET  W-H-DX         TO W-R-DX\n               MOVE W-HEX-CHAR(W-QUOTIENT + 1)\n                                   TO W-HEX-CHAR-1(W-H-DX)\n               MOVE W-HEX-CHAR(W-REMAINDER + 1)\n                                   TO W-HEX-CHAR-2(W-H-DX)\n               MOVE '-'            TO W-HEX-DASH  (W-H-DX)\n           END-PERFORM\n           .\n       SUB-9900-EXIT.\n           EXIT.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "/path/to/input/file                                                                                                                    \nRDW file:                                                                                                                             \n/path/to/output/file                                                                                                                    \nRDW file:                                                                                                                             \nC:\\data\\transactions                                                                                                                  \nRDW file:                                                                                                                             \n/data/logs                                                                                                                            \nRDW file:"
  }
}