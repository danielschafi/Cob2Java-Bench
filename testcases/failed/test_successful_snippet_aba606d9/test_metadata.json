{
  "cobol_file": {
    "file_name": "successful_snippet_aba606d9.cob",
    "content": "      ******************************************************************\n      * Author:\n      * Date:\n      * Purpose:\n      * Tectonics: cobc\n      ******************************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HAMMING.\n       DATA DIVISION.\n       FILE SECTION.\n       WORKING-STORAGE SECTION.\n           01 WKS-OPTION       PIC 9(1) VALUE 0.\n           01 BinaryWord PIC X(7) VALUE '1101000'.\n           01 HammingArray.\n               02 HammingArrayBit PIC 9(1) OCCURS 11 TIMES.\n\n           01 WrongHammingArray.\n               02 WrongHammingArrayBit PIC 9(1) OCCURS 11 TIMES.\n\n           01 BinaryWordArray.\n               02 BitBinaryWord pic 9(1) OCCURS 7 times.\n\n           01 Parity1 pic 9(1).\n           01 Parity2 pic 9(1).\n           01 Parity4 pic 9(1).\n           01 Parity8 pic 9(1).\n\n           01 Letra PIC X(1).\n\n           01 ResidueParity pic 9(1).\n           01 Result pic 9(10)V99.\n\n           01 ErrorPosition pic 9(2) VALUE 0.\n\n       PROCEDURE DIVISION.\n       MAIN-PROCEDURE.\n           PERFORM MAIN-MENU UNTIL WKS-OPTION = 2.\n           STOP RUN.\n\n\n       MAIN-MENU.\n           DISPLAY \"Hamming (11,7)\".\n           DISPLAY \"1. Calcular Hamming\".\n           DISPLAY \"2. Salir\".\n           DISPLAY \"Elige una opcion: \".\n           ACCEPT WKS-OPTION\n           IF WKS-OPTION = 1\n               DISPLAY \"--------------------------------------------\"\n               DISPLAY \"Introduce letra en minuscula a evaluar\"\n               DISPLAY \"Ejemplo => 'h'\"\n               DISPLAY \"--------------------------------------------\"\n\n               ACCEPT Letra\n               PERFORM TRANS-LET-BIN\n\n               PERFORM FILL-HAMMING\n\n               PERFORM CALC-PARITY-BITS\n               DISPLAY \"-----------------------------------------\"\n               DISPLAY \"Su hamming es: \"\n               DISPLAY HammingArray\n               DISPLAY \"-----------------------------------------\"\n               DISPLAY \"Introduce el hamming a evaluar\"\n               DISPLAY \"Deben ser 11 bits !!! \"\n               ACCEPT WrongHammingArray\n\n               PERFORM CALC-PARITY-BITS-WRONG\n\n               PERFORM FIND-ERROR-POSITION\n\n           ELSE IF WKS-OPTION = 2\n               DISPLAY \"Adios...\"\n           ELSE\n               DISPLAY \"Opcion no valida\".\n\n       TRANS-LET-BIN.\n            IF Letra='a'\n                move '1100001' to BinaryWordArray\n            ELSE IF Letra='b'\n                move '1100010' to BinaryWordArray\n            ELSE IF Letra='c'\n                move '1100011' to BinaryWordArray\n            ELSE IF Letra='d'\n                move '1100100' to BinaryWordArray\n            ELSE IF Letra='e'\n                move '1100101' to BinaryWordArray\n            ELSE IF Letra='f'\n                move '1100110' to BinaryWordArray\n            ELSE IF Letra='g'\n                move '1100111' to BinaryWordArray\n            ELSE IF Letra='h'\n                move '1101000' to BinaryWordArray\n            ELSE IF Letra='i'\n                move '1101001' to BinaryWordArray\n            ELSE IF Letra='j'\n                move '1101010' to BinaryWordArray\n            ELSE IF Letra='k'\n                move '1101011' to BinaryWordArray\n            ELSE IF Letra='l'\n                move '1101100' to BinaryWordArray\n            ELSE IF Letra='m'\n                move '1101101' to BinaryWordArray\n            ELSE IF Letra='n'\n                move '1101110' to BinaryWordArray\n            ELSE IF Letra='o'\n                move '1101111' to BinaryWordArray\n            ELSE IF Letra='p'\n                move '1110000' to BinaryWordArray\n            ELSE IF Letra='q'\n                move '1110001' to BinaryWordArray\n            ELSE IF Letra='r'\n                move '1110010' to BinaryWordArray\n            ELSE IF Letra='s'\n                move '1110011' to BinaryWordArray\n            ELSE IF Letra='t'\n                move '1110100' to BinaryWordArray\n            ELSE IF Letra='u'\n                move '1110101' to BinaryWordArray\n            ELSE IF Letra='v'\n                move '1110110' to BinaryWordArray\n            ELSE IF Letra='w'\n                move '1110111' to BinaryWordArray\n            ELSE IF Letra='x'\n                move '1111000' to BinaryWordArray\n            ELSE IF Letra='y'\n                move '1111001' to BinaryWordArray\n            ELSE IF Letra='z'\n                move '1111010' to BinaryWordArray\n            ELSE\n               DISPLAY \"Opcion no valida\".\n\n       FILL-HAMMING.\n           MOVE ALL SPACES TO HammingArray\n           MOVE 0 TO HammingArrayBit(1).\n           move 0 to HammingArrayBit(2).\n           move BitBinaryWord(1) to HammingArrayBit(3).\n           move 0 to HammingArrayBit(4).\n           move BitBinaryWord(2) to HammingArrayBit(5).\n           move BitBinaryWord(3) to HammingArrayBit(6).\n           move BitBinaryWord(4) to HammingArrayBit(7).\n           move 0 to HammingArrayBit(8).\n           move BitBinaryWord(5) to HammingArrayBit(9).\n           move BitBinaryWord(6) to HammingArrayBit(10).\n           move BitBinaryWord(7) to HammingArrayBit(11).\n\n       CALC-PARITY-BITS.\n           MOVE 0 TO Parity1.\n           COMPUTE Parity1 = HammingArrayBit(3) + HammingArrayBit(5)\n           + HammingArrayBit(7) + HammingArrayBit(9)\n           + HammingArrayBit(11).\n\n           MOVE 0 TO Parity2.\n           COMPUTE Parity2 = HammingArrayBit(3) + HammingArrayBit(6)\n           + HammingArrayBit(7) + HammingArrayBit(10)\n           + HammingArrayBit(11).\n\n           MOVE 0 TO Parity4.\n           COMPUTE Parity4 = HammingArrayBit(5) + HammingArrayBit(6)\n           + HammingArrayBit(7).\n\n           MOVE 0 TO Parity8.\n           COMPUTE Parity8 = HammingArrayBit(9)\n           + HammingArrayBit(10) + HammingArrayBit(11).\n\n           IF Parity1 = 1 OR Parity1 = 3 OR Parity1 = 5 OR Parity1 = 7\n               move 1 to HammingArrayBit(1)\n           ELSE\n               move 0 to HammingArrayBit(1).\n\n           IF Parity2 = 1 OR Parity2 = 3 OR Parity2 = 5 OR Parity2 = 7\n               move 1 to HammingArrayBit(2)\n           ELSE\n               move 0 to HammingArrayBit(2).\n\n           IF Parity4 = 1 OR Parity4 = 3 OR Parity4 = 5 OR Parity4 = 7\n               move 1 to HammingArrayBit(4)\n           ELSE\n               move 0 to HammingArrayBit(4).\n\n           IF Parity8 = 1 OR Parity8 = 3 OR Parity8 = 5 OR Parity8 = 7\n               move 1 to HammingArrayBit(8)\n           ELSE\n               move 0 to HammingArrayBit(8).\n\n       CALC-PARITY-BITS-WRONG.\n           DISPLAY \"Hamming a evaluar: \" WrongHammingArray\n           MOVE 0 TO Parity1.\n           COMPUTE Parity1 = WrongHammingArrayBit(3)\n           + WrongHammingArrayBit(5)\n           + WrongHammingArrayBit(7)\n           + WrongHammingArrayBit(9)\n           + WrongHammingArrayBit(11).\n\n           MOVE 0 TO Parity2.\n           COMPUTE Parity2 = WrongHammingArrayBit(3)\n           + WrongHammingArrayBit(6)\n           + WrongHammingArrayBit(7)\n           + WrongHammingArrayBit(10)\n           + WrongHammingArrayBit(11).\n\n           MOVE 0 TO Parity4.\n           COMPUTE Parity4 = WrongHammingArrayBit(5)\n           + WrongHammingArrayBit(6)\n           + WrongHammingArrayBit(7).\n\n           MOVE 0 TO Parity8.\n           COMPUTE Parity8 = WrongHammingArrayBit(9)\n           + WrongHammingArrayBit(10)\n           + WrongHammingArrayBit(11).\n\n           IF Parity1 = 1 OR Parity1 = 3 OR Parity1 = 5 OR Parity1 = 7\n               move 1 to Parity1\n           ELSE\n               move 0 to Parity1.\n\n           IF Parity2 = 1 OR Parity2 = 3 OR Parity2 = 5 OR Parity2 = 7\n               move 1 to Parity2\n           ELSE\n               move 0 to Parity2.\n\n           IF Parity4 = 1 OR Parity4 = 3 OR Parity4 = 5 OR Parity4 = 7\n               move 1 to Parity4\n           ELSE\n               move 0 to Parity4.\n\n           IF Parity8 = 1 OR Parity8 = 3 OR Parity8 = 5 OR Parity8 = 7\n               move 1 to Parity8\n           ELSE\n               move 0 to Parity8.\n\n       FIND-ERROR-POSITION.\n\n           MOVE 0 TO ErrorPosition.\n           IF Parity1 <> WrongHammingArrayBit(1)\n               ADD 1 TO ErrorPosition GIVING ErrorPosition\n           END-IF.\n\n           IF Parity2 <> WrongHammingArrayBit(2)\n               ADD 2 TO ErrorPosition GIVING ErrorPosition\n           END-IF.\n\n           IF Parity4 <> WrongHammingArrayBit(4)\n               ADD 4 TO ErrorPosition GIVING ErrorPosition\n           END-IF.\n\n           IF Parity8 <> WrongHammingArrayBit(8)\n               ADD 8 TO ErrorPosition GIVING ErrorPosition\n           END-IF.\n\n           IF ErrorPosition = 0\n               DISPLAY \"*****************************************\"\n               DISPLAY \"La cadena no tiene error\"\n               DISPLAY \"*****************************************\"\n           ELSE\n               DISPLAY \"*****************************************\"\n               DISPLAY \"El error esta en la posicion: \" ErrorPosition\n               DISPLAY \"*****************************************\".\n\n       END PROGRAM HAMMING.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "0\nA\n11010101010\n1\nB\n11110000111\n2\nC\n10101010101\n1\nD\n00000000000\n1\nE\n11111111111\n1\nF\n01010101010\n0"
  }
}