{
  "cobol_file": {
    "file_name": "successful_snippet_27f5ae20.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AOC-2021-10-2.\n       AUTHOR. ANNA KOSIERADZKA.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INPUTFILE ASSIGN TO \"d10.input\"\n           ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n       FILE SECTION.\n         FD INPUTFILE\n         RECORD IS VARYING IN SIZE FROM 8 to 128\n         DEPENDING ON REC-LEN.\n         01 INPUTRECORD PIC X(128).\n\n       WORKING-STORAGE SECTION.\n         01 FILE-STATUS PIC 9 VALUE 0.\n         01 REC-LEN PIC 9(3) COMP.\n         01 WS-STACK PIC X OCCURS 100 TIMES.\n         01 WS-RESULT PIC 9(16) VALUE 0.\n         01 WS-LINE PIC X(128).     \n         01 WS-LINE-SCORE PIC 9(16) VALUE 0.\n         01 WS-ARR OCCURS 100 TIMES.\n           05 WS-SCORES PIC 9(16) VALUE 0.\n         77 S PIC 9(3) VALUE 0.\n         77 I PIC 9(3) VALUE 1.\n         77 WRONG PIC 9 VALUE 0.\n         77 X PIC X.\n         77 Y PIC X.\n         77 N PIC 9.\n         77 SCORES-NUM PIC 9(3) VALUE 0.\n\n       PROCEDURE DIVISION.\n       001-MAIN.\n           OPEN INPUT INPUTFILE.\n           PERFORM 002-READ UNTIL FILE-STATUS = 1.\n           CLOSE INPUTFILE.\n           PERFORM 005-FIND-MIDDLE-SCORE. \n           DISPLAY WS-RESULT.\n           STOP RUN.\n            \n       002-READ.\n           READ INPUTFILE\n             AT END MOVE 1 TO FILE-STATUS\n             NOT AT END PERFORM 003-PROCESS-RECORD\n           END-READ.\n\n       003-PROCESS-RECORD.\n           MOVE INPUTRECORD TO WS-LINE.\n           MOVE 0 TO S.\n           MOVE 0 TO WRONG.        \n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > REC-LEN OR WRONG = 1\n             MOVE INPUTRECORD(I:1) TO X\n             IF X = '(' OR X = '[' OR X = '{' OR X = '<' THEN\n               ADD 1 TO S\n               MOVE X TO WS-STACK(S)\n             ELSE\n               MOVE WS-STACK(S) TO Y\n               SUBTRACT 1 FROM S\n               IF X = ')' AND Y <> '(' THEN\n                 MOVE 1 TO WRONG\n               ELSE IF X = ']' AND Y <> '[' THEN\n                 MOVE 1 TO WRONG\n               ELSE IF X = '}' AND Y <> '{' THEN\n                 MOVE 1 TO WRONG\n               ELSE IF X = '>' AND Y <> '<' THEN\n                 MOVE 1 TO WRONG\n               END-IF\n             END-IF\n           END-PERFORM.\n           IF WRONG = 0 THEN\n             PERFORM 004-COMPLETE-LINE\n           END-IF.\n\n       004-COMPLETE-LINE.\n           MOVE 0 TO WS-LINE-SCORE.\n           PERFORM UNTIL S = 0\n             EVALUATE WS-STACK(S)\n               WHEN '('\n                 MOVE ')' TO X\n                 MOVE 1 TO N\n               WHEN '['\n                 MOVE ']' TO X\n                 MOVE 2 TO N\n               WHEN '{'\n                 MOVE '}' TO X\n                 MOVE 3 TO N\n               WHEN '<'\n                 MOVE '>' TO X\n                 MOVE 4 TO N\n               END-EVALUATE  \n               SUBTRACT 1 FROM S\n               COMPUTE WS-LINE-SCORE = 5 * WS-LINE-SCORE + N\n           END-PERFORM.      \n           ADD 1 TO SCORES-NUM.\n           MOVE WS-LINE-SCORE TO WS-SCORES(SCORES-NUM).\n\n       005-FIND-MIDDLE-SCORE.\n           SORT WS-ARR DESCENDING WS-SCORES.\n           COMPUTE WS-RESULT = WS-SCORES(SCORES-NUM / 2 + 1).\n"
  },
  "input_files": [
    {
      "file_name": "d10.input",
      "content": "{[(<(())>)]]}\n([])\n{()()()}\n<([{}])>\n[<>({}){}[([])<>]]\n(((({<>}<{<{<>}{[]{[]{}}}>[{[]{<()<>>\n{([(<{}[<>[]}>{[]{[(<()>\n<{([([[(<>()){}]>(<<{{\n[({(<(())[]>[[{[]{<()<>>\n((((({}))[<>[]}"
    }
  ],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}