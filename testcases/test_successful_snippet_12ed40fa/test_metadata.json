{
  "cobol_file": {
    "file_name": "successful_snippet_12ed40fa.cob",
    "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      *\n       Program-ID. cs04a.\n       Environment Division.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(512).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'cs04a'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(008) COMP    VALUE 0.\n           05  BINGO-COUNT        PIC 9(008) COMP    VALUE 0.\n           05  BINGO-COL          PIC 9(009) COMP    VALUE 0.\n           05  BINGO-ROW          PIC 9(009) COMP    VALUE 0.\n           05  BOARDS-MAX         PIC 9(008) COMP    VALUE 0.\n           05  BOARDS-PTR         PIC 9(008) COMP    VALUE 1.\n           05  WINNING-BOARD      PIC 9(009) COMP    VALUE 1.\n           05  WINNING-SUM        PIC 9(009) COMP    VALUE 0.\n           05  NUMBERS-MAX        PIC 9(008) COMP    VALUE 0.\n           05  NUMBERS-PTR        PIC 9(008) COMP    VALUE 1.\n           05  CURR-PRODUCT       PIC 9(016) COMP    VALUE 0.\n           05  OPERATION-ARG      PIC 9(008) COMP    VALUE 0.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n           05  WINNING-NUMBER     PIC X(002)         VALUE LOW-VALUES.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(512)         VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n           05  PROCESS-SW         PIC X(004)         VALUE LOW-VALUES.\n               88  PROCESS-TEST                      VALUE 'TEST'.\n           05  BINGO-SW           PIC X(008)         VALUE 'N'.\n               88  SOMEONE-YELLS-BINGO               VALUE 'Y'\n                                                     FALSE 'N'.\n\n       01  DRAW-NUMBERS-TABLE.\n           05  DRAW-NUMBER\n               OCCURS 200\n               INDEXED NUMBERS-INDX\n               PIC X(002) JUST RIGHT.\n\n       01  BINGO-BOARD-TABLES.\n           05  BINGO-BOARD OCCURS 200 INDEXED BOARD-INDX.\n               10  BOARD-ROW OCCURS 5 INDEXED ROW-INDX ROW-INDX-B.\n                   15  BOARD-COL OCCURS 5 INDEXED COL-INDX COL-INDX-B.\n                       20  BOARD-VAL  PIC X(002) JUST RIGHT.\n                       20  BINGO-MARK PIC X(001).\n                           88  BINGO-MARKED           VALUE 'Y'\n                                                      FALSE 'N'.\n\n       Procedure Division.\n           ACCEPT PROCESS-TYPE FROM COMMAND-LINE\n           MOVE FUNCTION UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n\n           IF PROCESS-TEST\n               READY TRACE\n           END-IF\n\n           PERFORM 1000-READ-AND-PARSE-INPT\n\n           PERFORM 2000-PLAY-THE-GAME\n             VARYING NUMBERS-INDX FROM 1 BY 1\n             UNTIL NUMBERS-INDX > NUMBERS-MAX\n             OR SOMEONE-YELLS-BINGO\n\n           IF SOMEONE-YELLS-BINGO\n               DISPLAY\n                 MYNAME\n                ' bingo is declared for board '\n                WINNING-BOARD\n                PERFORM 9010-DUMP-BOARDS\n                DISPLAY MYNAME ' winning number ' WINNING-NUMBER\n                DISPLAY MYNAME ' bingo row ' BINGO-ROW\n                DISPLAY MYNAME ' bingo col ' BINGO-COL\n                PERFORM 3000-SUM-WINNING-BOARD\n                COMPUTE CURR-PRODUCT = \n                  FUNCTION NUMVAL(WINNING-NUMBER) * WINNING-SUM\n                DISPLAY MYNAME ' final score ' CURR-PRODUCT\n           ELSE\n               DISPLAY MYNAME ' bingo remains elusive'\n           END-IF\n\n           DISPLAY MYNAME ' records read ' WS-REC-COUNT\n\n           GOBACK.\n\n       1000-READ-AND-PARSE-INPT.\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           PERFORM UNTIL INPT-DATA-EOF\n             EVALUATE TRUE\n               WHEN WS-REC-COUNT = 1\n                    PERFORM 1100-PARSE-NUMBERS\n               WHEN WS-INPT = SPACES\n                    IF BOARDS-MAX = 0\n                        SET BOARD-INDX TO 1\n                    ELSE\n                        SET BOARD-INDX UP BY 1\n                    END-IF\n                    SET ROW-INDX TO 1\n                    ADD 1 TO BOARDS-MAX\n                    INITIALIZE BINGO-BOARD(BOARD-INDX)\n               WHEN OTHER\n                    PERFORM 1200-PARSE-BOARD\n                    IF ROW-INDX < 5\n                        SET ROW-INDX UP BY 1\n                    END-IF\n             END-EVALUATE\n             PERFORM 8010-READ-INPT-DATA\n           END-PERFORM\n\n           CLOSE INPT-DATA\n\n           DISPLAY\n            MYNAME\n            ' drawn numbers '\n            NUMBERS-MAX\n\n           DISPLAY\n            MYNAME\n            ' boards '\n            BOARDS-MAX\n\n           IF PROCESS-TEST\n               PERFORM 9010-DUMP-BOARDS\n           END-IF\n           .\n\n       1100-PARSE-NUMBERS.\n           INITIALIZE DRAW-NUMBERS-TABLE\n           SET NUMBERS-PTR TO 1\n\n           PERFORM VARYING NUMBERS-INDX FROM 1 BY 1\n           UNTIL WS-INPT-DATA(NUMBERS-PTR:1) = SPACE\n             UNSTRING WS-INPT-DATA DELIMITED ',' OR SPACE\n               INTO DRAW-NUMBER(NUMBERS-INDX)\n               POINTER NUMBERS-PTR\n             END-UNSTRING\n             ADD 1 TO NUMBERS-MAX\n           END-PERFORM\n           .\n\n       1200-PARSE-BOARD.\n           MOVE 1 TO BOARDS-PTR\n\n           PERFORM VARYING COL-INDX FROM 1 BY 1\n           UNTIL COL-INDX > 5\n             IF WS-INPT-DATA(1:1) = SPACE\n                 UNSTRING WS-INPT-DATA(2:) DELIMITED ALL SPACE\n                   INTO BOARD-VAL(BOARD-INDX,ROW-INDX,COL-INDX)\n                   POINTER BOARDS-PTR\n                 END-UNSTRING\n             ELSE\n                 UNSTRING WS-INPT-DATA DELIMITED ALL SPACE\n                   INTO BOARD-VAL(BOARD-INDX,ROW-INDX,COL-INDX)\n                   POINTER BOARDS-PTR\n                 END-UNSTRING\n             END-IF\n             SET BINGO-MARKED(BOARD-INDX,ROW-INDX,COL-INDX) TO FALSE\n           END-PERFORM\n           .\n\n       2000-PLAY-THE-GAME.\n           PERFORM VARYING BOARD-INDX FROM 1 BY 1\n           UNTIL BOARD-INDX > BOARDS-MAX OR SOMEONE-YELLS-BINGO\n             PERFORM VARYING ROW-INDX FROM 1 BY 1\n             UNTIL ROW-INDX > 5 OR SOMEONE-YELLS-BINGO\n               PERFORM VARYING COL-INDX FROM 1 BY 1\n               UNTIL COL-INDX > 5\n                 IF BOARD-VAL(BOARD-INDX,ROW-INDX,COL-INDX)\n                 = DRAW-NUMBER(NUMBERS-INDX)\n                     SET BINGO-MARKED(BOARD-INDX,ROW-INDX,COL-INDX)\n                      TO TRUE\n                 END-IF\n               END-PERFORM\n             END-PERFORM\n             PERFORM 2100-DID-SOMEONE-YELL-BINGO\n             IF SOMEONE-YELLS-BINGO\n                 MOVE BOARD-INDX TO WINNING-BOARD\n                 MOVE DRAW-NUMBER(NUMBERS-INDX) TO WINNING-NUMBER\n             END-IF\n           END-PERFORM\n           .\n\n       2100-DID-SOMEONE-YELL-BINGO.\n           PERFORM VARYING ROW-INDX-B FROM 1 BY 1\n           UNTIL ROW-INDX-B > 5 OR BINGO-COUNT = 5\n             MOVE 0 TO BINGO-COUNT\n             PERFORM VARYING COL-INDX-B FROM 1 BY 1\n             UNTIL COL-INDX-B > 5 OR BINGO-COUNT = 5\n               IF BINGO-MARKED(BOARD-INDX,ROW-INDX-B,COL-INDX-B)\n                   ADD 1 TO BINGO-COUNT\n               END-IF\n             END-PERFORM\n           END-PERFORM\n\n           IF BINGO-COUNT = 5\n               SET SOMEONE-YELLS-BINGO TO TRUE\n               SET ROW-INDX-B DOWN BY 1\n               MOVE ROW-INDX-B TO BINGO-ROW\n           ELSE\n               PERFORM VARYING COL-INDX-B FROM 1 BY 1\n               UNTIL COL-INDX-B > 5 OR BINGO-COUNT = 5\n                 MOVE 0 TO BINGO-COUNT\n                 PERFORM VARYING ROW-INDX-B FROM 1 BY 1\n                 UNTIL ROW-INDX-B > 5 OR BINGO-COUNT = 5\n                   IF BINGO-MARKED(BOARD-INDX,ROW-INDX-B,COL-INDX-B)\n                       ADD 1 TO BINGO-COUNT\n                   END-IF\n                 END-PERFORM\n               END-PERFORM\n               IF BINGO-COUNT = 5\n                   SET SOMEONE-YELLS-BINGO TO TRUE\n                   SET COL-INDX-B DOWN BY 1\n                   MOVE COL-INDX-B TO BINGO-COL\n               END-IF\n           END-IF\n           .\n\n       3000-SUM-WINNING-BOARD.\n           PERFORM VARYING ROW-INDX FROM 1 BY 1\n           UNTIL ROW-INDX > 5\n           AFTER COL-INDX FROM 1 BY 1\n           UNTIL COL-INDX > 5\n      *       IF ROW-INDX = BINGO-ROW OR COL-INDX = BINGO-COL\n             IF BINGO-MARKED(WINNING-BOARD,ROW-INDX,COL-INDX)\n                 CONTINUE\n             ELSE\n                 DISPLAY MYNAME ' adding BOARD-VAL('\n                   WINNING-BOARD ',' ROW-INDX ',' COL-INDX ') '\n                   BOARD-VAL(WINNING-BOARD,ROW-INDX,COL-INDX)\n                 ADD FUNCTION NUMVAL(\n                     BOARD-VAL(WINNING-BOARD,ROW-INDX,COL-INDX))\n                  TO WINNING-SUM\n             END-IF\n           END-PERFORM\n\n           DISPLAY MYNAME ' winning sum ' WINNING-SUM\n           .\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n           END-READ\n           .\n\n       9010-DUMP-BOARDS.\n           IF PROCESS-TEST\n               RESET TRACE\n           END-IF\n\n           PERFORM VARYING BOARD-INDX FROM 1 BY 1\n           UNTIL BOARD-INDX > BOARDS-MAX\n             PERFORM VARYING ROW-INDX FROM 1 BY 1\n             UNTIL ROW-INDX > 5\n               DISPLAY MYNAME ' ' BOARD-INDX WITH NO ADVANCING\n               PERFORM VARYING COL-INDX FROM 1 BY 1\n               UNTIL COL-INDX > 5\n                 DISPLAY\n                   SPACE\n                   BOARD-VAL(BOARD-INDX,ROW-INDX,COL-INDX)\n                   SPACE\n                   BINGO-MARK(BOARD-INDX,ROW-INDX,COL-INDX)\n                   SPACE\n                   WITH NO ADVANCING\n               END-PERFORM\n               DISPLAY ' '\n             END-PERFORM\n             DISPLAY MYNAME\n           END-PERFORM\n\n           IF PROCESS-TEST\n               READY TRACE\n           END-IF\n           .\n\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "HELP"
  }
}