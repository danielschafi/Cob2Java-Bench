{
    "cobol_file": {
        "file_name": "successful_snippet_d0cdcabb.cob",
        "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      *\n       Program-ID. cs09a.\n       Environment Division.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(4096).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'cs09a'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(009) COMP    VALUE 0.\n           05  ROW-COUNT          PIC 9(009) COMP    VALUE 0.\n           05  ROW-MAX            PIC 9(009) COMP    VALUE 0.\n           05  COL-MAX            PIC 9(009) COMP    VALUE 0.\n           05  RISK-SUM           PIC 9(009) COMP    VALUE 0.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n           05  IN-SIGNAL-PATTERNS PIC X(060)         VALUE SPACES.\n           05  IN-FOUR-DIGITS     PIC X(032)         VALUE SPACES.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(4096)        VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n           05  PROCESS-SW         PIC X(004)         VALUE LOW-VALUES.\n               88  PROCESS-TEST                      VALUE 'TEST'.\n           05  LOW-POINT-SW       PIC X(001)         VALUE 'N'.\n               88  A-NEW-LOW                         VALUE 'Y'\n                                                     FALSE 'N'.\n\n       01  HEIGHT-MAP.\n           05  HEIGHT-ROW\n               OCCURS 100\n               INDEXED ROW-I1 ROW-I2.\n               10  HEIGHT-COL\n                   OCCURS 100\n                   INDEXED COL-I1 COL-I2.\n                   15  HEIGHT     PIC X(001).\n\n       01  ADJACENT-LOCATIONS.\n           05  ALOC-MAX           PIC 9(004)  COMP   VALUE 0.\n           05  ALOC-SUB           PIC 9(004)  COMP   VALUE 0.\n           05  ALOC-VAL OCCURS 4  PIC X(001).\n\n       01  LOW-POINT-TABLE.\n           05  LOW-POINT-MAX      PIC 9(009)  COMP   VALUE 0.\n           05  LOW-POINT-SUB      PIC 9(009)  COMP   VALUE 0.\n           05  LOW-POINT OCCURS 10000 PIC X(001).\n\n       Procedure Division.\n           DISPLAY MYNAME SPACE FUNCTION CURRENT-DATE\n\n           ACCEPT PROCESS-TYPE FROM COMMAND-LINE\n\n           MOVE FUNCTION UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n\n           INITIALIZE HEIGHT-MAP\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           PERFORM 1000-LOAD-INPUT UNTIL INPT-DATA-EOF\n\n           CLOSE INPT-DATA\n\n           DISPLAY MYNAME ' row max         ' ROW-MAX\n           DISPLAY MYNAME ' col max         ' COL-MAX\n           \n           PERFORM 2000-PROCESS-HEIGHT-MAP\n\n           DISPLAY MYNAME ' sum of all risk ' RISK-SUM\n           DISPLAY MYNAME ' records read    ' WS-REC-COUNT\n\n           DISPLAY MYNAME SPACE FUNCTION CURRENT-DATE\n           GOBACK.\n\n       1000-LOAD-INPUT.\n           ADD 1 TO ROW-COUNT ROW-MAX\n\n           IF ROW-COUNT = 1\n               INSPECT WS-INPT\n                 TALLYING COL-MAX \n                   FOR ALL CHARACTERS BEFORE INITIAL SPACE\n           END-IF\n\n           SET ROW-I1 TO ROW-COUNT\n           MOVE WS-INPT(1:COL-MAX) TO HEIGHT-ROW(ROW-I1)\n\n           PERFORM 8010-READ-INPT-DATA\n           .\n\n       2000-PROCESS-HEIGHT-MAP.\n           PERFORM 2010-FIND-LOW-POINTS\n             VARYING ROW-I1 FROM 1 BY 1\n             UNTIL ROW-I1 > ROW-MAX\n             AFTER COL-I1 FROM 1 BY 1\n             UNTIL COL-I1 > COL-MAX\n\n           display myname ' low point max ' low-point-max\n           PERFORM VARYING LOW-POINT-SUB FROM 1 BY 1\n           UNTIL LOW-POINT-SUB > LOW-POINT-MAX\n             COMPUTE RISK-SUM =\n               RISK-SUM + 1 + FUNCTION NUMVAL(LOW-POINT(LOW-POINT-SUB))\n           END-PERFORM\n           .\n\n       2010-FIND-LOW-POINTS.\n           PERFORM 8020-DETERMINE-ADJACENT\n           SET A-NEW-LOW TO TRUE\n           IF PROCESS-TEST OR (ROW-I1 = 100 AND COL-I1 = 1)\n               DISPLAY MYNAME ' HEIGHT('ROW-I1','COL-I1') '\n                 HEIGHT(ROW-I1,COL-I1)\n           END-IF\n           PERFORM VARYING ALOC-SUB FROM 1 BY 1\n           UNTIL ALOC-SUB > ALOC-MAX\n           OR NOT A-NEW-LOW\n             IF PROCESS-TEST OR (ROW-I1 = 100 AND COL-I1 = 1)\n                 DISPLAY MYNAME SPACE\n                   ALOC-VAL(ALOC-SUB)\n             END-IF\n             IF ALOC-VAL(ALOC-SUB) <= HEIGHT(ROW-I1,COL-I1)\n                 SET A-NEW-LOW TO FALSE\n                 IF PROCESS-TEST\n                 OR (ROW-I1 = 100 AND COL-I1 = 1)\n                     DISPLAY MYNAME SPACE\n                       'ALOC-VAL('ALOC-SUB') ' ALOC-VAL(ALOC-SUB)\n                       ' <= HEIGHT('ROW-I1','COL-I1') '\n                       HEIGHT(ROW-I1,COL-I1)\n                 END-IF\n             END-IF\n           END-PERFORM\n\n           IF A-NEW-LOW\n               ADD 1 TO LOW-POINT-MAX\n               ADD 1 TO LOW-POINT-SUB\n               MOVE HEIGHT(ROW-I1,COL-I1) TO LOW-POINT(LOW-POINT-SUB)\n               IF PROCESS-TEST \n               OR (ROW-I1 = 100 AND COL-I1 = 1)\n               OR (ROW-I1 = 89  AND COL-I1 = 1)\n               OR (ROW-I1 = 15  AND COL-I1 = 99)\n               OR (ROW-I1 = 23  AND COL-I1 = 100)\n               OR (ROW-I1 = 1   AND COL-I1 = 20)\n                 DISPLAY MYNAME ' new low ' LOW-POINT(LOW-POINT-SUB)\n                 DISPLAY MYNAME ' found ' ROW-I1 ',' COL-I1\n               END-IF\n           END-IF\n           .\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n           END-READ\n           .\n\n       8020-DETERMINE-ADJACENT.\n           SET ROW-I2 TO ROW-I1\n           SET COL-I2 TO COL-I1\n           INITIALIZE\n             ALOC-MAX\n             ALOC-SUB\n\n           IF ROW-I1 > 1\n               ADD 1 TO ALOC-SUB\n               ADD 1 TO ALOC-MAX\n               SET ROW-I2 DOWN BY 1\n               MOVE HEIGHT(ROW-I2,COL-I2) TO ALOC-VAL(ALOC-SUB)\n               SET ROW-I2 TO ROW-I1\n           END-IF\n\n           IF ROW-I1 < ROW-MAX\n               ADD 1 TO ALOC-SUB\n               ADD 1 TO ALOC-MAX\n               SET ROW-I2 UP BY 1\n               MOVE HEIGHT(ROW-I2,COL-I2) TO ALOC-VAL(ALOC-SUB)\n               SET ROW-I2 TO ROW-I1\n           END-IF\n\n           IF COL-I1 > 1\n               ADD 1 TO ALOC-SUB\n               ADD 1 TO ALOC-MAX\n               SET COL-I2 DOWN BY 1\n               MOVE HEIGHT(ROW-I2,COL-I2) TO ALOC-VAL(ALOC-SUB)\n               SET COL-I2 TO COL-I1\n           END-IF\n\n           IF COL-I1 < COL-MAX\n               ADD 1 TO ALOC-SUB\n               ADD 1 TO ALOC-MAX\n               SET COL-I2 UP BY 1\n               MOVE HEIGHT(ROW-I2,COL-I2) TO ALOC-VAL(ALOC-SUB)\n               SET COL-I2 TO COL-I1\n           END-IF\n\n           IF ALOC-MAX < 2\n               DISPLAY\n                 MYNAME ' error in determining adjacent locations '\n                 ALOC-MAX SPACE\n                 ROW-I1 SPACE\n                 COL-I1 SPACE\n           END-IF\n           .\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "LOAD  \nBACKUP  \nREPORT  \nVALIDATE  \nUPDATE  \nDELETE  \nINSERT  \nEXIT"
    },
    "code_file": "successful_snippet_d0cdcabb.cob",
    "compiled_file": "successful_snippet_d0cdcabb",
    "expected_output": "cs09a    2025100900131691+0200\ncs09a    row max         000000008\ncs09a    col max         000000004\ncs09a    low point max 000000007\ncs09a    sum of all risk 000000007\ncs09a    records read    000000008\ncs09a    2025100900131691+0200\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}