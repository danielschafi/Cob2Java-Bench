{
    "cobol_file": {
        "file_name": "successful_snippet_4c18e307.cob",
        "content": "       identification division.\n       program-id. date-manipulation.\n\n       environment division.\n       configuration section.\n       repository.\n           function all intrinsic.\n\n       data division.\n       working-storage section.\n       01 given-date.\n          05 filler            value z\"March 7 2009 7:30pm EST\".\n       01 date-spec.\n          05 filler            value z\"%B %d %Y %I:%M%p %Z\".\n\n       01 time-struct.\n          05 tm-sec            usage binary-long.\n          05 tm-min            usage binary-long.\n          05 tm-hour           usage binary-long.\n          05 tm-mday           usage binary-long.\n          05 tm-mon            usage binary-long.\n          05 tm-year           usage binary-long.\n          05 tm-wday           usage binary-long.\n          05 tm-yday           usage binary-long.\n          05 tm-isdst          usage binary-long.\n          05 tm-gmtoff         usage binary-c-long.\n          05 tm-zone           usage pointer.\n       01 scan-index           usage pointer.\n\n       01 time-t               usage binary-c-long.\n       01 time-tm              usage pointer.\n\n       01 reform-buffer        pic x(64).\n       01 reform-length        usage binary-long.\n\n       01 current-locale       usage pointer.\n\n       01 iso-spec             constant as \"YYYY-MM-DDThh:mm:ss+hh:mm\".\n       01 iso-date             constant as \"2009-03-07T19:30:00-05:00\".\n       01 date-integer         pic 9(9).\n       01 time-integer         pic 9(9).\n\n       procedure division.\n\n       call \"strptime\" using\n           by reference given-date\n           by reference date-spec\n           by reference time-struct\n           returning scan-index\n           on exception\n               display \"error calling strptime\" upon syserr\n       end-call\n       display \"Given: \" given-date\n\n       if scan-index not equal null then\n           *> add 12 hours, and reform as local\n           call \"mktime\" using time-struct returning time-t\n           add 43200 to time-t\n           perform form-datetime\n\n           *> reformat as Pacific time\n           set environment \"TZ\" to \"PST8PDT\"\n           call \"tzset\" returning omitted\n           perform form-datetime\n\n           *> reformat as Greenwich mean\n           set environment \"TZ\" to \"GMT\"\n           call \"tzset\" returning omitted\n           perform form-datetime\n\n\n           *> reformat for Tokyo time, as seen in Hong Kong\n           set environment \"TZ\" to \"Japan\"\n           call \"tzset\" returning omitted\n           call \"setlocale\" using by value 6 by content z\"en_HK.utf8\"\n               returning current-locale\n               on exception\n                   display \"error with setlocale\" upon syserr\n           end-call\n           move z\"%c\" to date-spec\n           perform form-datetime\n       else\n           display \"date parse error\" upon syserr\n       end-if\n\n      *> A more standard COBOL approach, based on ISO8601\n       display \"Given: \" iso-date\n       move integer-of-formatted-date(iso-spec, iso-date)\n         to date-integer\n\n       move seconds-from-formatted-time(iso-spec, iso-date)\n         to time-integer\n\n       add 43200 to time-integer\n       if time-integer greater than 86400 then\n           subtract 86400 from time-integer\n           add 1 to date-integer\n       end-if\n       display \"       \" substitute(formatted-datetime(iso-spec\n                   date-integer, time-integer, -300), \"T\", \"/\")\n\n       goback.\n\n       form-datetime.\n       call \"localtime\" using time-t returning time-tm\n       call \"strftime\" using\n           by reference reform-buffer\n           by value length(reform-buffer)\n           by reference date-spec\n           by value time-tm\n           returning reform-length\n           on exception\n               display \"error calling strftime\" upon syserr\n       end-call\n       if reform-length > 0 and <= length(reform-buffer) then\n           display \"       \" reform-buffer(1 : reform-length)\n       else\n           display \"date format error\" upon syserr\n       end-if\n       .\n       end program date-manipulation.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_4c18e307.cob",
    "compiled_file": "successful_snippet_4c18e307",
    "expected_output": "Given: March 7 2009 7:30pm EST\u0000\n       March 08 2009 07:30AM CET\n       March 07 2009 10:30PM PST\n       March 08 2009 06:30AM GMT\n       Sun 08 Mar 2009 06:30:00 AM Japan\nGiven: 2009-03-07T19:30:00-05:00\n       2009-03-08/07:30:00-05:00\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}