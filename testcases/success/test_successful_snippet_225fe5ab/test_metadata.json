{
    "cobol_file": {
        "file_name": "successful_snippet_225fe5ab.cob",
        "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      *\n       Program-ID. cs03a.\n       Environment Division.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(024).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'cs03a'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(008) COMP    VALUE 0.\n           05  BIT-EXPONENT       PIC 9(008) COMP    VALUE 0.\n           05  NB-BITS            PIC 9(008) COMP    VALUE 1.\n           05  BIT-TO-COUNT       PIC 9(008) COMP    VALUE 0.\n           05  CURR-PRODUCT       PIC 9(018) COMP    VALUE 0.\n           05  GAMMA-RATE         PIC 9(018) COMP    VALUE 0.\n           05  EPSILON-RATE       PIC 9(018) COMP    VALUE 0.\n           05  GAMMA-RATE-X       PIC X(016)         VALUE SPACES.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n           05  EPSILON-RATE-X     PIC X(016)         VALUE SPACES.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(024)         VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n           05  PROCESS-SW         PIC X(004)         VALUE LOW-VALUES.\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       01  BIT-COUNTS.\n           05  BIT-COUNT-TABLE\n               OCCURS 16.\n               10  COUNT-0        PIC 9(008) COMP.\n               10  COUNT-1        PIC 9(008) COMP.\n\n       Procedure Division.\n           ACCEPT PROCESS-TYPE FROM COMMAND-LINE\n           MOVE FUNCTION UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n\n           IF PROCESS-TEST\n               READY TRACE\n           END-IF\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           PERFORM UNTIL INPT-DATA-EOF\n             PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n             UNTIL BIT-TO-COUNT > NB-BITS\n               EVALUATE WS-INPT(BIT-TO-COUNT:1)\n                 WHEN '0'\n                      ADD 1 TO COUNT-0(BIT-TO-COUNT)\n                 WHEN '1'\n                      ADD 1 TO COUNT-1(BIT-TO-COUNT)\n                 WHEN OTHER\n                      DISPLAY\n                        MYNAME\n                       ' bad bit '\n                       BIT-TO-COUNT\n                       ' in record '\n                       WS-REC-COUNT\n                       ' '\n                       WS-INPT \n               END-EVALUATE\n             END-PERFORM\n             PERFORM 8010-READ-INPT-DATA\n           END-PERFORM\n\n           CLOSE INPT-DATA\n\n           IF PROCESS-TEST\n               RESET TRACE\n               PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n               UNTIL BIT-TO-COUNT > NB-BITS\n                 DISPLAY\n                   MYNAME\n                   ' COUNT-0(' BIT-TO-COUNT ') '\n                   COUNT-0(BIT-TO-COUNT)\n                 DISPLAY\n                   MYNAME\n                   ' COUNT-1(' BIT-TO-COUNT ') '\n                   COUNT-1(BIT-TO-COUNT)\n               END-PERFORM\n               READY TRACE\n           END-IF\n\n           PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n           UNTIL BIT-TO-COUNT > NB-BITS\n             IF COUNT-0(BIT-TO-COUNT) > COUNT-1(BIT-TO-COUNT)\n                 MOVE '0' TO GAMMA-RATE-X(BIT-TO-COUNT:1)\n                 MOVE '1' TO EPSILON-RATE-X(BIT-TO-COUNT:1)\n             ELSE\n                 MOVE '1' TO GAMMA-RATE-X(BIT-TO-COUNT:1)\n                 MOVE '0' TO EPSILON-RATE-X(BIT-TO-COUNT:1)\n             END-IF\n           END-PERFORM\n\n           DISPLAY MYNAME ' gamma rate   ' GAMMA-RATE-X\n           DISPLAY MYNAME ' epsilon rate ' EPSILON-RATE-X\n\n           PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n           UNTIL BIT-TO-COUNT > NB-BITS\n             COMPUTE BIT-EXPONENT = NB-BITS - BIT-TO-COUNT\n             IF GAMMA-RATE-X(BIT-TO-COUNT:1) = '1'\n                 COMPUTE GAMMA-RATE =\n                   GAMMA-RATE + 2 ** BIT-EXPONENT\n             END-IF\n             IF EPSILON-RATE-X(BIT-TO-COUNT:1) = '1'\n                 COMPUTE EPSILON-RATE =\n                   EPSILON-RATE + 2 ** BIT-EXPONENT\n             END-IF\n           END-PERFORM\n\n           DISPLAY MYNAME ' gamma rate   ' GAMMA-RATE\n           DISPLAY MYNAME ' epsilon rate ' EPSILON-RATE\n\n           COMPUTE CURR-PRODUCT = GAMMA-RATE * EPSILON-RATE\n           DISPLAY\n            MYNAME\n            ' product of gamma and epsilon '\n            CURR-PRODUCT\n\n           DISPLAY MYNAME ' records read ' WS-REC-COUNT\n\n           GOBACK.\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n               IF WS-REC-COUNT = 1\n                   PERFORM \n                   UNTIL WS-INPT(NB-BITS:1) NOT NUMERIC\n                     ADD 1 TO NB-BITS\n                   END-PERFORM\n                   SUBTRACT 1 FROM NB-BITS\n                   DISPLAY MYNAME ' number of bits ' NB-BITS\n               END-IF\n           END-READ\n\n           .\n\n\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "LOAD  \nBACKUP  \nREPORT  \nVALIDATE  \nUPDATE  \nDELETE  \nCREATE  \nEXIT"
    },
    "code_file": "successful_snippet_225fe5ab.cob",
    "compiled_file": "successful_snippet_225fe5ab",
    "expected_output": "cs03a    number of bits 00000000\ncs03a    gamma rate                   \ncs03a    epsilon rate                 \ncs03a    gamma rate   000000000000000000\ncs03a    epsilon rate 000000000000000000\ncs03a    product of gamma and epsilon 000000000000000000\ncs03a    records read 00000008\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}