{
    "cobol_file": {
        "file_name": "successful_snippet_95c7acee.cob",
        "content": "      * Advent of Code 2018, Day 1, in COBOL.\n      *\n      * This is slow as fuck.\n      *\n      * It is also the first COBOL program that I have ever written. The\n      * fact that it actually spits out the right answers is, frankly,\n      * amazeballs to me.\n      *\n      * I mean, if we're going to time travel...might as well try COBOL.\n      *\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AOC1801.\n      *\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PUZZLE ASSIGN TO 'input'\n           ORGANIZATION IS LINE SEQUENTIAL\n           ACCESS IS SEQUENTIAL.\n      *\n       DATA DIVISION.\n       FILE SECTION.\n       FD PUZZLE\n          LABEL RECORDS ARE OMITTED\n          DATA RECORD IS PUZZLE-CLUE\n          RECORD IS VARYING IN SIZE FROM 2 TO 7\n              DEPENDING ON WS-RECORD-SIZE.\n       01 PUZZLE-CLUE          PIC X(7).\n      *\n       WORKING-STORAGE SECTION.\n       01 WS-RECORD-SIZE       PIC 9(4).\n       01 WS-PART-NUM          PIC 9.\n       01 WS-FREQ.\n         05 WS-FREQ-SHFT       PIC S9(9)    VALUE 0.\n         05 WS-FREQ-LAST       PIC S9(9)    VALUE 0.\n         05 WS-FREQ-DISP       PIC -ZZZZZZZ9.\n         05 WS-FREQ-MATCH      PIC X        VALUE 'N'.\n       01 WS-PUZZLE-TABLE.\n         05 WS-PUZZLE-COUNT    PIC 999999   VALUE 0.\n         05 WS-PUZZLE-HIST     PIC X(7)\n                               OCCURS 1004 TIMES\n                               INDEXED BY P.\n       01 WS-FREQ-HIST-TABLE.\n         05 WS-FREQ-HIST-IDX   PIC 999999.\n         05 WS-FREQ-HIST       PIC S9(9)    VALUE 0\n                               OCCURS 150000 TIMES\n                               INDEXED BY F.\n       01 WS-EOF               PIC X(1)     VALUE 'N'.\n      *\n       PROCEDURE DIVISION.\n       MAIN.\n           DISPLAY 'Advent of Code 2018, Day 1'\n           PERFORM PREPARE-RECORDS THRU PREPARE-RECORDS-EXIT.\n           PERFORM PART-1 THRU PART-1-EXIT.\n           PERFORM PART-2 THRU PART-2-EXIT.\n           STOP RUN.\n      *\n       PREPARE-RECORDS.\n           OPEN INPUT PUZZLE.\n           READ PUZZLE RECORD.\n           PERFORM PROCESS-RECORD\n               VARYING P FROM 1\n                   BY 1 UNTIL WS-EOF = 'Y'.\n           CLOSE PUZZLE.\n           SUBTRACT 1 FROM P.\n           MOVE P TO WS-PUZZLE-COUNT.\n           SET P TO 1.\n      *\n       PREPARE-RECORDS-EXIT.\n           EXIT.\n      *\n       PROCESS-RECORD.\n           MOVE PUZZLE-CLUE TO WS-PUZZLE-HIST(P).\n           READ PUZZLE RECORD\n               AT END MOVE 'Y' TO WS-EOF\n           END-READ.\n      *\n       PROCESS-RECORD-EXIT.\n           EXIT.\n      *\n       PART-1.\n           MOVE '1' TO WS-PART-NUM.\n           PERFORM FREQUENCY-SHIFT THRU FREQUENCY-SHIFT-EXIT\n               VARYING P FROM 1\n                   BY 1 UNTIL P > WS-PUZZLE-COUNT.\n           PERFORM DISPLAY-RESULT.\n      *\n       PART-1-EXIT.\n           EXIT.\n      *\n       PART-2.\n           MOVE '2' TO WS-PART-NUM.\n           PERFORM FREQUENCY-SHIFT THRU FREQUENCY-SHIFT-EXIT\n               VARYING P FROM 1\n                   BY 1 UNTIL WS-FREQ-MATCH = 'Y'.\n           PERFORM DISPLAY-RESULT.\n      *\n       PART-2-EXIT.\n           EXIT.\n      *\n       DISPLAY-RESULT.\n           MOVE WS-FREQ-LAST TO WS-FREQ-DISP.\n           DISPLAY 'Part ' WS-PART-NUM ': ' WS-FREQ-DISP.\n      *\n       DISPLAY-RESULT-EXIT.\n           EXIT.\n      *\n       FREQUENCY-SHIFT.\n           IF P > WS-PUZZLE-COUNT SET P TO 1.\n           MOVE WS-PUZZLE-HIST(P) TO WS-FREQ-SHFT.\n           ADD WS-FREQ-SHFT TO WS-FREQ-LAST.\n           MOVE F TO WS-FREQ-HIST-IDX.\n           SET F TO 1.\n           SEARCH WS-FREQ-HIST\n               WHEN WS-FREQ-HIST(F) = WS-FREQ-LAST\n                   MOVE 'Y' TO WS-FREQ-MATCH\n           END-SEARCH.\n           MOVE WS-FREQ-HIST-IDX TO F.\n           SET F UP BY 1.\n           MOVE WS-FREQ-LAST TO WS-FREQ-HIST(F).\n      *\n       FREQUENCY-SHIFT-EXIT.\n           EXIT.\n"
    },
    "input_files": [
        {
            "file_name": "input",
            "content": "fee fiehuff and puffmirror mirrortick tockExample-OptionsExample-OptionsExample-OptionsExample-Options
        }
    ],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_95c7acee.cob",
    "compiled_file": "successful_snippet_95c7acee",
    "expected_output": "Advent of Code 2018, Day 1\nPart 1:         0\nPart 2:         0\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}