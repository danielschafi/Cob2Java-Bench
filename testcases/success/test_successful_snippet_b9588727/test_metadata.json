{
    "cobol_file": {
        "file_name": "successful_snippet_b9588727.cob",
        "content": "IDENTIFICATION DIVISION.\nPROGRAM-ID. SQRT.\nENVIRONMENT DIVISION.\nINPUT-OUTPUT SECTION.\nFILE-CONTROL.\n    SELECT INPUT-FILE ASSIGN TO \"sqrtFIXED.dat\"\n    ORGANIZATION IS LINE SEQUENTIAL.\n    SELECT STANDARD-OUTPUT ASSIGN TO DISPLAY.\nDATA DIVISION.\nFILE SECTION.\nFD INPUT-FILE.\n    01 STANDARD-INPUT PICTURE X(80).\nFD STANDARD-OUTPUT.\n    01 OUT-LINE  PICTURE X(80).\nWORKING-STORAGE SECTION.\n77 DIFF PICTURE V9(5).\n77 Z    PICTURE 9(11)V9(6).\n77 K    PICTURE S9999.\n77 X    PICTURE 9(11)V9(6).\n77 Y    PICTURE 9(11)V9(6).\n77 TEMP PICTURE 9(11)V9(6).\n01 IN-CARD.\n   02 IN-Z     PICTURE S9(10)V9(6) SIGN LEADING SEPARATE.\n   02 IN-DIFF  PICTURE V9(5).\n   02 FILLER   PICTURE X(58).\n01 TITLE-LINE.\n   02 FILLER PICTURE X(9) VALUE SPACES.\n   02 FILLER PICTURE X(26) VALUE 'SQUARE ROOT APPROXIMATIONS'.\n01 UNDER-LINE.\n   02 FILLER PICTURE X(44) VALUE \n      '--------------------------------------------'.\n01 COL-HEADS.\n   02 FILLER PICTURE X(8) VALUE SPACES.\n   02 FILLER PICTURE X(6) VALUE 'NUMBER'.\n   02 FILLER PICTURE X(15) VALUE SPACES.\n   02 FILLER PICTURE X(11) VALUE 'SQUARE ROOT'.\n01 UNDERLINE-2.\n   02 FILLER PICTURE X(20) VALUE ' -------------------'.\n   02 FILLER PICTURE X(5) VALUE SPACES.\n   02 FILLER PICTURE X(19) VALUE '------------------'.\n01 PRINT-LINE.\n   02 FILLER PICTURE X VALUE SPACE.\n   02 OUT-Z  PICTURE Z(11)9.9(6).\n   02 FILLER PICTURE X(5) VALUE SPACES.\n   02 OUT-Y  PICTURE Z(11)9.9(6).\n01 ERROR-MESS.\n   02 FILLER PICTURE X VALUE SPACE.\n   02 OT-Z   PICTURE -(11)9.9(6).\n   02 FILLER PICTURE X(21) VALUE '        INVALID INPUT'.\n01 ABORT-MESS.\n   02 FILLER PICTURE X VALUE SPACE.\n   02 OUTP-Z PICTURE Z(11)9.9(6).\n   02 FILLER PICTURE X(37) VALUE\n      '  ATTEMPT ABORTED,TOO MANY ITERATIONS'.\n\nPROCEDURE DIVISION.\n    OPEN INPUT INPUT-FILE, OUTPUT STANDARD-OUTPUT.\n    WRITE OUT-LINE FROM TITLE-LINE AFTER ADVANCING 0 LINES.\n    WRITE OUT-LINE FROM UNDER-LINE AFTER ADVANCING 1 LINE.\n    WRITE OUT-LINE FROM COL-HEADS AFTER ADVANCING 1 LINE.\n    WRITE OUT-LINE FROM UNDERLINE-2 AFTER ADVANCING 1 LINE.\nS1.  \n    READ INPUT-FILE INTO IN-CARD AT END GO TO FINISH.\n    IF IN-Z IS GREATER THAN ZERO GO TO B1.\n    MOVE IN-Z TO OT-Z.\n    WRITE OUT-LINE FROM ERROR-MESS AFTER ADVANCING 1 LINE.\n    GO TO S1.\nB1. \n    MOVE IN-DIFF TO DIFF.\n    MOVE IN-Z TO Z.\n    DIVIDE 2 INTO Z GIVING X ROUNDED.\n    PERFORM S2 THRU E2 VARYING K FROM 1 BY 1\n        UNTIL K IS GREATER THAN 1000.\n    MOVE IN-Z TO OUTP-Z.\n    WRITE OUT-LINE FROM ABORT-MESS AFTER ADVANCING 1 LINE.\n    GO TO S1.\nS2. \n    COMPUTE Y ROUNDED = 0.5 * (X + Z / X).\n    SUBTRACT X FROM Y GIVING TEMP.\n    IF TEMP IS LESS THAN ZERO COMPUTE TEMP = - TEMP.\n    IF TEMP / (Y + X) IS GREATER THAN DIFF GO TO E2.\n    MOVE IN-Z TO OUT-Z. \n    MOVE Y TO OUT-Y.\n    WRITE OUT-LINE FROM PRINT-LINE AFTER ADVANCING 1 LINE.\n    GO TO S1.\nE2. \n    MOVE Y TO X.\nFINISH.\n    CLOSE INPUT-FILE, STANDARD-OUTPUT. \nSTOP RUN."
    },
    "input_files": [
        {
            "file_name": "sqrtFIXED.dat",
            "content
        }
    ],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_b9588727.cob",
    "compiled_file": "successful_snippet_b9588727",
    "expected_output": "\n         SQUARE ROOT APPROXIMATIONS\n--------------------------------------------\n        NUMBER               SQUARE ROOT\n -------------------     ------------------\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT\n            0.000000        INVALID INPUT",
    "expected_output_files": [],
    "expected_input_output_files": []
}