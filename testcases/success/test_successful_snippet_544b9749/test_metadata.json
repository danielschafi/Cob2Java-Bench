{
    "cobol_file": {
        "file_name": "successful_snippet_544b9749.cob",
        "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AOC-2021-08-2.\n       AUTHOR. ANNA KOSIERADZKA.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INPUTFILE ASSIGN TO \"d08.input\"\n           ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n       FILE SECTION.\n         FD INPUTFILE.\n         01 INPUTRECORD PIC X(99).\n         \n       WORKING-STORAGE SECTION.\n         01 FILE-STATUS PIC 9 VALUE 0.\n         01 WS-RESULT PIC 9(8) VALUE 0.\n         01 WS-BUFFER PIC X(8) OCCURS 14 TIMES.\n         01 WS-VAL-DEC PIC 9(4) VALUE 0.\n         01 WS-BUFFER-AS-BIN-ARR OCCURS 14 TIMES.\n           05 WS-BUFFER-AS-BIN PIC 9 VALUE 0 OCCURS 7 TIMES.\n         01 WS-DIGITS-AS-BIN-ARR OCCURS 10 TIMES.\n           05 WS-DIGITS-AS-BIN PIC 9 VALUE 0 OCCURS 7 TIMES.\n         01 WS-069 OCCURS 3 TIMES.\n           05 WS-069-BIT PIC 9 VALUE 0 OCCURS 7 TIMES.\n         01 WS-235 OCCURS 3 TIMES.\n           05 WS-235-BIT PIC 9 VALUE 0 OCCURS 7 TIMES.\n         77 C PIC X.\n         77 I PIC 9(3).\n         77 I5 PIC 9(3) VALUE 1.\n         77 I6 PIC 9(3) VALUE 1.\n         77 J PIC 9(3).\n         77 K PIC 9(3).\n         77 L PIC 9(3).\n         77 LEN PIC 9(3).\n         77 M PIC 9(3).\n         77 IDX-0 PIC 9(3) VALUE 0.\n         77 IDX-9 PIC 9(3) VALUE 0.\n         77 IDX-3 PIC 9(3) VALUE 0.\n         77 IDX-5 PIC 9(3) VALUE 0.\n         77 STRING-PTR PIC 9(5).\n\n       PROCEDURE DIVISION.\n       001-MAIN.\n           OPEN INPUT INPUTFILE.\n           PERFORM 002-READ UNTIL FILE-STATUS = 1.\n           CLOSE INPUTFILE.\n           DISPLAY WS-RESULT.\n           STOP RUN. \n           \n       002-READ.\n           READ INPUTFILE\n             AT END MOVE 1 TO FILE-STATUS\n             NOT AT END PERFORM 003-PROCESS-RECORD\n           END-READ.\n\n       003-PROCESS-RECORD.\n           MOVE 0 TO IDX-9.\n           MOVE 0 TO IDX-0.\n           MOVE 0 TO IDX-3.\n           MOVE 0 TO IDX-5.\n           MOVE 1 TO I5.\n           MOVE 1 TO I6.\n \n           MOVE 1 TO STRING-PTR.\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 14\n             UNSTRING INPUTRECORD DELIMITED BY ' | ' OR SPACE\n               INTO WS-BUFFER(I)\n               WITH POINTER STRING-PTR\n           END-PERFORM.\n\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 14\n             MOVE 0 TO M\n             INSPECT WS-BUFFER(I) TALLYING M FOR TRAILING SPACES\n             COMPUTE LEN = 8 - M\n\n             PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n               MOVE FUNCTION CHAR(97 + J) TO C\n               MOVE 0 TO M\n               INSPECT WS-BUFFER(I) TALLYING M FOR ALL C\n               MOVE M TO WS-BUFFER-AS-BIN(I, J)\n             END-PERFORM\n\n             EVALUATE LEN\n               WHEN 2\n                 PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                   MOVE WS-BUFFER-AS-BIN(I, J) TO WS-DIGITS-AS-BIN(2, J)\n                 END-PERFORM\n               WHEN 3\n                 PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                   MOVE WS-BUFFER-AS-BIN(I, J) TO WS-DIGITS-AS-BIN(8, J)\n                 END-PERFORM\n               WHEN 4\n                 PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                   MOVE WS-BUFFER-AS-BIN(I, J) TO WS-DIGITS-AS-BIN(5, J)\n                 END-PERFORM\n               WHEN 7\n                 PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                   MOVE WS-BUFFER-AS-BIN(I, J) TO WS-DIGITS-AS-BIN(9, J)\n                 END-PERFORM\n               WHEN 5\n                 IF I < 11 THEN\n                   PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                     MOVE WS-BUFFER-AS-BIN(I, J) TO WS-235-BIT(I5, J)\n                   END-PERFORM\n                   ADD 1 TO I5\n                 END-IF\n               WHEN 6\n                 IF I < 11 THEN\n                   PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                     MOVE WS-BUFFER-AS-BIN(I, J) TO WS-069-BIT(I6, J)\n                   END-PERFORM\n                   ADD 1 TO I6\n                 END-IF\n             END-EVALUATE\n                              \n           END-PERFORM.\n\n      * Identify 0 - 6 - 9\n      * If it contains 4, it's 9      \n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 3\n             MOVE 1 TO L\n             PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n               IF WS-DIGITS-AS-BIN(5, J) = 1 THEN\n                 COMPUTE L = L *  WS-069-BIT(I, J)\n               END-IF\n             END-PERFORM\n             IF L = 1 THEN               \n               MOVE I TO IDX-9\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                 MOVE WS-069-BIT(I, J) TO WS-DIGITS-AS-BIN(10, J)\n               END-PERFORM\n             END-IF\n           END-PERFORM.\n      \n      * Else if it contains 1, it's 0\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 3\n             MOVE 1 TO L\n             PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n               IF WS-DIGITS-AS-BIN(2, J) = 1 THEN\n                 COMPUTE L = L *  WS-069-BIT(I, J)\n               END-IF\n             END-PERFORM\n             IF I <> IDX-9 AND L = 1 THEN\n               MOVE I TO IDX-0\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                 MOVE WS-069-BIT(I, J) TO WS-DIGITS-AS-BIN(1, J)\n               END-PERFORM\n             END-IF\n           END-PERFORM.\n      \n      * Else it's 6\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 3\n             IF I <> IDX-9 AND I <> IDX-0 THEN\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                 MOVE WS-069-BIT(I, J) TO WS-DIGITS-AS-BIN(7, J)\n               END-PERFORM\n             END-IF  \n           END-PERFORM.\n\n      * Identify 2 - 3 - 5\n      * If it contains 1, it's 3\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 3\n             MOVE 1 TO L\n             PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n               IF WS-DIGITS-AS-BIN(2, J) = 1 THEN\n                 COMPUTE L = L *  WS-235-BIT(I, J)\n               END-IF\n             END-PERFORM\n             IF L = 1 THEN\n               MOVE I TO IDX-3\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                 MOVE WS-235-BIT(I, J) TO WS-DIGITS-AS-BIN(4, J)\n               END-PERFORM\n             END-IF\n           END-PERFORM.\n\n      * IF it's contained in 6, it's 5\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 3\n             MOVE 1 TO L\n             PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n               IF WS-235-BIT(I, J) = 1 THEN\n                 COMPUTE L = L * WS-DIGITS-AS-BIN(7, J)\n               END-IF\n             END-PERFORM\n             IF L = 1 THEN\n               MOVE I TO IDX-5\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                 MOVE WS-235-BIT(I, J) TO WS-DIGITS-AS-BIN(6, J)\n               END-PERFORM\n             END-IF\n           END-PERFORM.\n\n      * Else it's 2\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 3\n             IF I <> IDX-3 AND I <> IDX-5 THEN\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                 MOVE WS-235-BIT(I, J) TO WS-DIGITS-AS-BIN(3, J)\n               END-PERFORM\n             END-IF\n           END-PERFORM.\n\n      * Identify the last numbers\n           MOVE 0 TO WS-VAL-DEC\n           PERFORM VARYING I FROM 11 BY 1 UNTIL I > 14\n             PERFORM VARYING K FROM 1 BY 1 UNTIL K > 10\n               MOVE 1 TO L\n               PERFORM VARYING J FROM 1 BY 1 UNTIL J > 7\n                IF WS-DIGITS-AS-BIN(K, J) <> WS-BUFFER-AS-BIN(I, J) THEN\n                  MOVE 0 TO L\n                END-IF\n               END-PERFORM\n               IF L = 1 THEN\n                 COMPUTE WS-VAL-DEC = WS-VAL-DEC * 10 + K - 1\n               END-IF\n             END-PERFORM\n           END-PERFORM.\n           ADD WS-VAL-DEC TO WS-RESULT.\n"
    },
    "input_files": [
        {
            "file_name": "d08.input",
            "content": "ADD X+123\nSUB X-456\nMUL X*789\nDIV X/234\nADD Y+321\nSUB Y-654\nMUL Y*987\nDIV Y/147\nADD Z+111\nSUB Z-222\nMUL Z*333"
        }
    ],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_544b9749.cob",
    "compiled_file": "successful_snippet_544b9749",
    "expected_output": "00074679\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}