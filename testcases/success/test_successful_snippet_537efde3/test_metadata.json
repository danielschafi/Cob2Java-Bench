{
    "cobol_file": {
        "file_name": "successful_snippet_537efde3.cob",
        "content": "       identification division.\n       program-id. long-mul.\n       data division.\n       replace ==ij-lim== by ==7== ==ir-lim== by ==14==.\n       working-storage section.\n       1 input-string pic x(26) value \"18,446,744,073,709,551,616\".\n       1 a-table.\n        2 a pic 999 occurs ij-lim.\n       1 b-table.\n        2 b pic 999 occurs ij-lim.\n       1 ir-table value all \"0\".\n        2 occurs ij-lim.\n         3 ir pic 999 occurs ir-lim.\n       1 s-table value all \"0\".\n        2 s pic 999 occurs ir-lim.\n       1 display.\n        2 temp-result pic 9(6) value 0.\n        2 carry pic 999 value 0.\n        2 remain pic 999 value 0.\n       1 binary.\n        2 i pic 9(4) value 0.\n        2 j pic 9(4) value 0.\n        2 k pic 9(4) value 0.\n       procedure division.\n       begin.\n           move 1 to j\n           perform varying i from 1 by 1 until i > ij-lim\n               unstring input-string delimited \",\"\n                   into a (i) with pointer j\n           end-perform\n           move a-table to b-table\n           perform intermediate-calc\n           perform sum-ir\n           perform display-result\n       stop run\n       .\n\n       intermediate-calc.\n           perform varying i from ij-lim by -1 until i < 1\n               move 0 to carry\n               perform varying j from ij-lim by -1 until j < 1\n                   compute temp-result = a (i) * b (j) + carry\n                   divide temp-result by 1000 giving carry\n                       remainder remain\n                   compute k = i + j\n                   move remain to ir (i k)\n               end-perform\n               subtract 1 from k\n               move carry to ir (i k)\n           end-perform\n           .\n\n       sum-ir.\n           move 0 to carry\n           perform varying k from ir-lim by -1 until k < 1\n               move carry to temp-result\n               perform varying i from ij-lim by -1 until i < 1\n                   compute temp-result = temp-result + ir (i k)\n               end-perform\n               divide temp-result by 1000 giving carry\n                   remainder remain\n               move remain to s (k)\n           end-perform\n           .\n\n       display-result.\n           display \"   \" input-string\n           display \" * \" input-string\n           display \" = \" with no advancing\n           perform varying k from 1 by 1\n           until k > ir-lim or s (k) not = 0\n           end-perform\n           if s (k) < 100\n               move 1 to i\n               inspect s (k) tallying i for leading \"0\"\n               display s (k) (i:) \",\" with no advancing\n               add 1 to k\n           end-if\n           perform varying k from k by 1 until k > ir-lim\n               display s (k) with no advancing\n               if k < ir-lim\n                   display \",\" with no advancing\n               end-if\n           end-perform\n           display space\n           .\n\n       end program long-mul.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_537efde3.cob",
    "compiled_file": "successful_snippet_537efde3",
    "expected_output": "   18,446,744,073,709,551,616\n * 18,446,744,073,709,551,616\n = 340,282,366,920,938,463,463,374,607,431,768,211,456 \n",
    "expected_output_files": [],
    "expected_input_output_files": []
}