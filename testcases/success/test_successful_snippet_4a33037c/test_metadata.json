{
    "cobol_file": {
        "file_name": "successful_snippet_4a33037c.cob",
        "content": "         >>SOURCE FORMAT FREE\n\n\nidentification division.\nprogram-id. fifteen.\nenvironment division.\nconfiguration section.\nrepository. function all intrinsic.\ndata division.\nworking-storage section.\n\n01  r pic 9.\n01  r-empty pic 9.\n01  r-to pic 9.\n01  r-from pic 9.\n\n01  c pic 9.\n01  c-empty pic 9.\n01  c-to pic 9.\n01  c-from pic 9.\n\n01  display-table.\n    03  display-row occurs 4.\n        05  display-cell occurs 4 pic 99.\n\n01  tile-number pic 99.\n01  tile-flags pic x(16).\n\n01  display-move value spaces.\n    03  tile-id pic 99.\n\n01  row-separator pic x(21) value all '.'.\n01  column-separator pic x(3) value ' . '.\n\n01  inversions pic 99.\n01  current-tile pic 99.\n\n01  winning-display pic x(32) value\n        '01020304'\n    &   '05060708'\n    &   '09101112'\n    &   '13141500'.\n\nprocedure division.\nstart-fifteen.\n    display 'start fifteen puzzle'\n    display '    enter a two-digit tile number and press <enter> to move'\n    display '    press <enter> only to exit'\n\n    \n    perform initialize-table with test after until inversions = 0\n    perform show-table\n    accept display-move\n    perform until display-move = spaces\n        perform move-tile\n        perform show-table\n        move spaces to display-move\n        accept display-move\n    end-perform\n    stop run\n    .\ninitialize-table.\n    compute tile-number = random(seconds-past-midnight) \n    move spaces to tile-flags\n    move 0 to current-tile inversions\n    perform varying r from 1 by 1 until r > 4\n    after c from 1 by 1 until c > 4\n        perform with test after\n        until tile-flags(tile-number + 1:1) = space\n            compute tile-number = random() * 100\n            compute tile-number = mod(tile-number, 16)\n        end-perform\n        move 'x' to tile-flags(tile-number + 1:1)\n        if tile-number > 0 and < current-tile\n            add 1 to inversions\n        end-if\n        move tile-number to display-cell(r,c) current-tile\n    end-perform\n    compute inversions = mod(inversions,2)\n    .\nshow-table.\n    if display-table = winning-display\n        display 'winning'\n    end-if\n    display space row-separator\n    perform varying r from 1 by 1 until r > 4\n        perform varying c from 1 by 1 until c > 4\n            display column-separator with no advancing\n            if display-cell(r,c) = 00\n                display '  ' with no advancing\n                move r to r-empty\n                move c to c-empty\n            else\n                display display-cell(r,c) with no advancing\n            end-if\n        end-perform\n        display column-separator\n    end-perform\n    display space row-separator\n    .\nmove-tile.\n    if not (tile-id numeric and tile-id >= 01 and <= 15)\n        display 'invalid tile number'\n        exit paragraph\n    end-if\n\n    \n    perform varying r from 1 by 1 until r > 4\n    after c from 1 by 1 until c > 4\n        if display-cell(r,c) = tile-id\n            exit perform\n        end-if\n    end-perform\n\n    \n    evaluate true\n    when r = r-empty\n        if c-empty < c\n            \n            perform varying c-to from c-empty by 1 until c-to > c\n                compute c-from = c-to + 1\n                move display-cell(r-empty,c-from) to display-cell(r-empty,c-to)\n            end-perform\n        else\n           \n           perform varying c-to from c-empty by -1 until c-to < c\n               compute c-from = c-to - 1\n               move display-cell(r-empty,c-from) to display-cell(r-empty,c-to)\n           end-perform\n       end-if\n       move 00 to display-cell(r,c)\n    when c = c-empty\n        if r-empty < r\n            \n            perform varying r-to from r-empty by 1 until r-to > r\n                compute r-from = r-to + 1\n                move display-cell(r-from,c-empty) to display-cell(r-to,c-empty)\n            end-perform\n        else\n            \n            perform varying r-to from r-empty by -1 until r-to < r\n                compute r-from = r-to - 1\n                move display-cell(r-from,c-empty) to display-cell(r-to,c-empty)\n            end-perform\n        end-if\n        move 00 to display-cell(r,c)\n    when other\n         display 'invalid move'\n    end-evaluate\n    .\nend program fifteen.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "001\n002\n003\n004\n005\n006\n007\n008"
    },
    "code_file": "successful_snippet_4a33037c.cob",
    "compiled_file": "successful_snippet_4a33037c",
    "expected_output": "start fifteen puzzle\n    enter a two-digit tile number and press <enter> to move\n    press <enter> only to exit\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\ninvalid tile number\n .....................\n . 12 . 06 . 01 . 05 . \n . 02 . 10 . 03 .    . \n . 11 . 09 . 04 . 13 . \n . 14 . 07 . 15 . 08 . \n .....................\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}