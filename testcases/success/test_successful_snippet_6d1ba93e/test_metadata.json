{
    "cobol_file": {
        "file_name": "successful_snippet_6d1ba93e.cob",
        "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      *\n       Program-ID. cs03b.\n       Environment Division.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(024).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'cs03b'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(008) COMP    VALUE 0.\n           05  O2-COUNT           PIC 9(008) COMP    VALUE 9.\n           05  CO2-COUNT          PIC 9(008) COMP    VALUE 9.\n           05  O2-INDX            PIC 9(009) COMP    VALUE 0.\n           05  CO2-INDX           PIC 9(009) COMP    VALUE 0.\n           05  BIT-EXPONENT       PIC 9(008) COMP    VALUE 0.\n           05  NB-BITS            PIC 9(008) COMP    VALUE 1.\n           05  BIT-TO-COUNT       PIC 9(008) COMP    VALUE 0.\n           05  CURR-PRODUCT       PIC 9(018) COMP    VALUE 0.\n           05  O2-RATING          PIC 9(018) COMP    VALUE 0.\n           05  CO2-RATING         PIC 9(018) COMP    VALUE 0.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(024)         VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n           05  PROCESS-SW         PIC X(004)         VALUE LOW-VALUES.\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       01  BIT-COUNTS.\n           05  BIT-COUNT-TABLE\n               OCCURS 16.\n               10  COUNT-0        PIC 9(008) COMP.\n               10  COUNT-1        PIC 9(008) COMP.\n               10  MOST-COMMON    PIC X(001).\n               10  LEAST-COMMON   PIC X(001).\n\n       01  INPT-VALUES.\n           05  INPT-TABLE\n               OCCURS 1 TO 2000\n               DEPENDING WS-REC-COUNT\n               INDEXED INPT-INDX.\n               10  INPT-BITS      PIC X(024).\n               10  INPT-O2-FLAG   PIC X(001).\n                   88  INPT-O2                       VALUE 'Y'\n                                                     FALSE 'N'.\n               10  INPT-CO2-FLAG  PIC X(001).\n                   88  INPT-CO2                      VALUE 'Y'\n                                                     FALSE 'N'.\n\n       Procedure Division.\n           ACCEPT PROCESS-TYPE FROM COMMAND-LINE\n           MOVE FUNCTION UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n\n           IF PROCESS-TEST\n               READY TRACE\n           END-IF\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           MOVE 1 TO BIT-TO-COUNT\n           PERFORM UNTIL INPT-DATA-EOF\n             PERFORM 8010-READ-INPT-DATA\n           END-PERFORM\n\n           CLOSE INPT-DATA\n\n           PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n           UNTIL BIT-TO-COUNT > NB-BITS\n           OR O2-COUNT = 1\n             MOVE 0 TO COUNT-0(BIT-TO-COUNT)\n             MOVE 0 TO COUNT-1(BIT-TO-COUNT)\n             PERFORM VARYING INPT-INDX FROM 1 BY 1\n             UNTIL INPT-INDX > WS-REC-COUNT\n               IF INPT-O2(INPT-INDX)\n                   PERFORM 8020-COUNT-BITS\n               END-IF\n             END-PERFORM\n             PERFORM 8030-MOST-AND-LEAST\n             MOVE 0 TO O2-COUNT\n             PERFORM VARYING INPT-INDX FROM 1 BY 1\n             UNTIL INPT-INDX > WS-REC-COUNT\n               IF INPT-BITS(INPT-INDX)(BIT-TO-COUNT:1) =\n                   MOST-COMMON(BIT-TO-COUNT)\n               AND INPT-O2(INPT-INDX)\n                    ADD 1 TO O2-COUNT\n                    MOVE INPT-INDX TO O2-INDX\n               ELSE\n                   SET INPT-O2(INPT-INDX) TO FALSE\n               END-IF\n             END-PERFORM\n             IF PROCESS-TEST\n                 RESET TRACE\n                 PERFORM 9010-DUMP-TABLES\n                 READY TRACE\n             END-IF\n           END-PERFORM\n\n           PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n           UNTIL BIT-TO-COUNT > NB-BITS\n           OR CO2-COUNT = 1\n             MOVE 0 TO COUNT-0(BIT-TO-COUNT)\n             MOVE 0 TO COUNT-1(BIT-TO-COUNT)\n             PERFORM VARYING INPT-INDX FROM 1 BY 1\n             UNTIL INPT-INDX > WS-REC-COUNT\n               IF INPT-CO2(INPT-INDX)\n                   PERFORM 8020-COUNT-BITS\n               END-IF\n             END-PERFORM\n             PERFORM 8030-MOST-AND-LEAST\n             MOVE 0 TO CO2-COUNT\n             PERFORM VARYING INPT-INDX FROM 1 BY 1\n             UNTIL INPT-INDX > WS-REC-COUNT\n               IF INPT-BITS(INPT-INDX)(BIT-TO-COUNT:1) =\n                  LEAST-COMMON(BIT-TO-COUNT)\n                  AND INPT-CO2(INPT-INDX)\n                   ADD 1 TO CO2-COUNT\n                   MOVE INPT-INDX TO CO2-INDX\n               ELSE\n                   SET INPT-CO2(INPT-INDX) TO FALSE\n               END-IF\n             END-PERFORM\n             IF PROCESS-TEST\n                 RESET TRACE\n                 PERFORM 9010-DUMP-TABLES\n                 READY TRACE\n             END-IF\n           END-PERFORM\n\n           IF O2-COUNT NOT = 1\n               DISPLAY MYNAME ' O2-COUNT = ' O2-COUNT\n           END-IF\n\n           IF CO2-COUNT NOT = 1\n               DISPLAY MYNAME ' CO2-COUNT = ' CO2-COUNT\n           END-IF\n\n           DISPLAY MYNAME ' O2 rating   ' INPT-BITS(O2-INDX)\n           DISPLAY MYNAME ' CO2 rating  ' INPT-BITS(CO2-INDX)\n\n           PERFORM VARYING BIT-TO-COUNT FROM 1 BY 1\n           UNTIL BIT-TO-COUNT > NB-BITS\n             COMPUTE BIT-EXPONENT = NB-BITS - BIT-TO-COUNT\n             IF INPT-BITS(O2-INDX)(BIT-TO-COUNT:1) = '1'\n                 COMPUTE O2-RATING =\n                   O2-RATING + 2 ** BIT-EXPONENT\n             END-IF\n             IF INPT-BITS(CO2-INDX)(BIT-TO-COUNT:1) = '1'\n                 COMPUTE CO2-RATING =\n                   CO2-RATING + 2 ** BIT-EXPONENT\n             END-IF\n           END-PERFORM\n\n           DISPLAY MYNAME ' O2 rating   ' O2-RATING\n           DISPLAY MYNAME ' CO2 rating  ' CO2-RATING\n\n           COMPUTE CURR-PRODUCT = O2-RATING * CO2-RATING\n           DISPLAY\n            MYNAME\n            ' product of O2 and CO2 '\n            CURR-PRODUCT\n\n           DISPLAY MYNAME ' records read ' WS-REC-COUNT\n\n           GOBACK.\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n               MOVE WS-INPT TO INPT-BITS(WS-REC-COUNT)\n               SET INPT-O2(WS-REC-COUNT) TO TRUE\n               SET INPT-CO2(WS-REC-COUNT) TO TRUE\n               IF WS-REC-COUNT = 1\n                   PERFORM \n                   UNTIL WS-INPT(NB-BITS:1) NOT NUMERIC\n                     ADD 1 TO NB-BITS\n                   END-PERFORM\n                   SUBTRACT 1 FROM NB-BITS\n                   DISPLAY MYNAME ' number of bits ' NB-BITS\n               END-IF\n           END-READ\n           .\n\n       8020-COUNT-BITS.\n           EVALUATE INPT-BITS(INPT-INDX)(BIT-TO-COUNT:1)\n             WHEN '0'\n                  ADD 1 TO COUNT-0(BIT-TO-COUNT)\n             WHEN '1'\n                  ADD 1 TO COUNT-1(BIT-TO-COUNT)\n             WHEN OTHER\n                  DISPLAY\n                    MYNAME\n                   ' bad bit '\n                   BIT-TO-COUNT\n                   ' '\n                   INPT-INDX\n                   ' |'\n                   INPT-BITS(INPT-INDX)\n                   '|' \n           END-EVALUATE\n           .\n\n       8030-MOST-AND-LEAST.\n           EVALUATE TRUE\n             WHEN COUNT-0(BIT-TO-COUNT) > COUNT-1(BIT-TO-COUNT)\n               MOVE '0' TO MOST-COMMON(BIT-TO-COUNT)\n               MOVE '1' TO LEAST-COMMON(BIT-TO-COUNT)\n             WHEN COUNT-0(BIT-TO-COUNT) <= COUNT-1(BIT-TO-COUNT)\n               MOVE '1' TO MOST-COMMON(BIT-TO-COUNT)\n               MOVE '0' TO LEAST-COMMON(BIT-TO-COUNT)\n           END-EVALUATE\n           .\n\n       9010-DUMP-TABLES.\n           DISPLAY\n             MYNAME\n             BIT-TO-COUNT\n             ' COUNT-0 '\n             COUNT-0(BIT-TO-COUNT)\n             ' COUNT-1 '\n             COUNT-1(BIT-TO-COUNT)\n             ' MOST-COMMON '\n             MOST-COMMON(BIT-TO-COUNT)\n             ' LEAST-COMMON '\n             LEAST-COMMON(BIT-TO-COUNT)\n           PERFORM VARYING INPT-INDX FROM 1 BY 1\n           UNTIL INPT-INDX > WS-REC-COUNT\n             DISPLAY\n               MYNAME\n               ' '\n               INPT-INDX\n               ' '\n               INPT-BITS(INPT-INDX)\n               ' '\n               INPT-O2-FLAG(INPT-INDX)\n               ' '\n               INPT-CO2-FLAG(INPT-INDX)\n           END-PERFORM\n           .\n\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "LOAD  \nBACKUP  \nREPORT  \nVALIDATE  \nUPDATE  \nDELETE  \nCREATE  \nEXIT"
    },
    "code_file": "successful_snippet_6d1ba93e.cob",
    "compiled_file": "successful_snippet_6d1ba93e",
    "expected_output": "cs03b    number of bits 00000000\ncs03b    O2-COUNT = 00000009\ncs03b    CO2-COUNT = 00000009\ncs03b    O2 rating   \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000  \u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ncs03b    CO2 rating  \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000  \u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ncs03b    O2 rating   000000000000000000\ncs03b    CO2 rating  000000000000000000\ncs03b    product of O2 and CO2 000000000000000000\ncs03b    records read 00000008\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}