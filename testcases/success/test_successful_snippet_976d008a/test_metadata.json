{
    "cobol_file": {
        "file_name": "successful_snippet_976d008a.cob",
        "content": "       identification division.\n       program-id. ASGN06RB.\n       AUTHOR.     RYAN BROOKS.\n      * ASSIGNMENT 6 - MATH CALCULATIONS\n       environment division.\n       configuration section.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n                   \n       data division.\n       working-storage section.\n       01  WS-FN-FL-WORKING-STORAGE.\n      * Add & Modify working storage elements as needed.  Some\n      * required elements are coded incorrectly, others are missing.\n           05 WS-INPUT-1           PIC 9(02)    VALUE 0.\n           05 WS-INPUT-2           PIC 9(02)    value 0.\n           05 WS-AVG               PIC 99.9     value 0.\n           05 WS-AVG-RND           PIC 9(02)    value 0.\n           05 WS-AVG-INT           PIC 9(03)    value 0.\n           05 WS-USER-AGE          PIC 9(02)    VALUE 0.\n           05 WS-WEIGHT-IN         PIC 9(03)    VALUE 0.\n           05 WS-WEIGHT-MET        PIC 99.9     VALUE 0.\n           05 WS-INCH-HGT-IN       PIC 9(03)    VALUE 0.\n           05 WS-CM-HGT            PIC 99.9     VALUE 0.\n           05 WS-BMI               PIC 99.99    VALUE 0.\n           05 WS-BMI-MET           PIC 99.99    VALUE 0.\n           05 WS-LAST-LEAP-YEAR    PIC 9(04)    VALUE 2016.\n           05 WS-NEXT-LEAP-YEAR-1  PIC 9(04)    VALUE 0.\n           05 WS-NEXT-LEAP-YEAR-2  PIC 9(04)    VALUE 0.\n           05 WS-NEXT-LEAP-YEAR-3  PIC 9(04)    VALUE 0.\n           05 WS-NEXT-LEAP-YEAR-4  PIC 9(04)    VALUE 0.\n           05 WS-UNTIL-LEAP-YEAR   PIC 9(01)    VALUE 0.\n           05 WS-TILL-CENTURY      PIC 9(02)    VALUE 0.\n           05 WS-YEARS-OLD         PIC 9(02)    VALUE 0.\n           05 WS-END               PIC X(01)    VALUE SPACE.\n           \n       01  WS-TIME.\n           05 WS-TIME-HH           PIC X(02).\n           05 WS-TIME-MM           PIC X(02).\n           05 WS-TIME-SS           PIC X(02).\n           05 WS-TIME-HS           PIC X(02).\n           \n       01  WS-TODAYS-DATE.\n           05 WS-8-DATE-YEAR       PIC 9(04).\n              77 WS-8-DATE-CC      PIC 9(02).\n              77 WS-8-DATE-YY      PIC 9(02).\n           77 WS-8-DATE-MM         PIC X(02).\n           77 WS-8-DATE-DD         PIC X(02).\n        \n       PROCEDURE division.\n       BEGIN.\n           display \"START ASGN06RB FOR Ryan Brooks\".\n           ACCEPT WS-TODAYS-DATE from date yyyymmdd.\n           DISPLAY \"PROGRAM EXECUTION DATE: \" WS-TODAYS-DATE.\n           ACCEPT WS-TIME from time.\n           DISPLAY \"PROGRAM EXECUTION START TIME: \" WS-TIME-HH\n                   \":\" WS-TIME-MM.\n           display \"******\".\n      * COMPLETE THE PROCEDURE DIVISION TO PERFORM THESE CALCULATIONS.\n      * THIS WILL ALSO INCLUDE THE COMPLETION OF SOME WORKING STORAGE\n      * ELEMENTS, AND THE CREATION OF SOME ELEMENTS. \n        \n      * CALCULATE THE THE AVERAGE, UP TO 2 DECIMAL PLACES, OF \n      * TWO 2 DIGIT NUMBERS, ONCE USING THE ROUNDED STATEMENT, \n      * THE 2ND WITHOUT ROUNDING.\n           DISPLAY \"CALCULATE THE AVG OF 2 WHOLE NUMBERS\".\n           DISPLAY \"Enter a two-digit number\".\n           ACCEPT WS-INPUT-1.\n           DISPLAY \"Enter another two-digit number\".\n           ACCEPT WS-INPUT-2.\n           COMPUTE WS-AVG-INT = WS-INPUT-1 + WS-INPUT-2.\n           compute WS-AVG = WS-AVG-INT / 2.\n           DISPLAY \"The Average of \" WS-INPUT-1 \" and \" WS-INPUT-2 \n                   \" is \" WS-AVG.\n           compute WS-AVG-RND rounded = WS-AVG-INT / 2.\n           DISPLAY \"The Rounded Average of \" WS-INPUT-1 \" and \" \n           WS-INPUT-2 \" is \" WS-AVG-RND.           \n           DISPLAY \"******\"\n      * 2016 WAS A LEAP YEAR. CALCULATE AND DISPLAY EACH OF THE \n      * NEXT 4 LEAP YEARS.\n           display \"CALCULATE LEAP YEARS:\"\n           COMPUTE WS-NEXT-LEAP-YEAR-1 = WS-LAST-LEAP-YEAR + 4.\n           DISPLAY \"NEXT LEAP YEAR: \" WS-NEXT-LEAP-YEAR-1.\n           COMPUTE WS-NEXT-LEAP-YEAR-2 = WS-NEXT-LEAP-YEAR-1 + 4.\n           DISPLAY \"2ND LEAP YEAR FROM NOW: \" WS-NEXT-LEAP-YEAR-2.\n           COMPUTE WS-NEXT-LEAP-YEAR-3 = WS-NEXT-LEAP-YEAR-2 + 4.\n           DISPLAY \"3RD LEAP YEAR FROM NOW: \" WS-NEXT-LEAP-YEAR-3.\n           COMPUTE WS-NEXT-LEAP-YEAR-4 = WS-NEXT-LEAP-YEAR-3 + 4.\n           DISPLAY \"4TH LEAP YEAR FROM NOW: \" WS-NEXT-LEAP-YEAR-4.\n           \n      * DISPLAY FOR THE USER HOW MANY YEARS UNTIL THE NEXT LEAP YEAR\n           compute WS-UNTIL-LEAP-YEAR = WS-NEXT-LEAP-YEAR-1 - \n                   WS-8-DATE-YEAR\n           display \"The next leap year will be in \" WS-UNTIL-LEAP-YEAR\n                   \" years\".\n           \n      * ASK THE USER FOR THEIR AGE.  DISPLAY HOW OLD THEY\n      * WILL BE FOR THE NEXT 2 LEAP YEARS.\n           DISPLAY \"What is your age?\".\n           accept WS-USER-AGE.           \n           compute WS-YEARS-OLD = WS-USER-AGE + WS-UNTIL-LEAP-YEAR.\n           DISPLAY \"YOU WILL BE: \" WS-YEARS-OLD \" ON NEXT LEAP YEAR\".\n           compute WS-YEARS-OLD = WS-YEARS-OLD + 4.\n           DISPLAY \"YOU WILL BE: \" WS-YEARS-OLD \" IN 2 LEAP YEARS\".\n           \n      * DISPLAY FOR THE USER HOW MANY YEARS UNTIL THEY TURN 100\n           compute WS-TILL-CENTURY = 100 - WS-USER-AGE.\n           display \"You have \" WS-TILL-CENTURY \" years until 100\".\n           display \"******\".\n           \n      * PROMPT THE USE FOR THEIR WEIGHT IN POUNDS AND HEIGHT IN INCHES.\n      * CALCULATE AND DISPLAY THE USERS BMI TO TWO DECIMAL PLACES.\n      * LOOK UP FORMULA ON WEB AND USE COBOL COMPUTE STATEMENT TO \n      * TO CALCULATE THE BMI.\n           display \"ENTER YOUR WEIGHT IN LBS: \".\n           ACCEPT WS-WEIGHT-IN.\n           display \"ENTER YOUR HEIGHT IN INCHES: \".\n           ACCEPT WS-INCH-HGT-IN.\n           COMPUTE WS-BMI = WS-WEIGHT-IN * 703 / WS-INCH-HGT-IN ** 2\n           DISPLAY \"YOUR BMI IS: \" WS-BMI.\n           display \"******\".\n           \n           compute WS-CM-HGT = WS-INCH-HGT-IN * 2.54.\n           display \"You are \" WS-CM-HGT \"cm tall\".\n           compute WS-WEIGHT-MET = WS-WEIGHT-IN * 0.453592.\n           display \"You weigh \" WS-WEIGHT-MET \"kg\".\n      *    compute WS-BMI-MET = WS-WEIGHT-MET / WS-CM-HGT ** 2.\n      *    display \"Your metric BMI is: \" WS-BMI-MET.\n           display \"******\".\n           \n      * FOR 5 EXTRA POINTS, CONVERT THE INPUT WEIGHT & HEIGHT TO \n      * METRIC MEASUREMENTS, DISPLAY THEM AND METRIC BMI.\n           \n           DISPLAY \"END OF ASSIGNMENT 06\".\n           DISPLAY \"Press Enter to exit\".\n           ACCEPT WS-END.\n           GOBACK."
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "20231005\n143000\n25\n30\n45\n50\n18\n22\n20240229\n154500\n12\n28\n33\n44\n25\n30\n20250301\n091500\n11\n27\n32\n43\n24\n29\n20260115\n112000\n10\n26\n31\n42\n23\n28\n77777777"
    },
    "code_file": "successful_snippet_976d008a.cob",
    "compiled_file": "successful_snippet_976d008a",
    "expected_output": "START ASGN06RB FOR Ryan Brooks\nPROGRAM EXECUTION DATE: 2025\nPROGRAM EXECUTION START TIME: 00:10\n******\nCALCULATE THE AVG OF 2 WHOLE NUMBERS\nEnter a two-digit number\nEnter another two-digit number\nThe Average of 20 and 14 is 17.0\nThe Rounded Average of 20 and 14 is 17\n******\nCALCULATE LEAP YEARS:\nNEXT LEAP YEAR: 2020\n2ND LEAP YEAR FROM NOW: 2024\n3RD LEAP YEAR FROM NOW: 2028\n4TH LEAP YEAR FROM NOW: 2032\nThe next leap year will be in 5 years\nWhat is your age?\nYOU WILL BE: 30 ON NEXT LEAP YEAR\nYOU WILL BE: 34 IN 2 LEAP YEARS\nYou have 75 years until 100\n******\nENTER YOUR WEIGHT IN LBS: \nENTER YOUR HEIGHT IN INCHES: \nYOUR BMI IS: 10.41\n******\nYou are 14.3cm tall\nYou weigh 13.6kg\n******\nEND OF ASSIGNMENT 06\nPress Enter to exit\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}