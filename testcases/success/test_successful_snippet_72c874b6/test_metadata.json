{
    "cobol_file": {
        "file_name": "successful_snippet_72c874b6.cob",
        "content": "      ******************************************************************\n      * author: Erik Eriksen\n      * date: 2022-04-18\n      * updated: 2022-05-02\n      * purpose: Examples of using various forms of the ACCEPT...FROM...\n      *\n      *          For this example program, I have every accept being stored\n      *          in a generic x(50) variable. These can be broken down as\n      *          needed on a case by case basis.\n      *\n      *          Ex FROM DATE could instead use:\n      *\n      *            accept ws-current-date from date\n      *\n      *          Variable declaration:\n      *\n      *            01  ws-current-date.\n      *                05  ws-current year      pic 99.\n      *                05  ws-current-month     pic 99.\n      *                05  ws-current-day       pic 99.\n      *\n      *\n      * tectonics: cobc\n      ******************************************************************\n       identification division.\n       program-id. accept-from-example.\n       data division.\n       file section.\n       working-storage section.\n\n       01  ws-input                     pic x(50).\n\n       01  ws-num-lines                 usage binary-char unsigned. *>pic x comp-x also works\n       01  ws-num-cols                  usage binary-char unsigned.\n\n       01  ws-num-lines-disp            pic 9(3).\n       01  ws-num-cols-disp             pic 9(3).\n\n       01  ws-max-args                  pic 9(3) comp.\n       01  ws-idx                       pic 9(3) comp.\n\n       procedure division.\n       main-procedure.\n\n           display space\n           display \"ACCEPT... FROM... Example Program\"\n           display \"---------------------------------\"\n           display \"Pass command line parameters to demo that feature\"\n           display space\n\n      *> FROM COMMAND-LINE returns the command line argument string in full.\n           accept ws-input from command-line\n           display \"accept from command-line: \" ws-input\n\n      *> FROM ARGUMENT-NUMBER returns the number of command line arguments\n      *> passed to the program.\n           accept ws-input from argument-number\n           display \"accept from argument-number: \" ws-input\n\n      *> Here is a quick demo iterating through any command lines arguments\n      *> and displaying them one by one.\n           if ws-input > 0 then\n               move ws-input to ws-max-args\n\n               perform varying ws-idx\n               from 1 by 1 until ws-idx > ws-max-args\n\n      *> DISPLAY {VALUE} UPON ARGUMENT-NUMBER sets the current index of\n      *> the command line argument to return when calling\n      *> ACCEPT ... FROM ARGUMENT-VALUE\n                   display ws-idx upon argument-number\n                   accept ws-input from argument-value\n                   display \"accept from argument-value: \" ws-input\n               end-perform\n           end-if\n\n\n      *> FROM ENVIRONMENT returns the value of the environment variable\n      *> passed. (If exists). This first call should return nothing.\n           display \"Before environment setting set:\"\n           accept ws-input from environment \"COB_TEST_ENV_KEY\"\n           display \"accept from environment: \" ws-input\n\n\n      *> FROM EXCEPTION STATUS returns the latest exception status value.\n      *> Due to calling the above on an environment variable that is not\n      *> yet set, this will be set to 1537 or 0x0601 (EC-IMP-ACCEPT)\n           accept ws-input from exception status\n           display \"accept from exception status: \" ws-input\n\n      *> SET ENVIRONMENT sets the environment variable to the value\n      *> supplied.\n           set environment \"COB_TEST_ENV_KEY\" to \"NOW SET!\"\n\n\n      *> Now that the environment value is set, this will return\n      *> \"NOW SET!\" when called.\n           display \"After environment setting set:\"\n           accept ws-input from environment \"COB_TEST_ENV_KEY\"\n           display \"accept from environment: \" ws-input\n\n\n      *> FROM DATE returns current date in YYMMDD format. Note that this\n      *> can cause calculation issues on year if you're not careful\n      *> as there no century included in the year value.\n           accept ws-input from date\n           display \"accept from date: \" ws-input\n\n      *> FROM DATE YYYYMMDD fixes the above issue and returns a four digit\n      *> value for the year.\n           accept ws-input from date yyyymmdd\n           display \"accept from date yyyymmdd: \" ws-input\n\n      *> FROM DAY returns the date in the format YYDDD where DDD is a\n      *> three digit representation of the day of the year. The year is\n      *> only returned in two digits so it has similar issues as\n      *> \"FROM DATE\".\n           accept ws-input from day\n           display \"accept from day: \" ws-input\n\n      *> FROM DAY YYYYDDD is the same as above but includes a four digit\n      *> year in the returned value.\n           accept ws-input from day yyyyddd\n           display \"accept from day yyyyddd: \" ws-input\n\n      *> FROM TIME returns the current time in the format: hhmmssnn\n           accept ws-input from time\n           display \"accept from time: \" ws-input\n\n      *> FROM DAY-OF-WEEK returns the day of the week 1-7 starting on\n      *> Monday (1) and ending on Sunday (7).\n           accept ws-input from day-of-week\n           display \"accept from day-of-week: \" ws-input\n\n      *> FROM USER NAME returns the current user name logged in running\n      *> the application (if available)\n           accept ws-input from user name\n           display \"accept from user name: \" ws-input\n\n      *> FROM CONSOLE is the default if not specified. Reads user input\n      *> from the console.\n           display \"Enter value: \" with no advancing\n           accept ws-input from console\n           display \"accept from console: \" ws-input\n\n      *> After this point, the final ACCEPTs require screen mode so\n      *> the screen will blank and text positions must be provied.\n           display \"Press enter to enter screen mode.\"\n           accept omitted\n\n\n      *> Returns the current number of lines of the current screen\n           accept ws-input from lines\n           display \"accept from lines: \" at 0201 ws-input at 0220\n\n      *> Returns the current number of columns of the current screen.\n           accept ws-input from columns\n           display \"accept from columns: \" at 0301 ws-input at 0322\n\n      *> Example of using the CBL_GET_SCR_SIZE\" system call to do the\n      *> same as above. Note: return values must be converted to numeric\n      *> in order to be displayed. Alphanumeric seems to truncate the\n      *> value to two digits regardless of variable length.\n           display \"Using CBL_GET_SCR_SIZE instead: \" at 0401\n           call \"CBL_GET_SCR_SIZE\" using ws-num-lines ws-num-cols\n           move ws-num-lines to ws-num-lines-disp\n           display \"Num lines: \" at 0501 ws-num-lines-disp at 0514\n           move ws-num-cols to ws-num-cols-disp\n           display \"Num cols: \" at 0601 ws-num-cols-disp at 0614\n\n           goback.\n       end program accept-from-example.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content": "0000000000000000000000000000000000000000000000000000  \n2022041800000000000000000000000000000000000000000000  \nCustomer12345000000000000000000000000000000000000000  \nSupplierXYZ00000000000000000000000000000000000000000000  \n2022050100000000000000000000000000000000000000000000  \nProductA000000000000000000000000000000000000000000000000000  \nOrder123450000000000000000000000000000000000000000000000  \n2022061500000000000000000000000000000000000000000000  \nVendorABC00000000000000000000000000000000000000000000000000  \n0000000000000000000000000000000000000000000000000000"
    },
    "code_file": "successful_snippet_72c874b6.cob",
    "compiled_file": "successful_snippet_72c874b6",
    "expected_output": " \nACCEPT... FROM... Example Program\n---------------------------------\nPass command line parameters to demo that feature\n \naccept from command-line:                                                   \naccept from argument-number: 000000000                                         \nBefore environment setting set:\naccept from environment:                                                   \naccept from exception status: 000001537                                         \nAfter environment setting set:\naccept from environment: NOW SET!                                          \naccept from date: 251009                                            \naccept from date yyyymmdd: 20251009                                          \naccept from day: 25282                                             \naccept from day yyyyddd: 2025282                                           \naccept from time: 00105863                                          \naccept from day-of-week: 4                                                 \naccept from user name: schafhdaniel                                      \nEnter value: accept from console: 00000000000000000000000000000000000000000000000000\nPress enter to enter screen mode.\n\u001b[?1049h\u001b[22;0;0t\u001b[1;24r\u001b(B\u001b[m\u001b[4l\u001b[?7h\u001b[?1h\u001b=\u001b[39;49m\u001b[?12;25h\u001b[?1006;1000h\u001b[39;49m\u001b[37m\u001b[40m\u001b[H\u001b[2J\u001b[2daccept from lines: 0\u001b[6b24\u001b[2;70H\n\u001b[3daccept from columns: 0\u001b[6b80\u001b[3;72H\n\u001b[4dUsing CBL_GET_SCR_SIZE instead: \n\u001b[5dNum lines:   024\n\u001b[6dNum cols:    080\n\u001b[7dend of program, please press a key to exit \u001b[?1006;1000l\u001b[39;49m\n\u001b[24d\u001b[K\u001b[24;1H\u001b[?12l\u001b[?25h\u001b[?1049l\u001b[23;0;0t\n\u001b[?1l\u001b>",
    "expected_output_files": [],
    "expected_input_output_files": []
}