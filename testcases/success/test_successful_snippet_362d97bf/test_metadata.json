{
    "cobol_file": {
        "file_name": "successful_snippet_362d97bf.cob",
        "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n       Function-ID. lmntidx.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'lmntidx'.\n\n       01  EXTERNAL-SWITCHES EXTERNAL.\n           05  PROCESS-SW         PIC X(004).\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       01  ELEMENT-TABLE EXTERNAL.\n           05  LMNT-TBL\n               OCCURS 26.\n               10  LMNT-VAL       PIC X(001). \n               10  LMNT-CT        PIC 9(018) COMP.\n\n       Linkage Section.\n       01  LS-LMNT                PIC X(001).\n       01  LMNT-IDX               PIC S9(009) COMP   VALUE 0.\n       Procedure Division Using\n           LS-LMNT\n         Returning LMNT-IDX\n         .\n           DISPLAY MYNAME ' LS-LMNT ' LS-LMNT\n           PERFORM VARYING LMNT-IDX FROM 1 BY 1\n           UNTIL LMNT-IDX > 26\n           OR LMNT-VAL(LMNT-IDX) = LS-LMNT\n           OR LMNT-VAL(LMNT-IDX) = SPACE\n             CONTINUE\n           END-PERFORM\n\n           IF LMNT-VAL(LMNT-IDX) = SPACE\n               MOVE LS-LMNT TO LMNT-VAL(LMNT-IDX)\n               IF PROCESS-TEST\n                   DISPLAY MYNAME ' adding ' LS-LMNT ' @ ' LMNT-IDX\n               END-IF\n           END-IF\n\n           GOBACK\n           .\n\n       END FUNCTION lmntidx.\n\n       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      * The correct algorithm escapes me.  This doesn't work for \n      * part 2 of day 14.\n      *\n       Program-ID. cs14b.\n       Environment Division.\n       Configuration Section.\n       Repository.\n           FUNCTION lmntidx\n           FUNCTION ALL INTRINSIC.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(080).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008)         VALUE 'cs14b'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(009) COMP    VALUE 0.\n           05  RULE-COUNT         PIC 9(009) COMP    VALUE 0.\n           05  NB-STEPS           PIC 9(009) COMP    VALUE 0.\n           05  STEP-COUNT         PIC 9(009) COMP    VALUE 0.\n           05  NB-LMNT            PIC 9(009) COMP    VALUE 0.\n           05  NEW-IDX            PIC 9(009) COMP    VALUE 0.\n           05  POLY-IDX           PIC 9(009) COMP    VALUE 0.\n           05  POLY-LEN           PIC 9(009) COMP    VALUE 0.\n           05  POLY-PTR           PIC 9(009) COMP    VALUE 1.\n           05  LMNT-IDX           PIC 9(009) COMP    VALUE 0.\n           05  LMNT-MAX           PIC 9(018) COMP    VALUE 0.\n           05  LMNT-MIN           PIC 9(018) COMP    VALUE 9999999999.\n           05  LMNT-COUNT         PIC 9(009) COMP    VALUE 0.\n           05  LMNT-DIF           PIC 9(018) COMP    VALUE 0.\n           05  NB-STEPS-X         PIC X(004)         VALUE SPACES.\n           05  HOLD-LMNT          PIC X(001)         VALUE SPACES.\n           05  CLI-ARGS           PIC X(080)         VALUE LOW-VALUES.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n           05  INITIAL-POLYMER    PIC X(080)         VALUE SPACES.\n           05  NEW-PAIR           PIC X(002)         VALUE SPACES.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(080)        VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n           05  RULES-NOW-SW       PIC X(001)         VALUE 'N'.\n               88  RULES-NOW                         VALUE 'Y'.\n\n       01  EXTERNAL-SWITCHES EXTERNAL.\n           05  PROCESS-SW         PIC X(004).\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       01  RULE-TABLE.\n           05  RULE-TBL\n               OCCURS 100\n               ASCENDING KEY PAIR\n               INDEXED RULE-IDX.\n               10  PAIR           PIC X(002).\n               10  LMNT           PIC X(001).\n\n       01  POLYMER-TABLE.\n           05  POLY-TBL\n               OCCURS 676.\n               10  POLY-PAIR      PIC X(002).\n               10  POLY-PAIR-CT   PIC 9(018) COMP.\n               10  POLY-PAIR-SW   PIC X(001).\n                   88  POLY-PAIR-ACTIVE              VALUE 'Y'\n                                                     FALSE 'N'.\n\n       01  NEW-POLYMER-TABLE.\n           05  NEW-POLY-TBL\n               OCCURS 676.\n               10  POLY-PAIR      PIC X(002).\n               10  POLY-PAIR-CT   PIC 9(018) COMP.\n               10  POLY-PAIR-SW   PIC X(001).\n                   88  POLY-PAIR-ACTIVE              VALUE 'Y'\n                                                     FALSE 'N'.\n\n       01  ELEMENT-TABLE EXTERNAL.\n           05  LMNT-TBL\n               OCCURS 26.\n               10  LMNT-VAL       PIC X(001). \n               10  LMNT-CT        PIC 9(018) COMP.\n\n       Procedure Division.\n           DISPLAY MYNAME SPACE CURRENT-DATE\n\n           ACCEPT CLI-ARGS FROM COMMAND-LINE\n           UNSTRING CLI-ARGS DELIMITED SPACE OR LOW-VALUE\n             INTO PROCESS-TYPE NB-STEPS-X\n           END-UNSTRING\n\n           MOVE UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n           MOVE NUMVAL(NB-STEPS-X) TO NB-STEPS\n\n           DISPLAY MYNAME ' nb steps  ' NB-STEPS\n\n           MOVE HIGH-VALUES TO RULE-TABLE\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           PERFORM 1000-LOAD-INPUT UNTIL INPT-DATA-EOF\n\n           CLOSE INPT-DATA\n\n           DISPLAY MYNAME ' number of rules ' RULE-COUNT\n\n           SORT RULE-TBL ASCENDING KEY PAIR\n\n           PERFORM 2000-CONSTRUCT-POLYMER NB-STEPS TIMES\n\n           IF PROCESS-TEST\n               PERFORM VARYING POLY-IDX FROM 1 BY 1\n               UNTIL POLY-PAIR OF POLYMER-TABLE(POLY-IDX) = SPACES\n               OR POLY-IDX > 676\n                 DISPLAY MYNAME ' ' POLY-IDX\n                   ' ' POLY-PAIR OF POLYMER-TABLE(POLY-IDX)\n                   ' ' POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n                   ' ' POLY-PAIR-SW OF POLYMER-TABLE(POLY-IDX)\n               END-PERFORM\n           END-IF\n\n           PERFORM 3000-COUNT-ELEMENTS\n\n           DISPLAY MYNAME ' most common     ' LMNT-MAX\n           DISPLAY MYNAME ' least common    ' LMNT-MIN\n           DISPLAY MYNAME ' difference      ' LMNT-DIF\n           DISPLAY MYNAME ' records read    ' WS-REC-COUNT\n\n           DISPLAY MYNAME SPACE CURRENT-DATE\n\n           GOBACK.\n\n       1000-LOAD-INPUT.\n           EVALUATE TRUE\n             WHEN RULES-NOW\n                  ADD 1 TO RULE-COUNT\n                  UNSTRING WS-INPT DELIMITED ' -> '\n                    INTO PAIR(RULE-COUNT) LMNT(RULE-COUNT)\n                  END-UNSTRING\n             WHEN WS-REC-COUNT = 1\n                  PERFORM 1010-INIT-POLYMER-TABLE\n                  PERFORM 1020-INIT-ELEMENT-TABLE\n             WHEN WS-INPT = SPACES\n                  SET RULES-NOW TO TRUE\n           END-EVALUATE\n\n           INITIALIZE WS-INPT\n           PERFORM 8010-READ-INPT-DATA\n           .\n\n       1010-INIT-POLYMER-TABLE.\n           MOVE WS-INPT TO INITIAL-POLYMER\n           INITIALIZE POLYMER-TABLE\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL INITIAL-POLYMER(POLY-IDX + 1:1) = SPACE\n             MOVE INITIAL-POLYMER(POLY-IDX:2)\n               TO POLY-PAIR OF POLYMER-TABLE(POLY-IDX)\n             MOVE 1 TO POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n             SET POLY-PAIR-ACTIVE OF POLYMER-TABLE(POLY-IDX) TO TRUE\n           END-PERFORM\n           .\n\n       1020-INIT-ELEMENT-TABLE.\n           INITIALIZE ELEMENT-TABLE\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL INITIAL-POLYMER(POLY-IDX:1) = SPACE\n             MOVE lmntidx(INITIAL-POLYMER(POLY-IDX:1))\n               TO LMNT-IDX\n             ADD 1 TO LMNT-CT(LMNT-IDX)\n           END-PERFORM\n           .\n\n       2000-CONSTRUCT-POLYMER.\n           MOVE POLYMER-TABLE TO NEW-POLYMER-TABLE\n           ADD 1 TO STEP-COUNT\n           DISPLAY MYNAME ' STEP ' STEP-COUNT\n           CALL 'lmntdump'\n           DISPLAY MYNAME ' POLYMER-TABLE'\n           CALL 'polydump' USING POLYMER-TABLE\n\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL POLY-IDX > 676\n           OR POLY-PAIR OF POLYMER-TABLE(POLY-IDX) = SPACES\n             IF POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX) > 0\n                 PERFORM 2010-SEARCH-RULES\n                 MOVE lmntidx(LMNT(RULE-IDX)) TO LMNT-IDX\n                 IF PROCESS-TEST\n                     DISPLAY MYNAME\n                       ' lmnt    ' LMNT-VAL(LMNT-IDX)\n                       ' lmnt-ct ' LMNT-CT(LMNT-IDX)\n                       ' poly-pair-ct ' \n                       POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n                     DISPLAY MYNAME\n                       ' rule ' PAIR(RULE-IDX) ' -> ' LMNT(RULE-IDX)\n                 END-IF\n                 COMPUTE LMNT-CT(LMNT-IDX) =\n                     LMNT-CT(LMNT-IDX)\n                   + POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n                 SUBTRACT\n                      POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n                   FROM\n                      POLY-PAIR-CT OF NEW-POLYMER-TABLE(POLY-IDX)\n                 PERFORM 2020-CREATE-NEW-PAIRS\n      *           MOVE 0 TO POLY-PAIR-CT OF NEW-POLYMER-TABLE(POLY-IDX)\n             END-IF \n           END-PERFORM\n\n           DISPLAY MYNAME ' NEW-POLYMER-TABLE'\n           CALL 'polydump' USING NEW-POLYMER-TABLE\n           MOVE NEW-POLYMER-TABLE TO POLYMER-TABLE\n           .\n\n       2010-SEARCH-RULES.\n           SEARCH ALL RULE-TBL\n             WHEN PAIR(RULE-IDX) = POLY-PAIR OF POLYMER-TABLE(POLY-IDX)\n                  CONTINUE\n           END-SEARCH\n           .\n\n       2020-CREATE-NEW-PAIRS.\n\n           MOVE POLY-PAIR OF POLYMER-TABLE (POLY-IDX)(1:1)\n             TO NEW-PAIR(1:1)\n           MOVE LMNT(RULE-IDX)           TO NEW-PAIR(2:1)\n           PERFORM 2021-SET-NEW-PAIR-ACTIVE\n\n           MOVE LMNT(RULE-IDX)           TO NEW-PAIR(1:1)\n           MOVE POLY-PAIR OF POLYMER-TABLE (POLY-IDX)(2:1)\n             TO NEW-PAIR(2:1)\n           PERFORM 2021-SET-NEW-PAIR-ACTIVE\n           .\n\n       2021-SET-NEW-PAIR-ACTIVE.\n           CALL 'pairidx' USING\n               NEW-PAIR\n               NEW-IDX\n               NEW-POLYMER-TABLE\n               POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n           END-CALL\n\n      *     MOVE POLY-PAIR-CT OF POLYMER-TABLE(POLY-IDX)\n      *       TO POLY-PAIR-CT OF NEW-POLYMER-TABLE(NEW-IDX)\n           .\n\n       3000-COUNT-ELEMENTS.\n           CALL 'lmntdump'\n           PERFORM VARYING LMNT-IDX FROM 1 BY 1\n           UNTIL LMNT-IDX > 26\n           OR LMNT-VAL(LMNT-IDX) = SPACE\n             IF LMNT-CT(LMNT-IDX) < LMNT-MIN\n                 MOVE LMNT-CT(LMNT-IDX) TO LMNT-MIN\n             END-IF\n             IF LMNT-CT(LMNT-IDX) > LMNT-MAX\n                 MOVE LMNT-CT(LMNT-IDX) TO LMNT-MAX\n             END-IF\n           END-PERFORM\n\n           SUBTRACT LMNT-MIN FROM LMNT-MAX GIVING LMNT-DIF\n           .\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n           END-READ\n\n           .\n\n\n       END PROGRAM cs14b.\n\n       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n       Program-ID. pairidx.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'pairidx'.\n\n       01  EXTERNAL-SWITCHES EXTERNAL.\n           05  PROCESS-SW         PIC X(004).\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       Linkage Section.\n       01  LS-POLY-PAIR           PIC X(002).\n       01  POLY-IDX               PIC S9(009) COMP   VALUE 0.\n       01  NEW-POLYMER-TABLE.\n           05  NEW-POLY-TBL\n               OCCURS 676.\n               10  POLY-PAIR      PIC X(002).\n               10  POLY-PAIR-CT   PIC 9(018) COMP.\n               10  POLY-PAIR-SW   PIC X(001).\n                   88  POLY-PAIR-ACTIVE              VALUE 'Y'\n                                                     FALSE 'N'.\n\n       01  OLD-POLY-PAIR-CT       PIC 9(018) COMP.\n       Procedure Division Using\n           LS-POLY-PAIR\n           POLY-IDX\n           NEW-POLYMER-TABLE\n           OLD-POLY-PAIR-CT\n         .\n\n           DISPLAY MYNAME ' POLY-PAIR ' LS-POLY-PAIR\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL POLY-IDX > 676\n           OR POLY-PAIR OF NEW-POLYMER-TABLE(POLY-IDX) = SPACES\n             IF POLY-PAIR OF NEW-POLYMER-TABLE(POLY-IDX) = LS-POLY-PAIR\n                 ADD 1 TO POLY-PAIR-CT(POLY-IDX)\n                 EXIT PERFORM\n             END-IF\n           END-PERFORM\n\n           IF POLY-PAIR OF NEW-POLYMER-TABLE(POLY-IDX) = SPACES\n               MOVE LS-POLY-PAIR\n                 TO POLY-PAIR OF NEW-POLYMER-TABLE(POLY-IDX)\n               MOVE OLD-POLY-PAIR-CT\n                 TO POLY-PAIR-CT OF NEW-POLYMER-TABLE(POLY-IDX)\n               IF PROCESS-TEST\n                   DISPLAY MYNAME ' adding ' LS-POLY-PAIR ' @ ' POLY-IDX\n               END-IF\n           END-IF\n\n           GOBACK\n           .\n\n       END PROGRAM pairidx.\n\n       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n       Program-ID. lmntdump.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'lmntdump'.\n\n       01  EXTERNAL-SWITCHES EXTERNAL.\n           05  PROCESS-SW         PIC X(004).\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       01  ELEMENT-TABLE EXTERNAL.\n           05  LMNT-TBL\n               OCCURS 26.\n               10  LMNT-VAL       PIC X(001). \n               10  LMNT-CT        PIC 9(018) COMP.\n\n       Local-Storage Section.\n       01  WORK-AREAS.\n           05  LMNT-IDX           PIC 9(009) COMP.\n\n       Procedure Division.\n\n           PERFORM VARYING LMNT-IDX FROM 1 BY 1\n           UNTIL LMNT-IDX > 26\n           OR LMNT-VAL(LMNT-IDX) = SPACE\n             IF PROCESS-TEST\n                 DISPLAY MYNAME ' element ' LMNT-VAL(LMNT-IDX)\n                   ' ' LMNT-CT(LMNT-IDX)\n             END-IF\n           END-PERFORM\n\n           GOBACK\n           .\n\n       END PROGRAM lmntdump.\n\n       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n       Program-ID. polydump.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'polydump'.\n\n       01  EXTERNAL-SWITCHES EXTERNAL.\n           05  PROCESS-SW         PIC X(004).\n               88  PROCESS-TEST                      VALUE 'TEST'.\n\n       01  ELEMENT-TABLE EXTERNAL.\n           05  LMNT-TBL\n               OCCURS 26.\n               10  LMNT-VAL       PIC X(001). \n               10  LMNT-CT        PIC 9(018) COMP.\n\n       Local-Storage Section.\n       01  WORK-AREAS.\n           05  POLY-IDX           PIC 9(009) COMP.\n\n       Linkage Section.\n       01  POLYMER-TABLE.\n           05  POLY-TBL\n               OCCURS 676.\n               10  POLY-PAIR      PIC X(002).\n               10  POLY-PAIR-CT   PIC 9(018) COMP.\n               10  POLY-PAIR-SW   PIC X(001).\n                   88  POLY-PAIR-ACTIVE              VALUE 'Y'\n                                                     FALSE 'N'.\n\n       Procedure Division Using\n           POLYMER-TABLE\n           .\n\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL POLY-IDX > 676\n           OR POLY-PAIR(POLY-IDX) = SPACES\n             IF PROCESS-TEST\n                 DISPLAY MYNAME\n                   ' ' POLY-IDX\n                   ' pair ' POLY-PAIR(POLY-IDX)\n                   ' ' POLY-PAIR-CT(POLY-IDX)\n                   ' ' POLY-PAIR-SW(POLY-IDX)\n             END-IF\n           END-PERFORM\n\n           GOBACK\n           .\n\n       END PROGRAM polydump.\n\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": {
        "file_name": "sysin.txt",
        "content
    },
    "code_file": "successful_snippet_362d97bf.cob",
    "compiled_file": "successful_snippet_362d97bf",
    "expected_output": "cs14b    2025100900123299+0200\ncs14b    nb steps  000000000\nlmntidx  LS-LMNT P\nlmntidx  LS-LMNT R\nlmntidx  LS-LMNT O\nlmntidx  LS-LMNT C\nlmntidx  LS-LMNT E\nlmntidx  LS-LMNT S\nlmntidx  LS-LMNT S\nlmntidx  LS-LMNT 1\ncs14b    number of rules 000000000\ncs14b    most common     000000000000000002\ncs14b    least common    000000000000000001\ncs14b    difference      000000000000000001\ncs14b    records read    000000026\ncs14b    2025100900123299+0200\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}