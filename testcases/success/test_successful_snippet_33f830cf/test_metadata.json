{
    "cobol_file": {
        "file_name": "successful_snippet_33f830cf.cob",
        "content": "      ******************************************************************\n      * Author: Maxfx                                                  *\n      * Date: 22/5/2017                                                *\n      * Example for select sort algorithm                              *\n      ******************************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-SORT.\n       DATA DIVISION.\n       FILE SECTION.\n       WORKING-STORAGE SECTION.\n      ******************************************************************\n      *    Variable for lenght of array                                *\n      ******************************************************************\n           78 W-LEN-ARR VALUE 30.\n\n      ******************************************************************\n      *     Array of numbers                                           *\n      ******************************************************************\n           01 W-ARR PIC 999 OCCURS W-LEN-ARR TIMES.\n\n      ******************************************************************\n      *    Counters for array                                          *\n      ******************************************************************\n           01 W-R PIC S999 VALUE 1.\n           01 W-I PIC S999 VALUE 1.\n           01 W-J PIC S999 VALUE 1.\n           01 W-H PIC S999 VALUE 1.\n\n      ******************************************************************\n      *    Helper for swap numbers                                     *\n      ******************************************************************\n           01 W-MIN  PIC S999 VALUE 0.\n           01 W-SWAP PIC S999 VALUE 0.\n\n      *****************************************************************\n      *    Min and max number for \"Random numbers\"\n      *****************************************************************\n           01 W-MIN-NUMBER PIC 999 VALUE 1.\n           01 W-MAX-NUMBER PIC 999 VALUE 200.\n           01 W-RAN-NUMBER PIC 999.\n\n       PROCEDURE DIVISION.\n       MAIN-PROCEDURE.\n\n           PERFORM GENERATE-RANDOM-NUM.\n           PERFORM SORTING-ARRAY.\n           GOBACK.\n\n           GENERATE-RANDOM-NUM SECTION.\n\n            PERFORM VARYING W-R FROM 1 BY 1 UNTIL W-R > W-LEN-ARR\n\n              PERFORM W-LEN-ARR TIMES\n              COMPUTE W-RAN-NUMBER = FUNCTION RANDOM *\n                            (W-MAX-NUMBER - W-MIN-NUMBER + 1) +\n                             W-MIN-NUMBER\n              END-PERFORM\n              MOVE W-RAN-NUMBER TO W-ARR(W-R)\n              DISPLAY \"POS: \" W-R \" RANDOM NUMBER: \" W-ARR(W-R)\n\n            END-PERFORM.\n\n           SORTING-ARRAY SECTION.\n\n           PERFORM UNTIL W-I > W-LEN-ARR\n             MOVE W-LEN-ARR TO W-MIN\n             MOVE W-I TO W-J\n\n             PERFORM UNTIL W-J > W-LEN-ARR\n               IF W-ARR(W-MIN) > W-ARR(W-J)\n                 MOVE W-J TO W-MIN\n               END-IF\n\n               ADD 1 TO W-J\n             END-PERFORM\n\n             MOVE W-ARR(W-MIN) TO W-SWAP\n             MOVE W-ARR(W-I) TO W-ARR(W-MIN)\n             MOVE W-SWAP TO W-ARR(W-I)\n\n             ADD 1 TO W-I\n           END-PERFORM.\n\n           PERFORM VARYING W-H FROM 1 BY 1 UNTIL W-H > W-LEN-ARR\n           DISPLAY \"POS: \" W-H \" SORTED: \" W-ARR(W-H)\n           END-PERFORM.\n"
    },
    "input_files": [],
    "output_files": [],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_33f830cf.cob",
    "compiled_file": "successful_snippet_33f830cf",
    "expected_output": "POS: +001 RANDOM NUMBER: 140\nPOS: +002 RANDOM NUMBER: 107\nPOS: +003 RANDOM NUMBER: 156\nPOS: +004 RANDOM NUMBER: 023\nPOS: +005 RANDOM NUMBER: 096\nPOS: +006 RANDOM NUMBER: 008\nPOS: +007 RANDOM NUMBER: 132\nPOS: +008 RANDOM NUMBER: 011\nPOS: +009 RANDOM NUMBER: 086\nPOS: +010 RANDOM NUMBER: 136\nPOS: +011 RANDOM NUMBER: 036\nPOS: +012 RANDOM NUMBER: 015\nPOS: +013 RANDOM NUMBER: 186\nPOS: +014 RANDOM NUMBER: 014\nPOS: +015 RANDOM NUMBER: 076\nPOS: +016 RANDOM NUMBER: 018\nPOS: +017 RANDOM NUMBER: 006\nPOS: +018 RANDOM NUMBER: 115\nPOS: +019 RANDOM NUMBER: 155\nPOS: +020 RANDOM NUMBER: 192\nPOS: +021 RANDOM NUMBER: 090\nPOS: +022 RANDOM NUMBER: 077\nPOS: +023 RANDOM NUMBER: 197\nPOS: +024 RANDOM NUMBER: 120\nPOS: +025 RANDOM NUMBER: 160\nPOS: +026 RANDOM NUMBER: 077\nPOS: +027 RANDOM NUMBER: 007\nPOS: +028 RANDOM NUMBER: 125\nPOS: +029 RANDOM NUMBER: 006\nPOS: +030 RANDOM NUMBER: 123\nPOS: +001 SORTED: 006\nPOS: +002 SORTED: 006\nPOS: +003 SORTED: 007\nPOS: +004 SORTED: 008\nPOS: +005 SORTED: 011\nPOS: +006 SORTED: 014\nPOS: +007 SORTED: 015\nPOS: +008 SORTED: 018\nPOS: +009 SORTED: 023\nPOS: +010 SORTED: 036\nPOS: +011 SORTED: 076\nPOS: +012 SORTED: 077\nPOS: +013 SORTED: 077\nPOS: +014 SORTED: 086\nPOS: +015 SORTED: 090\nPOS: +016 SORTED: 096\nPOS: +017 SORTED: 107\nPOS: +018 SORTED: 115\nPOS: +019 SORTED: 120\nPOS: +020 SORTED: 123\nPOS: +021 SORTED: 125\nPOS: +022 SORTED: 132\nPOS: +023 SORTED: 136\nPOS: +024 SORTED: 140\nPOS: +025 SORTED: 155\nPOS: +026 SORTED: 156\nPOS: +027 SORTED: 160\nPOS: +028 SORTED: 186\nPOS: +029 SORTED: 192\nPOS: +030 SORTED: 197\n",
    "expected_output_files": [],
    "expected_input_output_files": []
}