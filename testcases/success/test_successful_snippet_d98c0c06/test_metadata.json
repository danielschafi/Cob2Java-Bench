{
    "cobol_file": {
        "file_name": "successful_snippet_d98c0c06.cob",
        "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IsbnConv.\n       AUTHOR. Andreas Suhre.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n         SELECT Isbn10File ASSIGN TO \"isbn10.dat\"\n                ORGANIZATION IS LINE SEQUENTIAL.\n         SELECT Isbn13File ASSIGN TO \"isbn13.dat\"\n                ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n       FILE SECTION.\n       FD Isbn10File.\n       01 Isbn10 PIC X(10).\n          88 EndOfIsbn10File VALUE HIGH-VALUES.\n\n       FD Isbn13File.\n       01 Isbn13 PIC X(13).\n\n       WORKING-STORAGE SECTION.\n       01 Isbn10Prn PIC X/XXX/XXXXX/X.\n\n       01 Isbn13Prn PIC XXX/X/XXX/XXXXX/X.\n\n       01 ValidationResult PIC 9.\n          88 ValidIsbn VALUE ZERO.\n          88 InvalidIsbn VALUE 1.\n\n       PROCEDURE DIVISION.\n       Begin.\n         OPEN INPUT Isbn10File\n         OPEN OUTPUT Isbn13File\n         PERFORM ReadRecord\n         PERFORM UNTIL EndOfIsbn10File\n           MOVE Isbn10 TO Isbn10Prn\n           INSPECT Isbn10Prn REPLACING ALL \"/\" BY \"-\"\n           DISPLAY Isbn10Prn \" -> \" WITH NO ADVANCING\n\n           CALL \"CheckIsbn10\" USING BY CONTENT Isbn10\n                                    BY REFERENCE ValidationResult\n           IF InvalidIsbn\n             DISPLAY \"not valid\"\n           ELSE\n             CALL \"MakeIsbn13\" USING BY CONTENT Isbn10\n                                     BY REFERENCE Isbn13\n             MOVE Isbn13 TO Isbn13Prn\n             INSPECT Isbn13Prn REPLACING ALL \"/\" BY \"-\"\n             DISPLAY Isbn13Prn\n             WRITE Isbn13\n           END-IF\n           PERFORM ReadRecord\n         END-PERFORM\n         CLOSE Isbn10File, Isbn13File\n       STOP RUN.\n\n       ReadRecord.\n         READ Isbn10File\n           AT END SET EndOfIsbn10File TO TRUE\n         END-READ.\n\n      *===========================================\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CheckIsbn10 IS INITIAL.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01 Idx PIC 99.\n\n       01 Result PIC 999 VALUE ZERO.\n\n       01 CheckNum PIC 99.\n\n       LINKAGE SECTION.\n       01 Isbn.\n          02 IsbnNum PIC 9(9).\n          02 IsbnDigits REDEFINES IsbnNum PIC 9 OCCURS 9 TIMES.\n          02 IsbnChk PIC X.\n\n       01 ChkResult PIC 9.\n          88 Ok VALUE ZERO.\n          88 NotOk VALUE 1.\n\n       PROCEDURE DIVISION USING Isbn, ChkResult.\n       Begin.\n         PERFORM VARYING Idx FROM 1 BY 1 UNTIL Idx > 9\n           COMPUTE Result = Result + Idx * IsbnDigits(Idx)\n         END-PERFORM\n         MOVE FUNCTION MOD(Result 11) TO Result\n         IF IsbnChk = \"X\"\n           MOVE 10 TO CheckNum\n         ELSE\n           MOVE IsbnChk TO CheckNum\n         END-IF\n         IF Result = CheckNum\n           SET Ok TO TRUE\n         ELSE\n           SET NotOk TO TRUE\n         END-IF\n         EXIT PROGRAM.\n\n       END PROGRAM CheckIsbn10.\n\n      *-------------------------------------------\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MakeIsbn13 IS INITIAL.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01 Idx PIC 99.\n\n       01 Result PIC 999 VALUE 38. *> 9 + 3 * 7 + 8 = 38\n\n       01 CheckNum PIC 9.\n\n       LINKAGE SECTION.\n       01 Isbn10.\n          02 Isbn10Num PIC 9(9).\n          02 Isbn10Digits REDEFINES Isbn10Num PIC 9 OCCURS 9 TIMES.\n          02 FILLER PIC X.\n\n       01 Isbn13 PIC X(13).\n\n       PROCEDURE DIVISION USING Isbn10, Isbn13.\n       Begin.\n         PERFORM VARYING Idx FROM 1 BY 1 UNTIL Idx > 9\n           IF FUNCTION MOD(Idx 2) = 0\n             COMPUTE Result = Result + Isbn10Digits(Idx)\n           ELSE\n             COMPUTE Result = Result + 3 * Isbn10Digits(Idx)\n           END-IF\n         END-PERFORM\n         MOVE FUNCTION MOD((10 - FUNCTION MOD(Result 10)) 10)\n              TO CheckNum\n         STRING\n           \"978\" DELIMITED BY SIZE\n           Isbn10Num DELIMITED BY SIZE\n           CheckNum DELIMITED BY SIZE\n         INTO Isbn13\n         END-STRING\n         EXIT PROGRAM.\n\n       END PROGRAM MakeIsbn13.\n\n      *===========================================\n\n       END PROGRAM IsbnConv.\n"
    },
    "input_files": [
        {
            "file_name": "isbn10.dat",
            "content": "0395193951\n0131103628\n0471117099\n0596000278\n0201633612\n0735619670\n0201530828\n0321356683\n0470059025\n0596520689"
        }
    ],
    "output_files": [
        "isbn13.dat"
    ],
    "input_output_files": [],
    "sysin_file": null,
    "code_file": "successful_snippet_d98c0c06.cob",
    "compiled_file": "successful_snippet_d98c0c06",
    "expected_output": "0-395-19395-1 -> not valid\n0-131-10362-8 -> 978-0-131-10362-7\n0-471-11709-9 -> 978-0-471-11709-4\n0-596-00027-8 -> 978-0-596-00027-1\n0-201-63361-2 -> 978-0-201-63361-0\n0-735-61967-0 -> 978-0-735-61967-8\n0-201-53082-8 -> not valid\n0-321-35668-3 -> 978-0-321-35668-0\n0-470-05902-5 -> not valid\n0-596-52068-9 -> 978-0-596-52068-7\n9-   -     -  -> not valid\n",
    "expected_output_files": [
        {
            "file_name": "isbn13.dat",
            "content": "9780131103627\n9780471117094\n9780596000271\n9780201633610\n9780735619678\n9780321356680\n9780596520687\n"
        }
    ],
    "expected_input_output_files": []
}