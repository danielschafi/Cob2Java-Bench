{
  "cobol_file": {
    "file_name": "successful_snippet_b379a247.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AdventOfCode2019-2b.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       SELECT InputFile ASSIGN TO \"2.input\"\n       ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n       FILE SECTION.\n       FD InputFile RECORD IS VARYING IN SIZE FROM 1 TO 9999 CHARACTERS.\n       01 InputRec  PIC X(9999).\n\n       WORKING-STORAGE SECTION.\n       01 Len    PIC 9(5).\n       01 InputTable.\n          02 IOp     PIC 9(15) OCCURS 0 TO 9999 TIMES DEPENDING ON Len.\n       01 OpTable.\n          02 Op      PIC 9(15) OCCURS 0 TO 9999 TIMES DEPENDING ON Len.\n       01 SepNumber  PIC 9(5).\n       01 Ptr        PIC 9(5).\n       01 Addr       PIC 9(5).\n       01 Val        PIC X(15).\n       01 Res        PIC 9(15).\n       01 ResFmt     PIC Z(15).\n       01 Noun       PIC 9(5).\n       01 Verb       PIC 9(5).\n\n       PROCEDURE DIVISION.\n       Begin.\n           OPEN INPUT InputFile.\n           READ InputFile.\n\n           INSPECT InputRec TALLYING SepNumber FOR ALL \",\".\n           IF SepNumber < 9999\n            ADD 1 TO SepNumber\n           ELSE\n            MOVE 9999 TO SepNumber\n           END-IF.\n\n           MOVE 1 TO Ptr.\n           PERFORM SepNumber TIMES\n            UNSTRING InputRec DELIMITED BY \",\" INTO Val\n             WITH POINTER Ptr\n            END-UNSTRING\n            ADD 1 TO Len\n            COMPUTE IOp(Len) = FUNCTION NUMVAL(Val)\n           END-PERFORM.\n\n           CLOSE InputFile.\n\n           PERFORM VARYING Noun FROM 0 UNTIL Noun GREATER THAN 99\n            PERFORM VARYING Verb FROM 0 UNTIL Verb GREATER THAN 99\n\n             PERFORM VARYING Ptr FROM 1 UNTIL Ptr IS GREATER THAN Len\n              MOVE IOp(Ptr) TO Op(Ptr)\n             END-PERFORM\n\n             MOVE Noun TO Op(2)\n             MOVE Verb TO Op(3)\n\n             MOVE 1 TO Ptr\n             PERFORM UNTIL Ptr IS GREATER THAN Len\n              EVALUATE Op(Ptr)\n              WHEN 1\n               ADD 1 TO Ptr\n               COMPUTE Addr = Op(Ptr) + 1\n               MOVE Op(Addr) TO Res\n               ADD 1 TO Ptr\n               COMPUTE Addr = Op(Ptr) + 1\n               ADD Op(Addr) TO Res\n               ADD 1 TO Ptr\n               COMPUTE Addr = Op(Ptr) + 1\n               MOVE Res TO Op(Addr)\n              WHEN 2\n               ADD 1 TO Ptr\n               COMPUTE Addr = Op(Ptr) + 1\n               MOVE Op(Addr) TO Res\n               ADD 1 TO Ptr\n               COMPUTE Addr = Op(Ptr) + 1\n               MULTIPLY Op(Addr) BY Res\n               ADD 1 TO Ptr\n               COMPUTE Addr = Op(Ptr) + 1\n               MOVE Res TO Op(Addr)\n              WHEN 99\n               MOVE Op(1) TO ResFmt\n               EXIT PERFORM\n              END-EVALUATE\n              ADD 1 TO Ptr\n             END-PERFORM\n\n             IF Res EQUAL 19690720\n             THEN\n              COMPUTE Res = 100 * Noun + Verb\n              MOVE Res TO ResFmt\n              DISPLAY ResFmt\n              STOP RUN\n             END-IF\n\n            END-PERFORM\n           END-PERFORM.\n\n"
  },
  "input_files": [
    {
      "file_name": "2.input",
      "content": "1,9,10,3,2,3,11,0,99,30,40,50\n1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,9,1,19,1,19,5,23,1,23,6,27,1,27,13,31,2,31,6,35,1,5,35,39,1,39,10,43,2,9,43,47,1,47,5,51,2,51,9,55,1,13,55,59,1,13,59,63,1,6,63,67,2,13,67,71,1,10,71,75,2,13,75,79,1,5,79,83,2,83,9,87,2,87,13,91,1,91,5,95,2,9,95,99,1,99,5,103,1,2,103,107,1,10,107,0,99,2,14,0,0"
    }
  ],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}