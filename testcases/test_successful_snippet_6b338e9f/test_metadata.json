{
  "cobol_file": {
    "file_name": "successful_snippet_6b338e9f.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. Letter-Frequency.\n       AUTHOR.  Bill Gunshannon.\n       INSTALLATION.  Home.\n       DATE-WRITTEN.  12 December 2021.\n      ************************************************************\n      ** Program Abstract:\n      **   A rather simplistic program to do the kind of thing\n      **   that COBOL does really well.                \n      ************************************************************\n       \n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n            SELECT Text-File ASSIGN TO \"File.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n       \n       DATA DIVISION.\n       \n       FILE SECTION.\n       \n       FD  Text-File\n           DATA RECORD IS Record-Name.\n       01  Record-Name           PIC X(80).\n       \n       \n       WORKING-STORAGE SECTION.\n       \n       01 Eof                   PIC X     VALUE 'F'.\n\n       01  Letter-cnt.\n           05  A-cnt            PIC 9(5)    VALUE 0.\n           05  B-cnt            PIC 9(5)    VALUE 0.\n           05  C-cnt            PIC 9(5)    VALUE 0.\n           05  D-cnt            PIC 9(5)    VALUE 0.\n           05  E-cnt            PIC 9(5)    VALUE 0.\n           05  F-cnt            PIC 9(5)    VALUE 0.\n           05  G-cnt            PIC 9(5)    VALUE 0.\n           05  H-cnt            PIC 9(5)    VALUE 0.\n           05  I-cnt            PIC 9(5)    VALUE 0.\n           05  J-cnt            PIC 9(5)    VALUE 0.\n           05  K-cnt            PIC 9(5)    VALUE 0.\n           05  L-cnt            PIC 9(5)    VALUE 0.\n           05  M-cnt            PIC 9(5)    VALUE 0.\n           05  N-cnt            PIC 9(5)    VALUE 0.\n           05  O-cnt            PIC 9(5)    VALUE 0.\n           05  P-cnt            PIC 9(5)    VALUE 0.\n           05  Q-cnt            PIC 9(5)    VALUE 0.\n           05  R-cnt            PIC 9(5)    VALUE 0.\n           05  S-cnt            PIC 9(5)    VALUE 0.\n           05  T-cnt            PIC 9(5)    VALUE 0.\n           05  U-cnt            PIC 9(5)    VALUE 0.\n           05  V-cnt            PIC 9(5)    VALUE 0.\n           05  W-cnt            PIC 9(5)    VALUE 0.\n           05  X-cnt            PIC 9(5)    VALUE 0.\n           05  Y-cnt            PIC 9(5)    VALUE 0.\n           05  Z-cnt            PIC 9(5)    VALUE 0.\n       \n       01  Letter-disp.\n           05  A-cnt            PIC ZZZZ9.\n           05  B-cnt            PIC ZZZZ9.\n           05  C-cnt            PIC ZZZZ9.\n           05  D-cnt            PIC ZZZZ9.\n           05  E-cnt            PIC ZZZZ9.\n           05  F-cnt            PIC ZZZZ9.\n           05  G-cnt            PIC ZZZZ9.\n           05  H-cnt            PIC ZZZZ9.\n           05  I-cnt            PIC ZZZZ9.\n           05  J-cnt            PIC ZZZZ9.\n           05  K-cnt            PIC ZZZZ9.\n           05  L-cnt            PIC ZZZZ9.\n           05  M-cnt            PIC ZZZZ9.\n           05  N-cnt            PIC ZZZZ9.\n           05  O-cnt            PIC ZZZZ9.\n           05  P-cnt            PIC ZZZZ9.\n           05  Q-cnt            PIC ZZZZ9.\n           05  R-cnt            PIC ZZZZ9.\n           05  S-cnt            PIC ZZZZ9.\n           05  T-cnt            PIC ZZZZ9.\n           05  U-cnt            PIC ZZZZ9.\n           05  V-cnt            PIC ZZZZ9.\n           05  W-cnt            PIC ZZZZ9.\n           05  X-cnt            PIC ZZZZ9.\n           05  Y-cnt            PIC ZZZZ9.\n           05  Z-cnt            PIC ZZZZ9.\n       \n       PROCEDURE DIVISION.\n       \n       Main-Program.\n           OPEN INPUT  Text-File\n           PERFORM UNTIL Eof = 'T'\n              READ  Text-File\n                    AT END MOVE 'T' to Eof\n              END-READ\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING A-cnt OF Letter-cnt  FOR ALL 'A'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING B-cnt OF Letter-cnt  FOR ALL 'B'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING C-cnt OF Letter-cnt  FOR ALL 'C'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING D-cnt OF Letter-cnt  FOR ALL 'D'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING E-cnt OF Letter-cnt  FOR ALL 'E'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING F-cnt OF Letter-cnt  FOR ALL 'F'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING G-cnt OF Letter-cnt  FOR ALL 'G'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING H-cnt OF Letter-cnt  FOR ALL 'H'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING I-cnt OF Letter-cnt  FOR ALL 'I'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING J-cnt OF Letter-cnt  FOR ALL 'J'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING K-cnt OF Letter-cnt  FOR ALL 'K'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING L-cnt OF Letter-cnt  FOR ALL 'L'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING M-cnt OF Letter-cnt  FOR ALL 'M'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING N-cnt OF Letter-cnt  FOR ALL 'N'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING O-cnt OF Letter-cnt  FOR ALL 'O'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING P-cnt OF Letter-cnt  FOR ALL 'P'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING Q-cnt OF Letter-cnt  FOR ALL 'Q'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING R-cnt OF Letter-cnt  FOR ALL 'R'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING S-cnt OF Letter-cnt  FOR ALL 'S'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING T-cnt OF Letter-cnt  FOR ALL 'T'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING U-cnt OF Letter-cnt  FOR ALL 'U'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING V-cnt OF Letter-cnt  FOR ALL 'V'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING W-cnt OF Letter-cnt  FOR ALL 'W'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING X-cnt OF Letter-cnt  FOR ALL 'X'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING Y-cnt OF Letter-cnt  FOR ALL 'Y'\n           INSPECT FUNCTION UPPER-CASE(Record-Name)\n                   TALLYING Z-cnt OF Letter-cnt  FOR ALL 'Z'\n           END-PERFORM.\n           CLOSE Text-File.\n           MOVE CORRESPONDING Letter-cnt To Letter-disp.\n           DISPLAY 'Letter Frequency Distribution'.\n           DISPLAY '-----------------------------'.\n           DISPLAY 'A\u00a0: ' A-cnt OF Letter-disp '          '\n                   'N\u00a0: ' N-cnt OF Letter-disp.\n           DISPLAY 'B\u00a0: ' B-cnt OF Letter-disp '          '\n                   'O\u00a0: ' O-cnt OF Letter-disp.\n           DISPLAY 'C\u00a0: ' C-cnt OF Letter-disp '          '\n                   'P\u00a0: ' P-cnt OF Letter-disp.\n           DISPLAY 'D\u00a0: ' D-cnt OF Letter-disp '          '\n                   'Q\u00a0: ' Q-cnt OF Letter-disp.\n           DISPLAY 'E\u00a0: ' E-cnt OF Letter-disp '          '\n                   'R\u00a0: ' R-cnt OF Letter-disp.\n           DISPLAY 'F\u00a0: ' F-cnt OF Letter-disp '          '\n                   'S\u00a0: ' S-cnt OF Letter-disp.\n           DISPLAY 'G\u00a0: ' G-cnt OF Letter-disp '          '\n                   'T\u00a0: ' T-cnt OF Letter-disp.\n           DISPLAY 'H\u00a0: ' H-cnt OF Letter-disp '          '\n                   'U\u00a0: ' U-cnt OF Letter-disp.\n           DISPLAY 'I\u00a0: ' I-cnt OF Letter-disp '          '\n                   'V\u00a0: ' V-cnt OF Letter-disp.\n           DISPLAY 'J\u00a0: ' J-cnt OF Letter-disp '          '\n                   'W\u00a0: ' W-cnt OF Letter-disp.\n           DISPLAY 'K\u00a0: ' K-cnt OF Letter-disp '          '\n                   'X\u00a0: ' X-cnt OF Letter-disp.\n           DISPLAY 'L\u00a0: ' L-cnt OF Letter-disp '          '\n                   'Y\u00a0: ' Y-cnt OF Letter-disp.\n           DISPLAY 'M\u00a0: ' M-cnt OF Letter-disp '          '\n                   'Z\u00a0: ' Z-cnt OF Letter-disp.\n           STOP RUN.\n       \n       \n       END-PROGRAM.\n"
  },
  "input_files": [
    {
      "file_name": "File.txt",
      "content": "The quick brown fox jumps over the lazy dog near the riverbank at dawn\nCOBOL programming language was designed for business data processing applications\nMary had a little lamb whose fleece was white as snow and everywhere that Mary went\nProgramming in COBOL requires attention to detail and proper data structure design\nThe alphabet contains twenty-six letters from A to Z in sequential order\nBusiness applications often process large volumes of transaction data daily\nFinancial reports must be accurate and comply with regulatory requirements\nCustomer service representatives handle inquiries and resolve issues promptly\nInventory management systems track stock levels and reorder points effectively\nQuality assurance testing validates software functionality before deployment"
    }
  ],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}