{
  "cobol_file": {
    "file_name": "successful_snippet_6f819ce6.cob",
    "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n       Program-ID. cs14a.\n       Environment Division.\n       Configuration Section.\n       Repository.\n           FUNCTION ALL INTRINSIC.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(080).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008)         VALUE 'cs14a'.\n\n       01  WORK-AREAS.\n           05  WS-REC-COUNT       PIC 9(009) COMP    VALUE 0.\n           05  RULE-COUNT         PIC 9(009) COMP    VALUE 0.\n           05  NB-STEPS           PIC 9(009) COMP    VALUE 0.\n           05  POLY-IDX           PIC 9(009) COMP    VALUE 0.\n           05  POLY-LEN           PIC 9(009) COMP    VALUE 0.\n           05  POLY-PTR           PIC 9(009) COMP    VALUE 1.\n           05  LMNT-MAX           PIC 9(009) COMP    VALUE 0.\n           05  LMNT-MIN           PIC 9(009) COMP    VALUE 999999999.\n           05  LMNT-COUNT         PIC 9(009) COMP    VALUE 0.\n           05  LMNT-DIF           PIC 9(009) COMP    VALUE 0.\n           05  NB-STEPS-X         PIC X(004)         VALUE SPACES.\n           05  HOLD-LMNT          PIC X(001)         VALUE SPACES.\n           05  CLI-ARGS           PIC X(080)         VALUE LOW-VALUES.\n           05  PROCESS-TYPE       PIC X(004)         VALUE LOW-VALUES.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT            PIC X(080)        VALUE SPACES.\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n           05  PROCESS-SW         PIC X(004)         VALUE LOW-VALUES.\n               88  PROCESS-TEST                      VALUE 'TEST'.\n           05  RULES-NOW-SW       PIC X(001)         VALUE 'N'.\n               88  RULES-NOW                         VALUE 'Y'.\n\n       01  RULE-TABLE.\n           05  RULE-TBL\n               OCCURS 100\n               ASCENDING KEY PAIR\n               INDEXED RULE-IDX.\n               10  PAIR           PIC X(002).\n               10  LMNT           PIC X(001).\n\n       01  POLYMER                PIC X(100000)       VALUE SPACES.\n       01  POLYMER-R\n           REDEFINES POLYMER.\n           05  POLY-TBL OCCURS 100000 PIC X(001).\n       01  POLYMER-NEW            PIC X(100000)       VALUE SPACES.\n\n       Procedure Division.\n           DISPLAY MYNAME SPACE CURRENT-DATE\n\n           ACCEPT CLI-ARGS FROM COMMAND-LINE\n           UNSTRING CLI-ARGS DELIMITED SPACE OR LOW-VALUE\n             INTO PROCESS-TYPE NB-STEPS-X\n           END-UNSTRING\n\n           MOVE UPPER-CASE(PROCESS-TYPE)\n             TO PROCESS-SW\n           MOVE NUMVAL(NB-STEPS-X) TO NB-STEPS\n\n           DISPLAY MYNAME ' nb steps  ' NB-STEPS\n\n           MOVE HIGH-VALUES TO RULE-TABLE\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n\n           PERFORM 1000-LOAD-INPUT UNTIL INPT-DATA-EOF\n\n           CLOSE INPT-DATA\n\n           INSPECT POLYMER\n             TALLYING POLY-PTR FOR CHARACTERS BEFORE INITIAL SPACE\n           ADD 1 TO POLY-PTR\n\n           DISPLAY MYNAME ' initial polymer ' POLYMER(1:POLY-PTR)\n           DISPLAY MYNAME ' number of rules ' RULE-COUNT\n\n           SORT RULE-TBL ASCENDING KEY PAIR\n\n           PERFORM 2000-CONSTRUCT-POLYMER NB-STEPS TIMES\n\n           IF NB-STEPS < 5\n               DISPLAY MYNAME ' ' POLYMER(1:POLY-PTR)\n           END-IF\n\n           SORT POLY-TBL DESCENDING KEY POLY-TBL\n\n           PERFORM 3000-COUNT-ELEMENTS\n\n           DISPLAY MYNAME ' most common     ' LMNT-MAX\n           DISPLAY MYNAME ' least common    ' LMNT-MIN\n           DISPLAY MYNAME ' difference      ' LMNT-DIF\n           DISPLAY MYNAME ' records read    ' WS-REC-COUNT\n\n           DISPLAY MYNAME SPACE CURRENT-DATE\n\n           GOBACK.\n\n       1000-LOAD-INPUT.\n           EVALUATE TRUE\n             WHEN RULES-NOW\n                  ADD 1 TO RULE-COUNT\n                  UNSTRING WS-INPT DELIMITED ' -> '\n                    INTO PAIR(RULE-COUNT) LMNT(RULE-COUNT)\n                  END-UNSTRING\n             WHEN WS-REC-COUNT = 1\n                  MOVE WS-INPT TO POLYMER\n             WHEN WS-INPT = SPACES\n                  SET RULES-NOW TO TRUE\n           END-EVALUATE\n\n           INITIALIZE WS-INPT\n           PERFORM 8010-READ-INPT-DATA\n           .\n\n       2000-CONSTRUCT-POLYMER.\n           COMPUTE POLY-LEN = POLY-PTR - 1\n           MOVE 1 TO POLY-PTR\n           MOVE SPACES TO POLYMER-NEW\n\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL POLY-IDX > POLY-LEN\n           OR POLYMER(POLY-IDX:1) = SPACE\n             EVALUATE TRUE\n               WHEN POLYMER(POLY-IDX + 1:1) = SPACE\n                    STRING\n                        POLYMER(POLY-IDX:1)\n                      INTO POLYMER-NEW\n                      POINTER POLY-PTR\n                    END-STRING\n               WHEN OTHER\n                    PERFORM 2010-SEARCH-RULES\n                    STRING\n                        POLYMER(POLY-IDX:1)\n                        LMNT(RULE-IDX)\n                      INTO POLYMER-NEW\n                      POINTER POLY-PTR\n                    END-STRING\n             END-EVALUATE\n           END-PERFORM\n\n           IF POLY-PTR > LENGTH(POLYMER-NEW) - 100\n               DISPLAY MYNAME ' POLY-PTR = ' POLY-PTR\n               GOBACK\n           END-IF\n\n           MOVE POLYMER-NEW TO POLYMER\n           .\n\n       2010-SEARCH-RULES.\n           SEARCH ALL RULE-TBL\n             WHEN PAIR(RULE-IDX) = POLYMER(POLY-IDX:2) CONTINUE\n           END-SEARCH\n           .\n\n       3000-COUNT-ELEMENTS.\n           COMPUTE POLY-LEN = POLY-PTR\n           MOVE POLY-TBL(1) TO HOLD-LMNT\n           IF NB-STEPS < 5\n               DISPLAY MYNAME ' POLY-LEN ' POLY-LEN\n               DISPLAY MYNAME ' POLYMER-R ' POLYMER-R(1:POLY-LEN)\n           END-IF\n\n           PERFORM VARYING POLY-IDX FROM 1 BY 1\n           UNTIL POLY-IDX > POLY-LEN\n             IF POLY-TBL(POLY-IDX) NOT = HOLD-LMNT\n                 MOVE POLY-TBL(POLY-IDX) TO HOLD-LMNT\n                 IF LMNT-COUNT < LMNT-MIN\n                     MOVE LMNT-COUNT TO LMNT-MIN\n                 END-IF\n                 IF LMNT-COUNT > LMNT-MAX\n                     MOVE LMNT-COUNT TO LMNT-MAX\n                 END-IF\n                 MOVE 0 TO LMNT-COUNT\n             END-IF\n             ADD 1 TO LMNT-COUNT\n           END-PERFORM\n\n           SUBTRACT LMNT-MIN FROM LMNT-MAX GIVING LMNT-DIF\n           .\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n           END-READ\n\n           .\n\n\n       END PROGRAM cs14a.\n\n\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "CALCULATE 10                                                                    \nSIMULATE 25                                                                     \nPROCESS 5                                                                       \nANALYZE 15                                                                      \nCOMPUTE 8                                                                       \nVALIDATE 12                                                                     \nEXECUTE 20"
  }
}