{
  "cobol_file": {
    "file_name": "successful_snippet_e0b36ffa.cob",
    "content": "IDENTIFICATION DIVISION.\nPROGRAM-ID. Cipher.\nENVIRONMENT DIVISION.\nDATA DIVISION.\n \n*> Define all Global Variables\nWORKING-STORAGE SECTION.\n       01 str PIC x(3).\n       01 og PIC x(3).\n       01 encrypted PIC x(3).\n       01 offset PIC 99.\n       01 Counter PIC 99. \n       01 i PIC 9(3).\n       01 c PIC x(1).\n\n*> Have no idea what im diving but the manuel says to do it \nPROCEDURE DIVISION.\n*> Subprogram (Basically my MAIN)\nBegin.\n       *> Assign the original values and default key\n       SET str TO \"HAL\";\n       SET og TO str;\n       SET offset TO 3;\n       \n       *> For comparison     \n       DISPLAY FUNCTION CONCATENATE(\"Original ------> \" str)\n       *> Run Encrypt on the defualt\n       PERFORM Encrypt.\n       SET encrypted TO str;\n       *> Using the encrypted version, decrypt\n       PERFORM Decrypt.\n\n       *> To solve run through the subprogram 26 times    \n       SET Counter TO 0;\n       SET offset TO 0;\n       DISPLAY \"Solve:\"\n       PERFORM Solve UNTIL Counter = 26.\n\n       STOP RUN.\n\t\t\t\nEncrypt.\n       MOVE Function Upper-case(og) to og\n       *> If the offset is 26, cycle back to 0    \n       IF offset >= 26\n           MOVE FUNCTION MOD(offset, 26) to offset\n       END-IF\n       *> This is basically a For loop I had to read the manual to find this....    \n       PERFORM VARYING i FROM 1 BY 1 UNTIL i > FUNCTION LENGTH(og)\n        *>    Get rid of extra spaces\n           IF og(i:1) IS NOT EQUAL TO SPACE\n            *>  For each char in OG(original) Add the offset\n               MOVE og (i:1) to c\n               IF (FUNCTION ORD(c) + offset) <= FUNCTION ORD(\"Z\")\n                   MOVE FUNCTION CHAR(FUNCTION ORD(c) + offset) to str (i:1)\n               ELSE\n                   MOVE FUNCTION CHAR(FUNCTION ORD(\"A\") \n                   + ((FUNCTION ORD(c) + offset) - 1) - FUNCTION ORD(\"Z\")) to str (i:1)\n\t\t       END-IF\n\t\t    END-IF\n\t\tEND-PERFORM\n         *> Show the User the diff\n        DISPLAY FUNCTION CONCATENATE(\"Encrypted \" og \" -> \" str \" with Key:\" offset).\n     \nDecrypt.\n       MOVE Function Upper-case(str) to str\n       \n       IF offset >= 26\n           MOVE FUNCTION MOD(offset, 26) to offset\n       END-IF\n\t\t\n\t   PERFORM VARYING i FROM 1 BY 1 UNTIL i > FUNCTION LENGTH(str)\n\t      IF str(i:1) IS NOT EQUAL TO SPACE\n\t\t    MOVE str (i:1) to c\n\t\t\tIF (FUNCTION ORD(c) - offset) >= FUNCTION ORD(\"A\")\n\t\t\t\tMOVE FUNCTION CHAR(FUNCTION ORD(c) - offset) to str (i:1)\n\t\t\tELSE\n\t\t\t\tMOVE FUNCTION CHAR(FUNCTION ORD(\"Z\") \n\t\t\t\t- ((offset - 1) - (FUNCTION ORD(c) - FUNCTION ORD(\"A\")))) to str (i:1)\n\t\t\tEND-IF\n\t      END-IF\n\t   END-PERFORM\n\t   DISPLAY FUNCTION CONCATENATE(\"Decrypted \" encrypted \" -> \" str \" with Key:\" offset).\n       \nSolve.\n       ADD 1 TO Counter;\n       ADD 1 TO offset;\n       PERFORM Encrypt.\n       STOP RUN."
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}