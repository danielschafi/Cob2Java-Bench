{
  "cobol_file": {
    "file_name": "successful_snippet_081dc240.cob",
    "content": "       ID Division.\n      * \n      * Copyright (C) 2021 Craig Schneiderwent.  All rights reserved.\n      * \n      * I accept no liability for damages of any kind resulting \n      * from the use of this software.  Use at your own risk.\n      *\n      * This software may be modified and distributed under the terms\n      * of the MIT license. See the LICENSE file for details.\n      *\n      *\n       Program-ID. cs01a.\n       Environment Division.\n       Input-Output Section.\n       File-Control.\n           Select INPT-DATA            Assign Keyboard.\n       Data Division.\n       File Section.\n       FD  INPT-DATA.\n       01  INPT-DATA-REC-MAX PIC X(008).\n\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME             PIC X(008) VALUE 'cs01a'.\n\n       01  WORK-AREAS.\n           05  WS-COUNT           PIC 9(008) COMP    VALUE 0.\n           05  WS-REC-COUNT       PIC 9(008) COMP    VALUE 0.\n           05  DEPTH-LEN          PIC 9(008) COMP    VALUE 0.\n           05  HOLD-DEPTH         PIC 9(008)         VALUE 0.\n           05  CURR-DEPTH         PIC 9(008)         VALUE 0.\n\n       01  WS-INPT-DATA.\n           05  WS-INPT-DEPTH      PIC X(008)         VALUE SPACES.\n           05  WS-INPT-DEPTH-R\n               REDEFINES\n               WS-INPT-DEPTH.\n               10                 PIC X(003).\n               10  WS-INPT-BYTE-4 PIC X(001).\n               10                 PIC X(004).\n\n       01  SWITCHES.\n           05  INPT-DATA-EOF-SW   PIC X(001)         VALUE 'N'.\n               88  INPT-DATA-EOF                     VALUE 'Y'.\n\n       Procedure Division.\n\n           OPEN INPUT INPT-DATA\n\n           PERFORM 8010-READ-INPT-DATA\n           MOVE CURR-DEPTH TO HOLD-DEPTH\n\n           PERFORM UNTIL INPT-DATA-EOF\n             IF CURR-DEPTH > HOLD-DEPTH\n                 ADD 1 TO WS-COUNT\n             END-IF\n             MOVE CURR-DEPTH TO HOLD-DEPTH\n             PERFORM 8010-READ-INPT-DATA\n           END-PERFORM\n\n           CLOSE INPT-DATA\n\n           DISPLAY\n            MYNAME\n            ' measurements larger than the previous measurement '\n             WS-COUNT\n\n           DISPLAY MYNAME ' records read ' WS-REC-COUNT\n           GOBACK.\n\n       8010-READ-INPT-DATA.\n           INITIALIZE WS-INPT-DATA\n           READ INPT-DATA INTO WS-INPT-DATA\n             AT END SET INPT-DATA-EOF TO TRUE\n             NOT AT END\n               ADD 1 TO WS-REC-COUNT\n               IF WS-INPT-BYTE-4 NUMERIC\n                   MOVE 4 TO DEPTH-LEN\n               ELSE\n                   MOVE 3 TO DEPTH-LEN\n               END-IF\n               MOVE FUNCTION NUMVAL(WS-INPT-DEPTH(1:DEPTH-LEN))\n                 TO CURR-DEPTH\n           END-READ\n\n           .\n\n\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "I cannot generate valid SYSIN data for this COBOL program because:\n\n1. No ACCEPT statements were detected in the program\n2. No record structure definition was found\n3. No field definitions are available to determine the required format\n4. No termination condition is specified\n\nWithout these critical elements, I cannot determine:\n- What data format is expected\n- What field lengths are required\n- How many fields per record\n- What constitutes a valid termination record\n\nTo generate proper SYSIN data, I would need the actual COBOL code showing:\n- ACCEPT statements with their associated field names\n- Working-Storage section with field definitions (PIC clauses)\n- Loop termination logic"
  }
}