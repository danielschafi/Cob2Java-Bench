{
  "cobol_file": {
    "file_name": "successful_snippet_eac62f88.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CSV.\n       AUTHOR.  Bill Gunshannon.\n       INSTALLATION.  Home.\n       DATE-WRITTEN.  19 December 2021.\n      ************************************************************\n      ** Program Abstract:\n      **   CSVs are something COBOL does pretty well.\n      **     The commented out CONCATENATE statements are a\n      **     second method other than the STRING method.\n      ************************************************************\n       \n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n           REPOSITORY.\n           FUNCTION ALL INTRINSIC.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n            SELECT CSV-File ASSIGN TO \"csv.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n            SELECT Out-File ASSIGN TO \"new.csv.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n       \n       \n       DATA DIVISION.\n       \n       FILE SECTION.\n       \n       FD  CSV-File \n           DATA RECORD IS CSV-Record.\n       01  CSV-Record.\n           05 Field1                  PIC X(64).\n       \n       FD  Out-File\n           DATA RECORD IS Out-Line.\n       01  Out-Line   PIC X(80).\n       \n       WORKING-STORAGE SECTION.\n       \n       01 Eof                   PIC X     VALUE 'F'.\n       \n       01  CSV-Data.\n           05  CSV-Col1             PIC 9(5).\n           05  CSV-Col2             PIC 9(5).\n           05  CSV-Col3             PIC 9(5).\n           05  CSV-Col4             PIC 9(5).\n           05  CSV-Col5             PIC 9(5).\n\n        01  CSV-Sum                  PIC ZZZ9.\n        01  CSV-Sum-Alpha           \n                REDEFINES     CSV-Sum  PIC X(4).\n       \n       PROCEDURE DIVISION.\n       \n       Main-Program.\n           OPEN INPUT  CSV-File\n           OPEN OUTPUT Out-File\n           PERFORM Read-a-Record\n           PERFORM Build-Header\n           PERFORM UNTIL Eof = 'T'\n              PERFORM Read-a-Record\n              IF Eof NOT EQUAL 'T' PERFORM Process-a-Record\n           END-PERFORM\n           CLOSE CSV-File\n           CLOSE Out-File\n           STOP RUN.\n       \n       Read-a-Record.\n           READ CSV-File \n              AT END MOVE 'T' TO Eof\n           END-READ.\n\n        Build-Header.\n      **    MOVE CONCATENATE(TRIM(CSV-Record), \",SUM\"\n      **        TO Out-Line.\n            STRING TRIM(CSV-Record), \",SUM\" INTO Out-Line.\n            WRITE Out-Line.\n            MOVE SPACES TO Out-Line.\n\n        Process-a-Record.\n            UNSTRING CSV-Record DELIMITED BY ',' INTO\n                  CSV-Col1 CSV-Col2 CSV-Col3 CSV-Col4 CSV-Col5.\n            COMPUTE CSV-Sum = \n                  CSV-Col1 + CSV-Col2 + CSV-Col3 + CSV-Col4 + CSV-Col5.\n      **    MOVE CONCATENATE(TRIM(CSV-Record), \",\" TRIM(CSV-Sum-Alpha))\n      **        TO Out-Line.\n            STRING TRIM(CSV-Record), \",\" TRIM(CSV-Sum-Alpha)\n                   INTO Out-Line.\n            WRITE Out-Line.\n            MOVE SPACES TO Out-Line.\n       \n       END-PROGRAM.\n"
  },
  "input_files": [
    {
      "file_name": "csv.txt",
      "content": "12345,23456,34567,45678,56789\n98765,87654,76543,65432,54321\n11111,22222,33333,44444,55555\n50000,60000,70000,80000,90000\n10203,20304,30405,40506,50607\n99999,88888,77777,66666,55555\n12000,15000,18000,21000,24000\n45000,45100,45200,45300,45400\n00100,00200,00300,00400,00500\n67890,78901,89012,90123,01234"
    }
  ],
  "output_files": [
    "new.csv.txt"
  ],
  "input_output_files": [],
  "sysin_file": null
}