{
  "cobol_file": {
    "file_name": "successful_snippet_2df10dc8.cob",
    "content": "       \n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ethiopian-multiplication.\n       DATA DIVISION.\n       LOCAL-STORAGE SECTION.\n       01  l                  PICTURE 9(10) VALUE 17.\n       01  r                  PICTURE 9(10) VALUE 34.\n       01  ethiopian-multiply PICTURE 9(20).\n       01  product            PICTURE 9(20).\n       PROCEDURE DIVISION.\n         CALL \"ethiopian-multiply\" USING\n           BY CONTENT l, BY CONTENT r,\n           BY REFERENCE ethiopian-multiply\n         END-CALL\n         DISPLAY ethiopian-multiply END-DISPLAY\n         MULTIPLY l BY r GIVING product END-MULTIPLY\n         DISPLAY product END-DISPLAY\n         STOP RUN.\n       END PROGRAM ethiopian-multiplication.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ethiopian-multiply.\n       DATA DIVISION.\n       LOCAL-STORAGE SECTION.\n       01  evenp   PICTURE 9.\n         88 even   VALUE 1.\n         88 odd    VALUE 0.\n       LINKAGE SECTION.\n       01  l       PICTURE 9(10).\n       01  r       PICTURE 9(10).\n       01  product PICTURE 9(20) VALUE ZERO.\n       PROCEDURE DIVISION using l, r, product.\n         MOVE ZEROES TO product\n         PERFORM UNTIL l EQUAL ZERO\n           CALL \"evenp\" USING\n             BY CONTENT l,\n             BY REFERENCE evenp\n           END-CALL\n           IF odd\n             ADD r TO product GIVING product END-ADD\n           END-IF\n           CALL \"halve\" USING\n             BY CONTENT l,\n             BY REFERENCE l\n           END-CALL\n           CALL \"twice\" USING\n             BY CONTENT r,\n             BY REFERENCE r\n           END-CALL\n         END-PERFORM\n         GOBACK.\n       END PROGRAM ethiopian-multiply.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. halve.\n       DATA DIVISION.\n       LOCAL-STORAGE SECTION.\n       LINKAGE SECTION.\n       01  n   PICTURE 9(10).\n       01  m   PICTURE 9(10).\n       PROCEDURE DIVISION USING n, m.\n         DIVIDE n BY 2 GIVING m END-DIVIDE\n         GOBACK.\n       END PROGRAM halve.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. twice.\n       DATA DIVISION.\n       LOCAL-STORAGE SECTION.\n       LINKAGE SECTION.\n       01  n   PICTURE 9(10).\n       01  m   PICTURE 9(10).\n       PROCEDURE DIVISION USING n, m.\n         MULTIPLY n by 2 GIVING m END-MULTIPLY\n         GOBACK.\n       END PROGRAM twice.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. evenp.\n       DATA DIVISION.\n       LOCAL-STORAGE SECTION.\n       01  q   PICTURE 9(10).\n       LINKAGE SECTION.\n       01  n   PICTURE 9(10).\n       01  m   PICTURE 9(1).\n         88 even   VALUE 1.\n         88 odd    VALUE 0.\n       PROCEDURE DIVISION USING n, m.\n         DIVIDE n BY 2 GIVING q REMAINDER m END-DIVIDE\n         SUBTRACT m FROM 1 GIVING m END-SUBTRACT\n         GOBACK.\n       END PROGRAM evenp.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}