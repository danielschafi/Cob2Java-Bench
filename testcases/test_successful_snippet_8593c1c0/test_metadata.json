{
  "cobol_file": {
    "file_name": "successful_snippet_8593c1c0.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADDITIVE-PRIMES.\n       \n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01 VARIABLES.\n          03 MAXIMUM            PIC 999.\n          03 AMOUNT             PIC 999.\n          03 CANDIDATE          PIC 999.\n          03 DIGIT              PIC 9 OCCURS 3 TIMES, \n                                REDEFINES CANDIDATE.\n          03 DIGITSUM           PIC 99.\n          \n       01 PRIME-DATA.\n          03 COMPOSITE-FLAG     PIC X OCCURS 500 TIMES.\n             88 PRIME           VALUE ' '.\n          03 SIEVE-PRIME        PIC 999.\n          03 SIEVE-COMP-START   PIC 999.\n          03 SIEVE-COMP         PIC 999.\n          03 SIEVE-MAX          PIC 999.\n       \n       01 OUT-FMT.\n          03 NUM-FMT            PIC ZZZ9.\n          03 OUT-LINE           PIC X(40).\n          03 OUT-PTR            PIC 99.\n          \n       PROCEDURE DIVISION.\n       BEGIN.\n           MOVE 500 TO MAXIMUM.\n           MOVE 1 TO OUT-PTR.\n           PERFORM SIEVE.\n           MOVE ZERO TO AMOUNT.\n           PERFORM TEST-NUMBER \n               VARYING CANDIDATE FROM 2 BY 1\n               UNTIL CANDIDATE IS GREATER THAN MAXIMUM.\n           DISPLAY OUT-LINE.\n           DISPLAY SPACES.\n           MOVE AMOUNT TO NUM-FMT.\n           DISPLAY 'Amount of additive primes found: ' NUM-FMT.\n           STOP RUN.\n\n       TEST-NUMBER.\n           ADD DIGIT(1), DIGIT(2), DIGIT(3) GIVING DIGITSUM.\n           IF PRIME(CANDIDATE) AND PRIME(DIGITSUM),\n               ADD 1 TO AMOUNT,\n               PERFORM WRITE-NUMBER.\n       \n       WRITE-NUMBER.\n           MOVE CANDIDATE TO NUM-FMT.\n           STRING NUM-FMT DELIMITED BY SIZE INTO OUT-LINE \n               WITH POINTER OUT-PTR.\n           IF OUT-PTR IS GREATER THAN 40,\n               DISPLAY OUT-LINE,\n               MOVE SPACES TO OUT-LINE,\n               MOVE 1 TO OUT-PTR.               \n       \n       SIEVE.\n           MOVE SPACES TO PRIME-DATA.\n           DIVIDE MAXIMUM BY 2 GIVING SIEVE-MAX.\n           PERFORM SIEVE-OUTER-LOOP\n               VARYING SIEVE-PRIME FROM 2 BY 1\n               UNTIL SIEVE-PRIME IS GREATER THAN SIEVE-MAX.\n          \n       SIEVE-OUTER-LOOP.\n           IF PRIME(SIEVE-PRIME),\n               MULTIPLY SIEVE-PRIME BY 2 GIVING SIEVE-COMP-START,\n               PERFORM SIEVE-INNER-LOOP\n                   VARYING SIEVE-COMP \n                       FROM SIEVE-COMP-START BY SIEVE-PRIME\n                   UNTIL SIEVE-COMP IS GREATER THAN MAXIMUM.\n       \n       SIEVE-INNER-LOOP.\n           MOVE 'X' TO COMPOSITE-FLAG(SIEVE-COMP).\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}