{
  "cobol_file": {
    "file_name": "successful_snippet_4e469c93.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. monty-hall.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       78  Num-Games               VALUE 1000000.\n\n       *> These are needed so the values are passed to\n       *> get-rand-int correctly.\n       01  One                     PIC 9 VALUE 1.\n       01  Three                   PIC 9 VALUE 3.\n\n       01  doors-area.\n           03  doors               PIC 9 OCCURS 3 TIMES.\n\n       01  choice                  PIC 9.\n       01  shown                   PIC 9.\n       01  winner                  PIC 9.\n\n       01  switch-wins             PIC 9(7).\n       01  stay-wins               PIC 9(7).\n\n       01  stay-wins-percent       PIC Z9.99.\n       01  switch-wins-percent     PIC Z9.99.\n\n       PROCEDURE DIVISION.\n           PERFORM Num-Games TIMES\n               MOVE 0 TO doors (winner)\n\n               CALL \"get-rand-int\" USING CONTENT One, Three,\n                   REFERENCE winner\n               MOVE 1 TO doors (winner)\n\n               CALL \"get-rand-int\" USING CONTENT One, Three,\n                   REFERENCE choice\n\n               PERFORM WITH TEST AFTER\n                       UNTIL NOT(shown = winner OR choice)\n                   CALL \"get-rand-int\" USING CONTENT One, Three,\n                       REFERENCE shown\n               END-PERFORM\n\n               ADD doors (choice) TO stay-wins\n               ADD doors (6 - choice - shown) TO switch-wins\n           END-PERFORM\n\n           COMPUTE stay-wins-percent ROUNDED =\n               stay-wins / Num-Games * 100\n           COMPUTE switch-wins-percent ROUNDED =\n               switch-wins / Num-Games * 100\n\n           DISPLAY \"Staying wins   \" stay-wins \" times (\"\n               stay-wins-percent \"%).\"\n           DISPLAY \"Switching wins \" switch-wins \" times (\"\n               switch-wins-percent \"%).\"\n           .\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. get-rand-int.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  call-flag               PIC X VALUE \"Y\".\n           88  first-call          VALUE \"Y\", FALSE \"N\".\n\n       01  num-range               PIC 9.\n\n       LINKAGE SECTION.\n       01  min-num                 PIC 9.\n       01  max-num                 PIC 9.\n\n       01  ret                     PIC 9.\n\n       PROCEDURE DIVISION USING min-num, max-num, ret.\n           *> Seed RANDOM once.\n           IF first-call\n               MOVE FUNCTION RANDOM(FUNCTION CURRENT-DATE (9:8))\n                   TO num-range\n               SET first-call TO FALSE\n           END-IF\n\n           COMPUTE num-range = max-num - min-num + 1\n           COMPUTE ret =\n              FUNCTION MOD(FUNCTION RANDOM * 100000, num-range)\n              + min-num\n           .\n       END PROGRAM get-rand-int.\n\n       END PROGRAM monty-hall.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}