{
  "cobol_file": {
    "file_name": "successful_snippet_7060ae61.cob",
    "content": "      * CSCI3180 Principles of Programming Languages\n      * --- Declaration ---\n      * I declare that the assignment here submitted \n      * is original except for source material explicitly\n      * acknowledged. I also acknowledge that I am aware of\n      * University policy and regulations on honesty in \n      * academic work, and of the disciplinary guidelines\n      * and procedures applicable to breaches of such policy\n      * and regulations, as contained in the website\n      * http://www.cuhk.edu.hk/policy/academichonesty/\n      * Assignment 1\n      * Name: \n      * Student ID: \n      * Email Addr: \n      \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DDA.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INPUT-FILE\n               ASSIGN TO DISK\n               ORGANIZATION IS LINE SEQUENTIAL.\n           SELECT OUTPUT-FILE\n               ASSIGN TO DISK\n               ORGANIZATION IS LINE SEQUENTIAL.\n      \n       DATA DIVISION.\n       FILE SECTION.\n       FD  INPUT-FILE\n           LABEL RECORDS ARE STANDARD\n            VALUE OF FILE-ID IS \"input.txt\".\n       01  FILE-DATA-POINT.\n           05  FILE-X     PIC XX.\n           05  FILE-S     PIC X.\n           05  FILE-Y     PIC XX.\n       \n       FD  OUTPUT-FILE\n           LABEL RECORDS ARE STANDARD\n            VALUE OF FILE-ID IS \"output.txt\".\n       01  OUTPUT-GRAPH.\n           05 OUTPUT-LINE PIC X(79).\n      \n       WORKING-STORAGE SECTION.\n       01  DATA-POINT.\n           05  X1     PIC 99.\n           05  Y1     PIC 99.\n           05  X2     PIC 99.\n           05  Y2     PIC 99.\n       01  END-OF-FILE            PIC X VALUE \"N\".\n       01  LINES-COUNT       PIC 99.\n       01  A       PIC 9999.\n       01  B       PIC 9999.\n       01  C       PIC 9999.\n       01  D       PIC 9999.\n       01  I       PIC 9999.\n       01  J       PIC 9999.\n       01  K       PIC 9999.\n       01  X       PIC 9999.\n       01  Y       PIC 9999.\n       01  M       PIC S9999V9999.\n       01  M-DISPLAY PIC -9999.9999.\n       01  GRAPH-2D.\n           05 GRAPH-LINE OCCURS 23 TIMES INDEXED BY GRAPH-X-INDEX.\n              10 GRAPH OCCURS 79 TIMES INDEXED BY GRAPH-Y-INDEX.\n                 15 GRAPH-P PIC X.\n       \n       PROCEDURE DIVISION.\n       MAIN-LOGIC SECTION.\n       \n      * GRAPH is the working storage\n      * This program \"draws\" directly on this variable\n      * This program runs in this order\n      * Init\n      * Draw Graph Axis\n      * Load lines from file\n      *  - read each line\n      *  - draw the line\n      * Display the graph\n      * Save the graph to file\n      \n       PROGRAM-BEGIN.\n           GO TO INIT.\n           \n       PROGRAM-DONE.\n           STOP RUN.\n       \n       INIT.\n           MOVE \" \" TO GRAPH-2D.\n           GO TO DRAW-AXIS.\n       \n       DRAW-AXIS.\n           MOVE \"+\" TO GRAPH(1 1).\n           MOVE 2 TO I.\n           GO TO DRAW-AXIS-X.\n       DRAW-AXIS-X.\n           MOVE \"-\" TO GRAPH(1 I).\n           COMPUTE I = I + 1.\n           IF I < 80\n               GO TO DRAW-AXIS-X.\n           MOVE 2 TO I.\n           GO TO DRAW-AXIS-Y.\n       DRAW-AXIS-Y.\n           MOVE \"|\" TO GRAPH(I 1).\n           COMPUTE I = I + 1.\n           IF I < 24\n               GO TO DRAW-AXIS-Y.\n           GO TO LOAD-LINES.\n       \n      * Load total number of lines\n       LOAD-LINES.\n           OPEN INPUT INPUT-FILE.\n           READ INPUT-FILE.\n           INSPECT FILE-X REPLACING ALL ' ' BY '0'.\n           MOVE FILE-X TO LINES-COUNT.\n           MOVE 0 TO I.\n           MOVE 0 TO X2.\n           MOVE 0 TO Y2.\n           GO TO READ-LINES.\n           \n      * Load each lines from file\n       READ-LINES.\n           MOVE X2 TO X1.\n           MOVE Y2 TO Y1.\n           READ INPUT-FILE NEXT RECORD\n               AT END\n               MOVE \"Y\" TO END-OF-FILE.\n           INSPECT FILE-X REPLACING ALL ' ' BY '0'.\n           INSPECT FILE-Y REPLACING ALL ' ' BY '0'.\n           MOVE FILE-X TO X2.\n           MOVE FILE-Y TO Y2.\n           COMPUTE I = I + 1.\n           IF I EQUAL 1\n               GO TO READ-LINES.\n           IF I NOT GREATER THAN LINES-COUNT\n               GO TO DRAW-LINE.\n           IF I > LINES-COUNT\n               CLOSE INPUT-FILE\n               GO TO DISPLAY-GRAPH.\n               \n       DRAW-LINE.\n           COMPUTE M = (Y2 - Y1) / (X2 - X1).\n           MOVE M TO M-DISPLAY.\n           IF M NOT GREATER THAN 1 AND M NOT LESS THAN -1\n               GO TO DRAW-GENTLE-LINE.\n           GO TO DRAW-STEEP-LINE.\n       \n      * Case 1\n       DRAW-GENTLE-LINE.\n           MOVE 0 TO J.\n           MOVE X1 TO A.\n           MOVE Y1 TO B.\n           MOVE X2 TO C.\n           MOVE Y2 TO D.\n           MOVE X2 TO X.\n           MOVE Y2 TO Y.\n           IF X2 > X1\n               MOVE X2 TO A\n               MOVE Y2 TO B\n               MOVE X1 TO C\n               MOVE Y1 TO D\n               MOVE X1 TO X\n               MOVE Y1 TO Y.\n           GO TO DRAW-GENTLE-LINE-LOOP.\n   \n       DRAW-GENTLE-LINE-LOOP.\n           IF X < A\n               COMPUTE X = C + J\n               ADD D M GIVING Y ROUNDED\n               COMPUTE Y ROUNDED = D + (J * M)\n               COMPUTE X = X + 1\n               COMPUTE Y = Y + 1\n               MOVE \"*\" TO GRAPH(Y X)\n               COMPUTE X = X - 1\n               COMPUTE Y = Y - 1\n               COMPUTE J = J + 1\n               GO TO DRAW-GENTLE-LINE-LOOP.\n           GO TO READ-LINES.\n       \n      * Case 2\n       DRAW-STEEP-LINE.\n           MOVE 0 TO J.\n           MOVE X1 TO A.\n           MOVE Y1 TO B.\n           MOVE X2 TO C.\n           MOVE Y2 TO D.\n           MOVE X2 TO X.\n           MOVE Y2 TO Y.\n           IF Y2 > Y1\n               MOVE X2 TO A\n               MOVE Y2 TO B\n               MOVE X1 TO C\n               MOVE Y1 TO D\n               MOVE X1 TO X\n               MOVE Y1 TO Y.\n           GO TO DRAW-STEEP-LINE-LOOP.\n       \n       DRAW-STEEP-LINE-LOOP.\n           IF Y < B\n               COMPUTE Y = D + J\n               ADD C M GIVING X ROUNDED\n               COMPUTE X ROUNDED = C + (J / M)\n               COMPUTE X = X + 1\n               COMPUTE Y = Y + 1\n               MOVE \"*\" TO GRAPH(Y X)\n               COMPUTE X = X - 1\n               COMPUTE Y = Y - 1\n               COMPUTE J = J + 1\n               GO TO DRAW-STEEP-LINE-LOOP.\n           GO TO READ-LINES.\n           \n       DISPLAY-GRAPH.\n           MOVE 23 TO I.\n           GO TO DISPLAY-GRAPH-LOOP.\n       DISPLAY-GRAPH-LOOP.\n           DISPLAY GRAPH-LINE(I).\n           COMPUTE I = I - 1.\n           IF I > 0\n               GO TO DISPLAY-GRAPH-LOOP.\n           GO TO SAVE-GRAPH.  \n           \n       SAVE-GRAPH.\n           OPEN OUTPUT OUTPUT-FILE.\n           MOVE 23 TO I.\n           GO TO SAVE-GRAPH-LOOP.\n       SAVE-GRAPH-LOOP.\n           MOVE GRAPH-LINE(I) TO OUTPUT-LINE.\n           WRITE OUTPUT-GRAPH.\n           COMPUTE I = I - 1.\n           IF I > 0\n               GO TO SAVE-GRAPH-LOOP.\n           CLOSE OUTPUT-FILE.\n           GO TO PROGRAM-DONE.\n           "
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}