{
  "cobol_file": {
    "file_name": "successful_snippet_5b43c10b.cob",
    "content": "        >>SOURCE FORMAT FREE\n\n\nidentification division.\nprogram-id. beadsort.\nenvironment division.\nconfiguration section.\nrepository. function all intrinsic.\ndata division.\nworking-storage section.\n01  filler.\n    03  row occurs 9 pic x(9).\n    03  r pic 99.\n    03  r1 pic 99.\n    03  r2 pic 99.\n    03  pole pic 99.\n    03  a-lim pic 99 value 9.\n    03  a pic 99.\n    03  array occurs 9 pic 9.\n01  NL pic x value x'0A'.\nprocedure division.\nstart-beadsort.\n\n    \n    compute a = random(seconds-past-midnight)\n    perform varying a from 1 by 1 until a > a-lim\n        compute array(a) = random() * 10\n    end-perform\n\n    perform display-array\n    display space 'initial array'\n\n    \n    perform varying r from 1 by 1 until r > a-lim\n        move all '.' to row(r)\n        perform varying pole from 1 by 1 until pole > array(r)\n            move 'o' to row(r)(pole:1)\n        end-perform\n    end-perform\n    display NL 'initial beads'\n    perform display-beads\n\n    \n    perform varying pole from 1 by 1 until pole > a-lim\n        move a-lim to r2\n        perform find-opening\n        compute r1 = r2 - 1\n        perform find-bead\n        perform until r1 = 0 \n            \n            move '.' to row(r1)(pole:1)\n            move 'o' to row(r2)(pole:1)\n            \n            compute r2 = r2 - 1\n            perform find-opening\n            compute r1 = r2 - 1\n            perform find-bead\n        end-perform\n    end-perform\n    display NL 'dropped beads'\n    perform display-beads\n\n    \n    perform varying r from 1 by 1 until r > a-lim\n        move 0 to array(r)\n        inspect row(r) tallying array(r)\n            for all 'o' before initial '.'\n    end-perform\n\n    perform display-array\n    display space 'sorted array'\n\n    stop run\n    .\nfind-opening.\n    perform varying r2 from r2 by -1\n    until r2 = 1 or row(r2)(pole:1) = '.'\n        continue\n    end-perform\n    .\nfind-bead.\n    perform varying r1 from r1 by -1\n    until r1 = 0 or row(r1)(pole:1) = 'o'\n        continue\n    end-perform\n    .\ndisplay-array.\n    display space\n    perform varying a from 1 by 1 until a > a-lim\n        display space array(a) with no advancing\n    end-perform\n    .\ndisplay-beads.\n    perform varying r from 1 by 1 until r > a-lim\n        display row(r)\n    end-perform\n    .\nend program beadsort.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}