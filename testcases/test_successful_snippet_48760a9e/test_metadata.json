{
  "cobol_file": {
    "file_name": "successful_snippet_48760a9e.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AOC-2021-14-2.\n       AUTHOR. ANNA KOSIERADZKA.\n\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INPUTFILE ASSIGN TO \"d14.input\"\n           ORGANIZATION IS LINE SEQUENTIAL.\n\n       DATA DIVISION.\n\n       FILE SECTION.\n         FD INPUTFILE\n         RECORD IS VARYING IN SIZE FROM 1 to 20\n         DEPENDING ON REC-LEN.\n         01 INPUTRECORD PIC X(20).\n\n       WORKING-STORAGE SECTION.\n         01 FILE-STATUS PIC 9 VALUE 0.\n         01 REC-LEN PIC 9(2) COMP.\n         01 WS-ARR PIC X OCCURS 20 TIMES.\n         01 WS-PAIRS OCCURS 100 TIMES.\n           05 WS-PAIR-1 PIC X.\n           05 WS-PAIR-2 PIC X.\n           05 WS-SUB PIC X.\n           05 WS-COUNT PIC 9(16) VALUE 0.\n           05 WS-CREATED PIC 9(16) VALUE 0.\n           05 WS-BROKEN PIC 9(16) VALUE 0.\n         01 WS-LETTERS PIC 9(16) VALUE 0 OCCURS 26 TIMES.\n\n         77 I PIC 9(16) VALUE 1.\n         77 J PIC 9(16) VALUE 1.\n         77 K PIC 9(16) VALUE 1.\n         77 N PIC 9(16) VALUE 1.\n         77 M PIC 9(16) VALUE 1. \n         77 N-MAX PIC 9(16) VALUE 0. \n         77 N-MIN PIC 9(16) VALUE 0.\n         77 RESULT PIC 9(16) VALUE 0.\n\n       PROCEDURE DIVISION.\n       001-MAIN.\n           OPEN INPUT INPUTFILE. \n           PERFORM 002-READ UNTIL FILE-STATUS = 1.\n           CLOSE INPUTFILE.\n           COMPUTE M = J - 1.\n           PERFORM 006-INIT-COUNTS.\n           PERFORM 006-STEP 40 TIMES.\n           PERFORM 007-COUNT-LETTERS.\n           STOP RUN.\n\n       002-READ.\n            READ INPUTFILE\n                AT END MOVE 1 TO FILE-STATUS\n                NOT AT END PERFORM 003-PROCESS-RECORD\n            END-READ.\n\n       003-PROCESS-RECORD.\n           IF REC-LEN = 7 THEN\n              PERFORM 005-READ-PAIR\n           ELSE IF REC-LEN > 0 THEN\n              PERFORM 004-READ-TEMPLATE\n           END-IF.\n\n       004-READ-TEMPLATE.\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > REC-LEN\n             MOVE INPUTRECORD(I:1) TO WS-ARR(I)\n           END-PERFORM.\n           MOVE REC-LEN TO N.\n\n       005-READ-PAIR.\n           MOVE INPUTRECORD(1:1) TO WS-PAIR-1(J).\n           MOVE INPUTRECORD(2:1) TO WS-PAIR-2(J).\n           MOVE INPUTRECORD(7:1) TO WS-SUB(J).\n           ADD 1 TO J.\n\n       006-INIT-COUNTS.\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I >= N\n             PERFORM VARYING K FROM 1 BY 1 UNTIL K > M\n               IF WS-PAIR-1(K) = WS-ARR(I) AND\n               WS-PAIR-2(K) = WS-ARR(I + 1) THEN\n                 ADD 1 TO WS-COUNT(K)\n               END-IF\n             END-PERFORM\n           END-PERFORM.\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > N\n             COMPUTE J = FUNCTION ORD(WS-ARR(I)) - FUNCTION ORD('A') + 1\n             ADD 1 TO WS-LETTERS(J) \n           END-PERFORM.\n           \n       006-STEP.\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > M\n\n             ADD WS-COUNT(I) TO WS-BROKEN(I)\n             COMPUTE J = FUNCTION ORD(WS-SUB(I)) - FUNCTION ORD('A') + 1\n             ADD WS-COUNT(I) TO WS-LETTERS(J)\n\n             PERFORM VARYING K FROM 1 BY 1 UNTIL K > M\n               IF WS-PAIR-1(K) = WS-PAIR-1(I) AND\n               WS-PAIR-2(K) = WS-SUB(I) THEN\n                 ADD WS-COUNT(I) TO WS-CREATED(K)\n               END-IF\n               IF WS-PAIR-1(K) = WS-SUB(I) AND\n               WS-PAIR-2(K) = WS-PAIR-2(I) THEN\n                 ADD WS-COUNT(I) TO WS-CREATED(K)\n               END-IF\n             END-PERFORM\n           END-PERFORM.\n\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > M\n             COMPUTE WS-COUNT(I) = WS-COUNT(I) + WS-CREATED(I)\n             - WS-BROKEN(I)\n             MOVE 0 TO WS-CREATED(I)\n             MOVE 0 TO WS-BROKEN(I)\n           END-PERFORM.\n\n       007-COUNT-LETTERS.\n           MOVE WS-LETTERS(2) TO N-MIN\n           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 26\n             IF WS-LETTERS(I) > N-MAX THEN\n               MOVE WS-LETTERS(I) TO N-MAX\n             END-IF\n             IF WS-LETTERS(I) > 0 AND WS-LETTERS(I) < N-MIN THEN\n               MOVE WS-LETTERS(I) TO N-MIN\n             END-IF\n           END-PERFORM.\n\n           COMPUTE RESULT = N-MAX - N-MIN.\n           DISPLAY RESULT.\n"
  },
  "input_files": [
    {
      "file_name": "d14.input",
      "content": "NNCB\n\nCH -> B\nHH -> N\nCB -> H\nNH -> C\nHB -> C\nHC -> B\nHN -> C\nNN -> C\nBH -> H\nNC -> B\nNB -> B\nBN -> B\nBB -> N\nBC -> B\nCC -> N\nCN -> C"
    }
  ],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}