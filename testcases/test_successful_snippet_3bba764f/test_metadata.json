{
  "cobol_file": {
    "file_name": "successful_snippet_3bba764f.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WordFrequency.\n       AUTHOR.  Bill Gunshannon.\n       DATE-WRITTEN.  30 Jan 2020.\n      ************************************************************\n      ** Program Abstract:\n      **   Given a text file and an integer n, print the n most\n      **   common words in the file (and the number of their\n      **   occurrences) in decreasing frequency.\n      **\n      **   A file named Parameter.txt provides this information.\n      **   Format is:\n      **   12345678901234567890123456789012345678901234567890\n      **   |------------------|----|\n      **     ^^^^^^^^^^^^^^^^  ^^^^\n      **          |              |\n      **     Source Text File   Number of words with count\n      **       20 Characters      5 digits with leading zeroes\n      **\n      **\n      ************************************************************\n       \n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n            SELECT Parameter-File ASSIGN TO \"Parameter.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n            SELECT Input-File ASSIGN TO Source-Text\n                 ORGANIZATION IS LINE SEQUENTIAL.\n            SELECT Word-File ASSIGN TO \"Word.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n            SELECT Output-File ASSIGN TO \"Output.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n            SELECT Print-File ASSIGN TO \"Printer.txt\"\n                 ORGANIZATION IS LINE SEQUENTIAL.\n            SELECT Sort-File     ASSIGN TO DISK.\n       \n       DATA DIVISION.\n       \n       FILE SECTION.\n       \n       FD  Parameter-File\n           DATA RECORD IS Parameter-Record.\n       01  Parameter-Record.\n           05 Source-Text               PIC X(20).\n           05 How-Many                  PIC 99999.\n\n       FD  Input-File\n           DATA RECORD IS Input-Record.\n       01  Input-Record.\n           05 Input-Line                PIC X(80).\n\n       FD  Word-File\n           DATA RECORD IS Word-Record.\n       01  Word-Record.\n           05 Input-Word               PIC X(20).\n\n       FD  Output-File\n           DATA RECORD IS Output-Rec.\n       01  Output-Rec.\n           05  Output-Rec-Word         PIC X(20).\n           05  Output-Rec-Word-Cnt     PIC 9(5).\n\n       FD  Print-File\n           DATA RECORD IS Print-Rec.\n       01  Print-Rec.\n           05  Print-Rec-Word          PIC X(20).\n           05  Print-Rec-Word-Cnt      PIC 9(5).\n       \n       SD  Sort-File.\n       01  Sort-Rec.\n           05  Sort-Word               PIC X(20).\n           05  Sort-Word-Cnt           PIC 9(5).\n       \n       \n       WORKING-STORAGE SECTION.\n       \n       01 Eof                    PIC X     VALUE 'F'.\n       01 InLine                 PIC X(80).\n       01 Word1                  PIC X(20).\n       01 Current-Word           PIC X(20).\n       01 Current-Word-Cnt       PIC 9(5).\n       01 Pos                    PIC 99\n                 VALUE 1.\n       01 Cnt                    PIC 99.\n       01 Report-Rank.\n          05  IRank              PIC 99999\n                 VALUE 1.\n          05 Rank                PIC ZZZZ9.\n       \n       PROCEDURE DIVISION.\n       \n       Main-Program.\n      **\n      **  Read the Parameters\n      **\n         OPEN INPUT Parameter-File.\n         READ Parameter-File.\n         CLOSE Parameter-File.\n\n      **\n      **  Open Files for first stage\n      **\n         OPEN INPUT  Input-File.\n         OPEN OUTPUT  Word-File.\n\n      **\n      **  Pare\\se the Source Text into a file of invidual words\n      **\n         PERFORM UNTIL Eof = 'T'\n            READ Input-File \n               AT END MOVE 'T' TO Eof\n            END-READ\n\n         PERFORM Parse-a-Words\n\n         MOVE SPACES TO Input-Record\n         MOVE 1 TO Pos\n         END-PERFORM.\n     \n      **\n      **  Cleanup from the first stage\n      **\n         CLOSE Input-File Word-File\n\n      **\n      **  Sort the individual words in alphabetical order\n      **\n         SORT Sort-File\n              ON ASCENDING KEY Sort-Word\n              USING Word-File\n              GIVING Word-File.\n\n      **\n      **  Count each time a word is used\n      **\n         PERFORM Collect-Totals.\n\n      **\n      **  Sort data by number of usages per word\n      **\n         SORT Sort-File\n              ON DESCENDING KEY Sort-Word-Cnt\n              USING Output-File\n              GIVING Print-File.\n\n      **\n      **  Show the work done\n      **\n         OPEN INPUT Print-File.\n            DISPLAY \" Rank  Word               Frequency\"\n         PERFORM How-Many TIMES\n            READ Print-File\n            MOVE IRank TO Rank\n            DISPLAY Rank \"  \" Print-Rec\n            ADD 1 TO IRank\n         END-PERFORM.\n\n      **\n      **  Cleanup\n      **\n         CLOSE Print-File.\n         CALL \"C$DELETE\" USING \"Word.txt\" ,0\n         CALL \"C$DELETE\" USING \"Output.txt\" ,0\n\n         STOP RUN.\n         \n\n        Parse-a-Words.\n          INSPECT Input-Record CONVERTING '-.,\"();:/[]{}!?|' TO SPACE \n          PERFORM UNTIL Pos > FUNCTION STORED-CHAR-LENGTH(Input-Record) \n\n\n          UNSTRING Input-Record DELIMITED BY SPACE INTO Word1 \n                    WITH POINTER Pos TALLYING IN Cnt \n          MOVE FUNCTION TRIM(FUNCTION LOWER-CASE(Word1)) TO Word-Record\n          \n          IF Word-Record NOT EQUAL SPACES AND Word-Record IS ALPHABETIC\n             THEN WRITE Word-Record\n          END-IF\n\n          END-PERFORM.\n\n       Collect-Totals.\n          MOVE 'F' to Eof\n          OPEN INPUT Word-File\n          OPEN OUTPUT Output-File\n             READ Word-File\n             MOVE Input-Word TO Current-Word\n             MOVE 1 to Current-Word-Cnt\n          PERFORM UNTIL Eof = 'T'\n             READ Word-File\n                AT END MOVE 'T' TO Eof\n             END-READ\n\n             IF FUNCTION TRIM(Word-Record) \n                    EQUAL \n                           FUNCTION TRIM(Current-Word)\n                THEN\n                     ADD 1 to Current-Word-Cnt\n                ELSE\n                     MOVE Current-Word TO Output-Rec-Word\n                     MOVE Current-Word-Cnt TO Output-Rec-Word-Cnt\n                     WRITE Output-Rec\n                     MOVE 1 to Current-Word-Cnt\n                     MOVE Word-Record TO Current-Word\n                     MOVE SPACES TO Input-Record\n            END-IF \n           \n          END-PERFORM.\n          CLOSE Word-File Output-File.\n       END-PROGRAM.\n"
  },
  "input_files": [
    {
      "file_name": "Parameter.txt",
      "content": "SampleText.txt       00010"
    },
    {
      "file_name": "Printer.txt",
      "content": "the                  00156\nand                  00098\nof                   00087\nto                   00076\nin                   00065\na                    00054\nis                   00048\nthat                 00042\nfor                  00039\nwith                 00035"
    }
  ],
  "output_files": [
    "Word.txt",
    "Output.txt"
  ],
  "input_output_files": [],
  "sysin_file": null
}