{
  "cobol_file": {
    "file_name": "successful_snippet_74961cd5.cob",
    "content": "       >>SOURCE FORMAT FREE\n*> To run do `cobc -x 9.cob && ./9`\nIDENTIFICATION DIVISION.\nprogram-id. main8.\nauthor. Andrew.\ndate-written. Dec 9, 2021.\n\nENVIRONMENT DIVISION.\ninput-output section.\nfile-control. \n       select FP assign to \"9.dat\"\n           organization is line sequential \n           access is sequential.\n\nDATA DIVISION.\nFILE SECTION.\nFD FP.\n01 dataLayout.\n       02  currLine       PIC X(100).\n\nWORKING-STORAGE SECTION.\n01 State.\n       02 WS-A occurs 102 times INDEXED BY J.\n           03 WS-B PIC X(11) value 10 OCCURS 102 TIMES INDEXED BY I.\n\n01 MaxBoarder PIC 99 value 10.\n01 lineCounter PIC 999 value 0.\n01 charCounter PIC 999 value 0.\n01 fakeCounter1 PIC 999 value 0.\n01 fakeCounter2 PIC 999 value 0.\n01 fakeCounter3 PIC 999 value 0.\n01 fakeCounter4 PIC 999 value 0.\n01 temp PIC 99 value 0.\n01 temp1 PIC 99 value 0.\n01 temp2 PIC 99 value 0.\n01 temp3 PIC 99 value 0.\n01 temp4 PIC 99 value 0.\n01 Total PIC 99999999 value 0.\n01 END-OF-FILE PIC Z(1).\n\nPROCEDURE DIVISION.\n*> open file and read\nOPEN INPUT FP\nREAD FP\n       AT END MOVE 1 TO END-OF-FILE\nEND-READ\n\nIF END-OF-FILE = 1\n       CLOSE FP\nEND-IF\n\nMOVE 0 TO END-OF-FILE.\n\n*> debug\n*> DISPLAY State.\n*> for line in file\nMOVE 2 to lineCounter\nPERFORM UNTIL END-OF-FILE = 1\n       SET charCounter to 2\n       PERFORM UNTIL charCounter = 102\n           COMPUTE fakeCounter1 = charCounter - 1\n           *> display currLine(fakeCounter1:1) with no advancing\n           *> SET WS-B(lineCounter, charCounter) to 1\n           MOVE currLine(fakeCounter1:1) to WS-B(lineCounter, charCounter)\n           MOVE WS-B(lineCounter, charCounter) to temp\n           MOVE temp to WS-B(lineCounter, charCounter)\n           COMPUTE charCounter = charCounter + 1\n       END-PERFORM\n\n       COMPUTE lineCounter = lineCounter + 1\n       READ FP\n           AT END MOVE 1 TO END-OF-FILE\n       END-READ\nEND-PERFORM\n*> DISPLAY State.\n\n*> calculate\n\nMOVE 2 to lineCounter\nPERFORM UNTIL lineCounter = 102\n       SET charCounter to 2\n       PERFORM UNTIL charCounter = 102\n           COMPUTE fakeCounter1 = charCounter - 1\n           COMPUTE fakeCounter2 = lineCounter - 1\n           COMPUTE fakeCounter3 = charCounter + 1\n           COMPUTE fakeCounter4 = lineCounter + 1\n           IF WS-B(lineCounter, fakeCounter1) > WS-B(lineCounter, charCounter) and \n           WS-B(lineCounter, fakeCounter3) > WS-B(lineCounter, charCounter) and \n           WS-B(fakeCounter2, charCounter) > WS-B(lineCounter, charCounter) and \n           WS-B(fakeCounter4, charCounter) > WS-B(lineCounter, charCounter) THEN\n               MOVE WS-B(lineCounter, charCounter) to temp\n               *> display temp space with no advancing\n               COMPUTE Total = Total + temp + 1\n           END-IF\n           COMPUTE charCounter = charCounter + 1\n       END-PERFORM\n       *> display \"\"\n       *> display \"-----\"\n\n       COMPUTE lineCounter = lineCounter + 1\nEND-PERFORM\n\nDISPLAY \"Count:\" SPACE Total\n\nSTOP RUN.\n"
  },
  "input_files": [
    {
      "file_name": "9.dat",
      "content": "9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210\n9988776655443322110099887766554433221100998877665544332211009988776655443322110099887766554433221100\n9999888877776666555544443333222211110000999988887777666655554444333322221111000099998888777766665555\n9876543210123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n9999999999000000000999999999000000000999999999000000000999999999000000000999999999000000000999999999\n9012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\n9111111111222222222333333333444444444555555555666666666777777777888888888999999999000000000111111111\n9543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987\n9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
    }
  ],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}