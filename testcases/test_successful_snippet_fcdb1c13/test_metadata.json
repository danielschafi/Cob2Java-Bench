{
  "cobol_file": {
    "file_name": "successful_snippet_fcdb1c13.cob",
    "content": "       program-id. rev-word.\n       data division.\n       working-storage section.\n       1 text-block.\n        2 pic x(36) value \"---------- Ice and Fire ------------\".\n        2 pic x(36) value \"                                    \".\n        2 pic x(36) value \"fire, in end will world the say Some\".\n        2 pic x(36) value \"ice. in say Some                    \".\n        2 pic x(36) value \"desire of tasted I've what From     \".\n        2 pic x(36) value \"fire. favor who those with hold I   \".\n        2 pic x(36) value \"                                    \".\n        2 pic x(36) value \"... elided paragraph last ...       \".\n        2 pic x(36) value \"                                    \".\n        2 pic x(36) value \"Frost Robert -----------------------\".\n       1 redefines text-block.\n        2 occurs 10.\n         3 text-line pic x(36).\n       1 text-word.\n        2 wk-len binary pic 9(4).\n        2 wk-word pic x(36).\n       1 word-stack.\n        2 occurs 10.\n         3 word-entry.\n          4 word-len binary pic 9(4).\n          4 word pic x(36).\n       1 binary.\n        2 i pic 9(4).\n        2 pos pic 9(4).\n        2 word-stack-ptr pic 9(4).\n\n       procedure division.\n           perform varying i from 1 by 1\n           until i > 10\n               perform push-words\n               perform pop-words\n           end-perform\n           stop run\n           .\n\n       push-words.\n           move 1 to pos\n           move 0 to word-stack-ptr\n           perform until pos > 36\n               unstring text-line (i) delimited by all space\n               into wk-word count in wk-len\n               pointer pos\n               end-unstring\n               add 1 to word-stack-ptr\n               move text-word to word-entry (word-stack-ptr)\n           end-perform\n           .\n\n       pop-words.\n           perform varying word-stack-ptr from word-stack-ptr\n               by -1\n           until word-stack-ptr < 1\n               move word-entry (word-stack-ptr) to text-word\n               display wk-word (1:wk-len) space with no advancing\n           end-perform\n           display space\n           .\n       end program rev-word.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}