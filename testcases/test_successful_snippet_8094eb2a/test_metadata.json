{
  "cobol_file": {
    "file_name": "successful_snippet_8094eb2a.cob",
    "content": "000010 @OPTIONS MAIN\n000020 Identification Division.\n000030 Program-Id.  Chapt08x.\n000031* Exercise 8 Solution\n000032*\n000033* This Solution Will Seem Complex And Cumbersome.  It Is.  However,\n000034* The Lesson In Chapter 21 Will Show You Some Methods In Cobol To\n000035* Make This Type Of Problem Very Simple To Solve.\n000036*\n000040 Environment Division.\n000050 Configuration Section.\n000051 Source-Computer.  IBM-PC.\n000055 Object-Computer.  IBM-PC.\n000056 Data Division.\n000057 Working-Storage Section.\n000058 01  Number-1            Pic 99    Value Zeros.\n000059 01  Number-2            Pic 99    Value Zeros.\n000060 01  Number-3            Pic 99    Value Zeros.\n000061 01  Number-4            Pic 99    Value Zeros.\n000071 01  High-Number         Pic 99    Value Zeros.\n000081 01  Low-Number          Pic 99    Value Zeros.\n000082 Screen Section.\n000083 01  Number-Entry Blank Screen.\n000084     03  Line 01 Column 01 Value \"Enter Number 1: \".\n000085     03  Line 01 Column 17 Pic Z9 Using Number-1.\n000086     03  Line 02 Column 01 Value \"Enter Number 2: \".\n000087     03  Line 02 Column 17 Pic Z9 Using Number-2.\n000088     03  Line 03 Column 01 Value \"Enter Number 3: \".\n000089     03  Line 03 Column 17 Pic Z9 Using Number-3.\n000090     03  Line 04 Column 01 Value \"Enter Number 4: \".\n000091     03  Line 04 Column 17 Pic Z9 Using Number-4.\n000092     03  Line 07 Column 01 Value \" Low Number is: \".\n000093     03  Line 07 Column 17 Pic Z9 From  Low-Number.\n000094     03  Line 08 Column 01 Value \"High Number is: \".\n000095     03  Line 08 Column 17 Pic Z9 From  High-Number.\n000096\n000097 Procedure Division.\n000159 Chapt08x-Start.\n000160     Display Number-Entry\n000161     Accept  Number-Entry\n000171* No Matter What, The First Number Starts As The High And The\n000181* Low Number.  It Is The Number All Others Are Compared Against.\n000191     Move Number-1 To High-Number, Low-Number\n000201     If Number-2 < Low-Number\n000211        Move Number-2 To Low-Number\n000221     End-If\n000231     If Number-3 < Low-Number\n000241        Move Number-3 To Low-Number\n000251     End-If\n000261     If Number-4 < Low-Number\n000271        Move Number-4 To Low-Number\n000281     End-If\n000291     If Number-2 > High-Number\n000301        Move Number-2 To High-Number\n000311     End-If\n000321     If Number-3 > High-Number\n000331        Move Number-3 To High-Number\n000341     End-If\n000351     If Number-4 > High-Number\n000361        Move Number-4 To High-Number\n000371     End-If\n000381     Display Number-Entry\n000382     Accept Number-Entry\n000391* Another Method, Not Using The Baseline Numbers.\n000392* Next Statement Clears The Numbers.\n000401     Move Zeros To High-Number Low-Number\n000402* <= Is Used In Case Some Numbers Are Equal\n000411     If Number-1 <= Number-2 And Number-3 And Number-4\n000421        Move Number-1 To Low-Number\n000431        Else\n000441        If Number-2 <= Number-1 And Number-3 And Number-4\n000451           Move Number-2 To Low-Number\n000461           Else\n000471           If Number-3 <= Number-1 And Number-2\n000481                         And Number-4\n000491           Move Number-3 To Low-Number\n000501           Else\n000502* Fourth Is The Only One Left, It Must Be The Lowest!\n000511              Move Number-4 To Low-Number\n000521           End-If\n000531        End-If\n000541     End-If\n000551* Now Find The Highest\n000552     If Number-1 >= Number-2 And Number-3 And Number-4\n000553        Move Number-1 To High-Number\n000554        Else\n000555        If Number-2 >= Number-1 And Number-3 And Number-4\n000556           Move Number-2 To High-Number\n000557           Else\n000558           If Number-3 >= Number-1 And Number-2\n000559                         And Number-4\n000560           Move Number-3 To High-Number\n000561           Else\n000562* Fourth Is The Only One Left, It Must Be The Highest!\n000563              Move Number-4 To High-Number\n000564           End-If\n000565        End-If\n000566     End-If\n000567     Display Number-Entry\n000568     Stop Run\n000569     .\n000570\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": {
    "file_name": "sysin.txt",
    "content": "00125\n00087\n00256\n00043\n00198\n00312\n00067\n00000"
  }
}