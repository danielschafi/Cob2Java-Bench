{
  "cobol_file": {
    "file_name": "successful_snippet_f97d2814.cob",
    "content": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ITERATIVE-TOWERS-OF-HANOI.\n       AUTHOR. SOREN ROUG.\n       DATE-WRITTEN. 2019-06-28.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER. LINUX.\n       OBJECT-COMPUTER. KAYPRO4.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       77  NUM-DISKS                   PIC 9 VALUE 4.\n       77  N1                          PIC 9 COMP.\n       77  N2                          PIC 9 COMP.\n       77  FROM-POLE                   PIC 9 COMP.\n       77  TO-POLE                     PIC 9 COMP.\n       77  VIA-POLE                    PIC 9 COMP.\n       77  FP-TMP                      PIC 9 COMP.\n       77  TO-TMP                      PIC 9 COMP.\n       77  P-TMP                       PIC 9 COMP.\n       77  TMP-P                       PIC 9 COMP.\n       77  I                           PIC 9 COMP.\n       77  DIV                         PIC 9 COMP.\n       01  STACKNUMS.\n           05  NUMSET OCCURS 3 TIMES.\n               10  DNUM                PIC 9 COMP.\n       01  GAMESET.\n           05  POLES OCCURS 3 TIMES.\n               10  STACK OCCURS 10 TIMES.\n                   15  POLE            PIC 9 USAGE COMP.\n\n       PROCEDURE DIVISION.\n       HANOI.\n           DISPLAY \"TOWERS OF HANOI PUZZLE WITH \", NUM-DISKS, \" DISKS.\".\n           ADD NUM-DISKS, 1 GIVING N1.\n           ADD NUM-DISKS, 2 GIVING N2.\n           MOVE 1 TO DNUM (1).\n           MOVE N1 TO DNUM (2), DNUM (3).\n           MOVE N1 TO POLE (1, N1), POLE (2, N1), POLE (3, N1).\n           MOVE 1 TO POLE (1, N2).\n           MOVE 2 TO POLE (2, N2).\n           MOVE 3 TO POLE (3, N2).\n           MOVE 1 TO I.\n           PERFORM INIT-PUZZLE UNTIL I = N1.\n           MOVE 1 TO FROM-POLE.\n           DIVIDE 2 INTO NUM-DISKS GIVING DIV.\n           MULTIPLY 2 BY DIV.\n           IF DIV NOT = NUM-DISKS PERFORM INITODD ELSE PERFORM INITEVEN.\n           PERFORM MOVE-DISK UNTIL DNUM (3) NOT > 1.\n           DISPLAY \"TOWERS OF HANOI PUZZLE COMPLETED!\".\n           STOP RUN.\n       INIT-PUZZLE.\n           MOVE I TO POLE (1, I).\n           MOVE 0 TO POLE (2, I), POLE (3, I).\n           ADD 1 TO I.\n       INITEVEN.\n           MOVE 2 TO TO-POLE.\n           MOVE 3 TO VIA-POLE.\n       INITODD.\n           MOVE 3 TO TO-POLE.\n           MOVE 2 TO VIA-POLE.\n       MOVE-DISK.\n           MOVE DNUM (FROM-POLE) TO FP-TMP.\n           MOVE POLE (FROM-POLE, FP-TMP) TO I.\n           DISPLAY \"MOVE DISK FROM \", POLE (FROM-POLE, N2),\n               \" TO \", POLE (TO-POLE, N2).\n           ADD 1 TO DNUM (FROM-POLE).\n           MOVE VIA-POLE TO TMP-P.\n           SUBTRACT 1 FROM DNUM (TO-POLE).\n           MOVE DNUM (TO-POLE) TO TO-TMP.\n           MOVE I TO POLE (TO-POLE, TO-TMP).\n           DIVIDE 2 INTO I GIVING DIV.\n           MULTIPLY 2 BY DIV.\n           IF I NOT = DIV PERFORM MOVE-TO-VIA ELSE\n               PERFORM MOVE-FROM-VIA.\n       MOVE-TO-VIA.\n           MOVE TO-POLE TO VIA-POLE.\n           MOVE DNUM (FROM-POLE) TO FP-TMP.\n           MOVE DNUM (TMP-P) TO P-TMP.\n           IF POLE (FROM-POLE, FP-TMP) > POLE (TMP-P, P-TMP)\n               PERFORM MOVE-FROM-TO\n           ELSE MOVE TMP-P TO TO-POLE.\n       MOVE-FROM-TO.\n           MOVE FROM-POLE TO TO-POLE.\n           MOVE TMP-P TO FROM-POLE.\n           MOVE DNUM (FROM-POLE) TO FP-TMP.\n           MOVE DNUM (TMP-P) TO P-TMP.\n       MOVE-FROM-VIA.\n           MOVE FROM-POLE TO VIA-POLE.\n           MOVE TMP-P TO FROM-POLE.\n"
  },
  "input_files": [],
  "output_files": [],
  "input_output_files": [],
  "sysin_file": null
}